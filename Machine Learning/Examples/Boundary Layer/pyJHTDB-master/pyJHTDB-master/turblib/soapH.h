/* soapH.h
   Generated by gSOAP 2.8.91 for TurbulenceService.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_float_DEFINED
#define SOAP_TYPE_float_DEFINED

#ifdef SOAP_DEFAULT_float
#define soap_default_float(soap, a) (*(a) = SOAP_DEFAULT_float)
#else
#define soap_default_float(soap, a) (*(a) = (float)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

SOAP_FMAC3 float * SOAP_FMAC4 soap_new_float(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_float(soap, data, "float", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_float
#define soap_PUT_float(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_float
#define soap_PATCH_float(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_float
#define soap_POST_send_float(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_float
#define soap_GET_float(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_float(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_float
#define soap_POST_recv_float(soap, data) ( soap_read_float(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_unsignedByte_DEFINED
#define SOAP_TYPE_unsignedByte_DEFINED

#ifdef SOAP_DEFAULT_unsignedByte
#define soap_default_unsignedByte(soap, a) (*(a) = SOAP_DEFAULT_unsignedByte)
#else
#define soap_default_unsignedByte(soap, a) (*(a) = (unsigned char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_new_unsignedByte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedByte
#define soap_PUT_unsignedByte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_unsignedByte
#define soap_PATCH_unsignedByte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_unsignedByte
#define soap_POST_send_unsignedByte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedByte
#define soap_GET_unsignedByte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedByte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_unsignedByte
#define soap_POST_recv_unsignedByte(soap, data) ( soap_read_unsignedByte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED

#ifdef SOAP_DEFAULT_unsignedInt
#define soap_default_unsignedInt(soap, a) (*(a) = SOAP_DEFAULT_unsignedInt)
#else
#define soap_default_unsignedInt(soap, a) (*(a) = (unsigned int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedInt
#define soap_PUT_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_unsignedInt
#define soap_PATCH_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_unsignedInt
#define soap_POST_send_unsignedInt(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedInt
#define soap_GET_unsignedInt(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedInt(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_unsignedInt
#define soap_POST_recv_unsignedInt(soap, data) ( soap_read_unsignedInt(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__TemporalInterpolation_DEFINED
#define SOAP_TYPE_turb1__TemporalInterpolation_DEFINED

#ifdef SOAP_DEFAULT_turb1__TemporalInterpolation
#define soap_default_turb1__TemporalInterpolation(soap, a) (*(a) = SOAP_DEFAULT_turb1__TemporalInterpolation)
#else
#define soap_default_turb1__TemporalInterpolation(soap, a) (*(a) = (enum turb1__TemporalInterpolation)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__TemporalInterpolation(struct soap*, const char*, int, const enum turb1__TemporalInterpolation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_turb1__TemporalInterpolation2s(struct soap*, enum turb1__TemporalInterpolation);
SOAP_FMAC3 enum turb1__TemporalInterpolation * SOAP_FMAC4 soap_in_turb1__TemporalInterpolation(struct soap*, const char*, enum turb1__TemporalInterpolation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2turb1__TemporalInterpolation(struct soap*, const char*, enum turb1__TemporalInterpolation *);

SOAP_FMAC3 enum turb1__TemporalInterpolation * SOAP_FMAC4 soap_new_turb1__TemporalInterpolation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__TemporalInterpolation(struct soap*, const enum turb1__TemporalInterpolation *, const char*, const char*);

#ifndef soap_write_turb1__TemporalInterpolation
#define soap_write_turb1__TemporalInterpolation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_turb1__TemporalInterpolation(soap, data, "turb1:TemporalInterpolation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__TemporalInterpolation
#define soap_PUT_turb1__TemporalInterpolation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__TemporalInterpolation(soap, data, "turb1:TemporalInterpolation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__TemporalInterpolation
#define soap_PATCH_turb1__TemporalInterpolation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__TemporalInterpolation(soap, data, "turb1:TemporalInterpolation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__TemporalInterpolation
#define soap_POST_send_turb1__TemporalInterpolation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__TemporalInterpolation(soap, data, "turb1:TemporalInterpolation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum turb1__TemporalInterpolation * SOAP_FMAC4 soap_get_turb1__TemporalInterpolation(struct soap*, enum turb1__TemporalInterpolation *, const char*, const char*);

#ifndef soap_read_turb1__TemporalInterpolation
#define soap_read_turb1__TemporalInterpolation(soap, data) ( soap_begin_recv(soap) || !soap_get_turb1__TemporalInterpolation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__TemporalInterpolation
#define soap_GET_turb1__TemporalInterpolation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__TemporalInterpolation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__TemporalInterpolation
#define soap_POST_recv_turb1__TemporalInterpolation(soap, data) ( soap_read_turb1__TemporalInterpolation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__SpatialInterpolation_DEFINED
#define SOAP_TYPE_turb1__SpatialInterpolation_DEFINED

#ifdef SOAP_DEFAULT_turb1__SpatialInterpolation
#define soap_default_turb1__SpatialInterpolation(soap, a) (*(a) = SOAP_DEFAULT_turb1__SpatialInterpolation)
#else
#define soap_default_turb1__SpatialInterpolation(soap, a) (*(a) = (enum turb1__SpatialInterpolation)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__SpatialInterpolation(struct soap*, const char*, int, const enum turb1__SpatialInterpolation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_turb1__SpatialInterpolation2s(struct soap*, enum turb1__SpatialInterpolation);
SOAP_FMAC3 enum turb1__SpatialInterpolation * SOAP_FMAC4 soap_in_turb1__SpatialInterpolation(struct soap*, const char*, enum turb1__SpatialInterpolation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2turb1__SpatialInterpolation(struct soap*, const char*, enum turb1__SpatialInterpolation *);

SOAP_FMAC3 enum turb1__SpatialInterpolation * SOAP_FMAC4 soap_new_turb1__SpatialInterpolation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__SpatialInterpolation(struct soap*, const enum turb1__SpatialInterpolation *, const char*, const char*);

#ifndef soap_write_turb1__SpatialInterpolation
#define soap_write_turb1__SpatialInterpolation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_turb1__SpatialInterpolation(soap, data, "turb1:SpatialInterpolation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__SpatialInterpolation
#define soap_PUT_turb1__SpatialInterpolation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__SpatialInterpolation(soap, data, "turb1:SpatialInterpolation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__SpatialInterpolation
#define soap_PATCH_turb1__SpatialInterpolation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__SpatialInterpolation(soap, data, "turb1:SpatialInterpolation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__SpatialInterpolation
#define soap_POST_send_turb1__SpatialInterpolation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_turb1__SpatialInterpolation(soap, data, "turb1:SpatialInterpolation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum turb1__SpatialInterpolation * SOAP_FMAC4 soap_get_turb1__SpatialInterpolation(struct soap*, enum turb1__SpatialInterpolation *, const char*, const char*);

#ifndef soap_read_turb1__SpatialInterpolation
#define soap_read_turb1__SpatialInterpolation(soap, data) ( soap_begin_recv(soap) || !soap_get_turb1__SpatialInterpolation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__SpatialInterpolation
#define soap_GET_turb1__SpatialInterpolation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__SpatialInterpolation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__SpatialInterpolation
#define soap_POST_recv_turb1__SpatialInterpolation(soap, data) ( soap_read_turb1__SpatialInterpolation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE___turb1__GetThreshold_USCOREPython__DEFINED
#define SOAP_TYPE___turb1__GetThreshold_USCOREPython__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetThreshold_USCOREPython_(struct soap*, struct __turb1__GetThreshold_USCOREPython_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetThreshold_USCOREPython_(struct soap*, const struct __turb1__GetThreshold_USCOREPython_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetThreshold_USCOREPython_(struct soap*, const char*, int, const struct __turb1__GetThreshold_USCOREPython_ *, const char*);
SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython_ * SOAP_FMAC4 soap_in___turb1__GetThreshold_USCOREPython_(struct soap*, const char*, struct __turb1__GetThreshold_USCOREPython_ *, const char*);

SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython_ * SOAP_FMAC4 soap_new___turb1__GetThreshold_USCOREPython_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetThreshold_USCOREPython_(struct soap*, const struct __turb1__GetThreshold_USCOREPython_ *, const char*, const char*);

#ifndef soap_write___turb1__GetThreshold_USCOREPython_
#define soap_write___turb1__GetThreshold_USCOREPython_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetThreshold_USCOREPython_(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython_(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetThreshold_USCOREPython_
#define soap_PUT___turb1__GetThreshold_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython_(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython_(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetThreshold_USCOREPython_
#define soap_PATCH___turb1__GetThreshold_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython_(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython_(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetThreshold_USCOREPython_
#define soap_POST_send___turb1__GetThreshold_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython_(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython_(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython_ * SOAP_FMAC4 soap_get___turb1__GetThreshold_USCOREPython_(struct soap*, struct __turb1__GetThreshold_USCOREPython_ *, const char*, const char*);

#ifndef soap_read___turb1__GetThreshold_USCOREPython_
#define soap_read___turb1__GetThreshold_USCOREPython_(soap, data) ( ((data) ? (soap_default___turb1__GetThreshold_USCOREPython_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetThreshold_USCOREPython_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetThreshold_USCOREPython_
#define soap_GET___turb1__GetThreshold_USCOREPython_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetThreshold_USCOREPython_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetThreshold_USCOREPython_
#define soap_POST_recv___turb1__GetThreshold_USCOREPython_(soap, data) ( soap_read___turb1__GetThreshold_USCOREPython_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPosition_USCOREPython__DEFINED
#define SOAP_TYPE___turb1__GetPosition_USCOREPython__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPosition_USCOREPython_(struct soap*, struct __turb1__GetPosition_USCOREPython_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPosition_USCOREPython_(struct soap*, const struct __turb1__GetPosition_USCOREPython_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPosition_USCOREPython_(struct soap*, const char*, int, const struct __turb1__GetPosition_USCOREPython_ *, const char*);
SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython_ * SOAP_FMAC4 soap_in___turb1__GetPosition_USCOREPython_(struct soap*, const char*, struct __turb1__GetPosition_USCOREPython_ *, const char*);

SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython_ * SOAP_FMAC4 soap_new___turb1__GetPosition_USCOREPython_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPosition_USCOREPython_(struct soap*, const struct __turb1__GetPosition_USCOREPython_ *, const char*, const char*);

#ifndef soap_write___turb1__GetPosition_USCOREPython_
#define soap_write___turb1__GetPosition_USCOREPython_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPosition_USCOREPython_(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython_(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPosition_USCOREPython_
#define soap_PUT___turb1__GetPosition_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython_(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython_(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPosition_USCOREPython_
#define soap_PATCH___turb1__GetPosition_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython_(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython_(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPosition_USCOREPython_
#define soap_POST_send___turb1__GetPosition_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython_(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython_(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython_ * SOAP_FMAC4 soap_get___turb1__GetPosition_USCOREPython_(struct soap*, struct __turb1__GetPosition_USCOREPython_ *, const char*, const char*);

#ifndef soap_read___turb1__GetPosition_USCOREPython_
#define soap_read___turb1__GetPosition_USCOREPython_(soap, data) ( ((data) ? (soap_default___turb1__GetPosition_USCOREPython_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPosition_USCOREPython_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPosition_USCOREPython_
#define soap_GET___turb1__GetPosition_USCOREPython_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPosition_USCOREPython_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPosition_USCOREPython_
#define soap_POST_recv___turb1__GetPosition_USCOREPython_(soap, data) ( soap_read___turb1__GetPosition_USCOREPython_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetFilter_USCOREPython__DEFINED
#define SOAP_TYPE___turb1__GetFilter_USCOREPython__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetFilter_USCOREPython_(struct soap*, struct __turb1__GetFilter_USCOREPython_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetFilter_USCOREPython_(struct soap*, const struct __turb1__GetFilter_USCOREPython_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetFilter_USCOREPython_(struct soap*, const char*, int, const struct __turb1__GetFilter_USCOREPython_ *, const char*);
SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython_ * SOAP_FMAC4 soap_in___turb1__GetFilter_USCOREPython_(struct soap*, const char*, struct __turb1__GetFilter_USCOREPython_ *, const char*);

SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython_ * SOAP_FMAC4 soap_new___turb1__GetFilter_USCOREPython_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetFilter_USCOREPython_(struct soap*, const struct __turb1__GetFilter_USCOREPython_ *, const char*, const char*);

#ifndef soap_write___turb1__GetFilter_USCOREPython_
#define soap_write___turb1__GetFilter_USCOREPython_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetFilter_USCOREPython_(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython_(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetFilter_USCOREPython_
#define soap_PUT___turb1__GetFilter_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython_(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython_(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetFilter_USCOREPython_
#define soap_PATCH___turb1__GetFilter_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython_(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython_(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetFilter_USCOREPython_
#define soap_POST_send___turb1__GetFilter_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython_(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython_(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython_ * SOAP_FMAC4 soap_get___turb1__GetFilter_USCOREPython_(struct soap*, struct __turb1__GetFilter_USCOREPython_ *, const char*, const char*);

#ifndef soap_read___turb1__GetFilter_USCOREPython_
#define soap_read___turb1__GetFilter_USCOREPython_(soap, data) ( ((data) ? (soap_default___turb1__GetFilter_USCOREPython_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetFilter_USCOREPython_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetFilter_USCOREPython_
#define soap_GET___turb1__GetFilter_USCOREPython_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetFilter_USCOREPython_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetFilter_USCOREPython_
#define soap_POST_recv___turb1__GetFilter_USCOREPython_(soap, data) ( soap_read___turb1__GetFilter_USCOREPython_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetData_USCOREPython__DEFINED
#define SOAP_TYPE___turb1__GetData_USCOREPython__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetData_USCOREPython_(struct soap*, struct __turb1__GetData_USCOREPython_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetData_USCOREPython_(struct soap*, const struct __turb1__GetData_USCOREPython_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetData_USCOREPython_(struct soap*, const char*, int, const struct __turb1__GetData_USCOREPython_ *, const char*);
SOAP_FMAC3 struct __turb1__GetData_USCOREPython_ * SOAP_FMAC4 soap_in___turb1__GetData_USCOREPython_(struct soap*, const char*, struct __turb1__GetData_USCOREPython_ *, const char*);

SOAP_FMAC3 struct __turb1__GetData_USCOREPython_ * SOAP_FMAC4 soap_new___turb1__GetData_USCOREPython_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetData_USCOREPython_(struct soap*, const struct __turb1__GetData_USCOREPython_ *, const char*, const char*);

#ifndef soap_write___turb1__GetData_USCOREPython_
#define soap_write___turb1__GetData_USCOREPython_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetData_USCOREPython_(soap, data), 0) || soap_put___turb1__GetData_USCOREPython_(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetData_USCOREPython_
#define soap_PUT___turb1__GetData_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython_(soap, data), 0) || soap_put___turb1__GetData_USCOREPython_(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetData_USCOREPython_
#define soap_PATCH___turb1__GetData_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython_(soap, data), 0) || soap_put___turb1__GetData_USCOREPython_(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetData_USCOREPython_
#define soap_POST_send___turb1__GetData_USCOREPython_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython_(soap, data), 0) || soap_put___turb1__GetData_USCOREPython_(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetData_USCOREPython_ * SOAP_FMAC4 soap_get___turb1__GetData_USCOREPython_(struct soap*, struct __turb1__GetData_USCOREPython_ *, const char*, const char*);

#ifndef soap_read___turb1__GetData_USCOREPython_
#define soap_read___turb1__GetData_USCOREPython_(soap, data) ( ((data) ? (soap_default___turb1__GetData_USCOREPython_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetData_USCOREPython_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetData_USCOREPython_
#define soap_GET___turb1__GetData_USCOREPython_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetData_USCOREPython_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetData_USCOREPython_
#define soap_POST_recv___turb1__GetData_USCOREPython_(soap, data) ( soap_read___turb1__GetData_USCOREPython_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetAnyCutoutWeb__DEFINED
#define SOAP_TYPE___turb1__GetAnyCutoutWeb__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetAnyCutoutWeb_(struct soap*, struct __turb1__GetAnyCutoutWeb_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetAnyCutoutWeb_(struct soap*, const struct __turb1__GetAnyCutoutWeb_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetAnyCutoutWeb_(struct soap*, const char*, int, const struct __turb1__GetAnyCutoutWeb_ *, const char*);
SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb_ * SOAP_FMAC4 soap_in___turb1__GetAnyCutoutWeb_(struct soap*, const char*, struct __turb1__GetAnyCutoutWeb_ *, const char*);

SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb_ * SOAP_FMAC4 soap_new___turb1__GetAnyCutoutWeb_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetAnyCutoutWeb_(struct soap*, const struct __turb1__GetAnyCutoutWeb_ *, const char*, const char*);

#ifndef soap_write___turb1__GetAnyCutoutWeb_
#define soap_write___turb1__GetAnyCutoutWeb_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetAnyCutoutWeb_(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb_(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetAnyCutoutWeb_
#define soap_PUT___turb1__GetAnyCutoutWeb_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb_(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb_(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetAnyCutoutWeb_
#define soap_PATCH___turb1__GetAnyCutoutWeb_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb_(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb_(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetAnyCutoutWeb_
#define soap_POST_send___turb1__GetAnyCutoutWeb_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb_(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb_(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb_ * SOAP_FMAC4 soap_get___turb1__GetAnyCutoutWeb_(struct soap*, struct __turb1__GetAnyCutoutWeb_ *, const char*, const char*);

#ifndef soap_read___turb1__GetAnyCutoutWeb_
#define soap_read___turb1__GetAnyCutoutWeb_(soap, data) ( ((data) ? (soap_default___turb1__GetAnyCutoutWeb_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetAnyCutoutWeb_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetAnyCutoutWeb_
#define soap_GET___turb1__GetAnyCutoutWeb_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetAnyCutoutWeb_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetAnyCutoutWeb_
#define soap_POST_recv___turb1__GetAnyCutoutWeb_(soap, data) ( soap_read___turb1__GetAnyCutoutWeb_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawTemperature__DEFINED
#define SOAP_TYPE___turb1__GetRawTemperature__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawTemperature_(struct soap*, struct __turb1__GetRawTemperature_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawTemperature_(struct soap*, const struct __turb1__GetRawTemperature_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawTemperature_(struct soap*, const char*, int, const struct __turb1__GetRawTemperature_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawTemperature_ * SOAP_FMAC4 soap_in___turb1__GetRawTemperature_(struct soap*, const char*, struct __turb1__GetRawTemperature_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawTemperature_ * SOAP_FMAC4 soap_new___turb1__GetRawTemperature_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawTemperature_(struct soap*, const struct __turb1__GetRawTemperature_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawTemperature_
#define soap_write___turb1__GetRawTemperature_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawTemperature_(soap, data), 0) || soap_put___turb1__GetRawTemperature_(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawTemperature_
#define soap_PUT___turb1__GetRawTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature_(soap, data), 0) || soap_put___turb1__GetRawTemperature_(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawTemperature_
#define soap_PATCH___turb1__GetRawTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature_(soap, data), 0) || soap_put___turb1__GetRawTemperature_(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawTemperature_
#define soap_POST_send___turb1__GetRawTemperature_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature_(soap, data), 0) || soap_put___turb1__GetRawTemperature_(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawTemperature_ * SOAP_FMAC4 soap_get___turb1__GetRawTemperature_(struct soap*, struct __turb1__GetRawTemperature_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawTemperature_
#define soap_read___turb1__GetRawTemperature_(soap, data) ( ((data) ? (soap_default___turb1__GetRawTemperature_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawTemperature_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawTemperature_
#define soap_GET___turb1__GetRawTemperature_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawTemperature_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawTemperature_
#define soap_POST_recv___turb1__GetRawTemperature_(soap, data) ( soap_read___turb1__GetRawTemperature_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawDensity__DEFINED
#define SOAP_TYPE___turb1__GetRawDensity__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawDensity_(struct soap*, struct __turb1__GetRawDensity_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawDensity_(struct soap*, const struct __turb1__GetRawDensity_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawDensity_(struct soap*, const char*, int, const struct __turb1__GetRawDensity_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawDensity_ * SOAP_FMAC4 soap_in___turb1__GetRawDensity_(struct soap*, const char*, struct __turb1__GetRawDensity_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawDensity_ * SOAP_FMAC4 soap_new___turb1__GetRawDensity_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawDensity_(struct soap*, const struct __turb1__GetRawDensity_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawDensity_
#define soap_write___turb1__GetRawDensity_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawDensity_(soap, data), 0) || soap_put___turb1__GetRawDensity_(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawDensity_
#define soap_PUT___turb1__GetRawDensity_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity_(soap, data), 0) || soap_put___turb1__GetRawDensity_(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawDensity_
#define soap_PATCH___turb1__GetRawDensity_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity_(soap, data), 0) || soap_put___turb1__GetRawDensity_(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawDensity_
#define soap_POST_send___turb1__GetRawDensity_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity_(soap, data), 0) || soap_put___turb1__GetRawDensity_(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawDensity_ * SOAP_FMAC4 soap_get___turb1__GetRawDensity_(struct soap*, struct __turb1__GetRawDensity_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawDensity_
#define soap_read___turb1__GetRawDensity_(soap, data) ( ((data) ? (soap_default___turb1__GetRawDensity_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawDensity_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawDensity_
#define soap_GET___turb1__GetRawDensity_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawDensity_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawDensity_
#define soap_POST_recv___turb1__GetRawDensity_(soap, data) ( soap_read___turb1__GetRawDensity_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawPressure__DEFINED
#define SOAP_TYPE___turb1__GetRawPressure__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawPressure_(struct soap*, struct __turb1__GetRawPressure_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawPressure_(struct soap*, const struct __turb1__GetRawPressure_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawPressure_(struct soap*, const char*, int, const struct __turb1__GetRawPressure_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawPressure_ * SOAP_FMAC4 soap_in___turb1__GetRawPressure_(struct soap*, const char*, struct __turb1__GetRawPressure_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawPressure_ * SOAP_FMAC4 soap_new___turb1__GetRawPressure_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawPressure_(struct soap*, const struct __turb1__GetRawPressure_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawPressure_
#define soap_write___turb1__GetRawPressure_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawPressure_(soap, data), 0) || soap_put___turb1__GetRawPressure_(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawPressure_
#define soap_PUT___turb1__GetRawPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure_(soap, data), 0) || soap_put___turb1__GetRawPressure_(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawPressure_
#define soap_PATCH___turb1__GetRawPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure_(soap, data), 0) || soap_put___turb1__GetRawPressure_(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawPressure_
#define soap_POST_send___turb1__GetRawPressure_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure_(soap, data), 0) || soap_put___turb1__GetRawPressure_(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawPressure_ * SOAP_FMAC4 soap_get___turb1__GetRawPressure_(struct soap*, struct __turb1__GetRawPressure_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawPressure_
#define soap_read___turb1__GetRawPressure_(soap, data) ( ((data) ? (soap_default___turb1__GetRawPressure_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawPressure_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawPressure_
#define soap_GET___turb1__GetRawPressure_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawPressure_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawPressure_
#define soap_POST_recv___turb1__GetRawPressure_(soap, data) ( soap_read___turb1__GetRawPressure_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawVectorPotential__DEFINED
#define SOAP_TYPE___turb1__GetRawVectorPotential__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawVectorPotential_(struct soap*, struct __turb1__GetRawVectorPotential_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawVectorPotential_(struct soap*, const struct __turb1__GetRawVectorPotential_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawVectorPotential_(struct soap*, const char*, int, const struct __turb1__GetRawVectorPotential_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawVectorPotential_ * SOAP_FMAC4 soap_in___turb1__GetRawVectorPotential_(struct soap*, const char*, struct __turb1__GetRawVectorPotential_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawVectorPotential_ * SOAP_FMAC4 soap_new___turb1__GetRawVectorPotential_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawVectorPotential_(struct soap*, const struct __turb1__GetRawVectorPotential_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawVectorPotential_
#define soap_write___turb1__GetRawVectorPotential_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawVectorPotential_(soap, data), 0) || soap_put___turb1__GetRawVectorPotential_(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawVectorPotential_
#define soap_PUT___turb1__GetRawVectorPotential_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential_(soap, data), 0) || soap_put___turb1__GetRawVectorPotential_(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawVectorPotential_
#define soap_PATCH___turb1__GetRawVectorPotential_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential_(soap, data), 0) || soap_put___turb1__GetRawVectorPotential_(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawVectorPotential_
#define soap_POST_send___turb1__GetRawVectorPotential_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential_(soap, data), 0) || soap_put___turb1__GetRawVectorPotential_(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawVectorPotential_ * SOAP_FMAC4 soap_get___turb1__GetRawVectorPotential_(struct soap*, struct __turb1__GetRawVectorPotential_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawVectorPotential_
#define soap_read___turb1__GetRawVectorPotential_(soap, data) ( ((data) ? (soap_default___turb1__GetRawVectorPotential_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawVectorPotential_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawVectorPotential_
#define soap_GET___turb1__GetRawVectorPotential_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawVectorPotential_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawVectorPotential_
#define soap_POST_recv___turb1__GetRawVectorPotential_(soap, data) ( soap_read___turb1__GetRawVectorPotential_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawMagneticField__DEFINED
#define SOAP_TYPE___turb1__GetRawMagneticField__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawMagneticField_(struct soap*, struct __turb1__GetRawMagneticField_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawMagneticField_(struct soap*, const struct __turb1__GetRawMagneticField_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawMagneticField_(struct soap*, const char*, int, const struct __turb1__GetRawMagneticField_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawMagneticField_ * SOAP_FMAC4 soap_in___turb1__GetRawMagneticField_(struct soap*, const char*, struct __turb1__GetRawMagneticField_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawMagneticField_ * SOAP_FMAC4 soap_new___turb1__GetRawMagneticField_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawMagneticField_(struct soap*, const struct __turb1__GetRawMagneticField_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawMagneticField_
#define soap_write___turb1__GetRawMagneticField_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawMagneticField_(soap, data), 0) || soap_put___turb1__GetRawMagneticField_(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawMagneticField_
#define soap_PUT___turb1__GetRawMagneticField_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField_(soap, data), 0) || soap_put___turb1__GetRawMagneticField_(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawMagneticField_
#define soap_PATCH___turb1__GetRawMagneticField_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField_(soap, data), 0) || soap_put___turb1__GetRawMagneticField_(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawMagneticField_
#define soap_POST_send___turb1__GetRawMagneticField_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField_(soap, data), 0) || soap_put___turb1__GetRawMagneticField_(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawMagneticField_ * SOAP_FMAC4 soap_get___turb1__GetRawMagneticField_(struct soap*, struct __turb1__GetRawMagneticField_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawMagneticField_
#define soap_read___turb1__GetRawMagneticField_(soap, data) ( ((data) ? (soap_default___turb1__GetRawMagneticField_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawMagneticField_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawMagneticField_
#define soap_GET___turb1__GetRawMagneticField_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawMagneticField_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawMagneticField_
#define soap_POST_recv___turb1__GetRawMagneticField_(soap, data) ( soap_read___turb1__GetRawMagneticField_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawVelocity__DEFINED
#define SOAP_TYPE___turb1__GetRawVelocity__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawVelocity_(struct soap*, struct __turb1__GetRawVelocity_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawVelocity_(struct soap*, const struct __turb1__GetRawVelocity_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawVelocity_(struct soap*, const char*, int, const struct __turb1__GetRawVelocity_ *, const char*);
SOAP_FMAC3 struct __turb1__GetRawVelocity_ * SOAP_FMAC4 soap_in___turb1__GetRawVelocity_(struct soap*, const char*, struct __turb1__GetRawVelocity_ *, const char*);

SOAP_FMAC3 struct __turb1__GetRawVelocity_ * SOAP_FMAC4 soap_new___turb1__GetRawVelocity_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawVelocity_(struct soap*, const struct __turb1__GetRawVelocity_ *, const char*, const char*);

#ifndef soap_write___turb1__GetRawVelocity_
#define soap_write___turb1__GetRawVelocity_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawVelocity_(soap, data), 0) || soap_put___turb1__GetRawVelocity_(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawVelocity_
#define soap_PUT___turb1__GetRawVelocity_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity_(soap, data), 0) || soap_put___turb1__GetRawVelocity_(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawVelocity_
#define soap_PATCH___turb1__GetRawVelocity_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity_(soap, data), 0) || soap_put___turb1__GetRawVelocity_(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawVelocity_
#define soap_POST_send___turb1__GetRawVelocity_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity_(soap, data), 0) || soap_put___turb1__GetRawVelocity_(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawVelocity_ * SOAP_FMAC4 soap_get___turb1__GetRawVelocity_(struct soap*, struct __turb1__GetRawVelocity_ *, const char*, const char*);

#ifndef soap_read___turb1__GetRawVelocity_
#define soap_read___turb1__GetRawVelocity_(soap, data) ( ((data) ? (soap_default___turb1__GetRawVelocity_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawVelocity_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawVelocity_
#define soap_GET___turb1__GetRawVelocity_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawVelocity_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawVelocity_
#define soap_POST_recv___turb1__GetRawVelocity_(soap, data) ( soap_read___turb1__GetRawVelocity_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityBatch__DEFINED
#define SOAP_TYPE___turb1__GetVelocityBatch__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityBatch_(struct soap*, struct __turb1__GetVelocityBatch_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityBatch_(struct soap*, const struct __turb1__GetVelocityBatch_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityBatch_(struct soap*, const char*, int, const struct __turb1__GetVelocityBatch_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityBatch_ * SOAP_FMAC4 soap_in___turb1__GetVelocityBatch_(struct soap*, const char*, struct __turb1__GetVelocityBatch_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityBatch_ * SOAP_FMAC4 soap_new___turb1__GetVelocityBatch_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityBatch_(struct soap*, const struct __turb1__GetVelocityBatch_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityBatch_
#define soap_write___turb1__GetVelocityBatch_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityBatch_(soap, data), 0) || soap_put___turb1__GetVelocityBatch_(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityBatch_
#define soap_PUT___turb1__GetVelocityBatch_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch_(soap, data), 0) || soap_put___turb1__GetVelocityBatch_(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityBatch_
#define soap_PATCH___turb1__GetVelocityBatch_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch_(soap, data), 0) || soap_put___turb1__GetVelocityBatch_(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityBatch_
#define soap_POST_send___turb1__GetVelocityBatch_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch_(soap, data), 0) || soap_put___turb1__GetVelocityBatch_(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityBatch_ * SOAP_FMAC4 soap_get___turb1__GetVelocityBatch_(struct soap*, struct __turb1__GetVelocityBatch_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityBatch_
#define soap_read___turb1__GetVelocityBatch_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityBatch_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityBatch_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityBatch_
#define soap_GET___turb1__GetVelocityBatch_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityBatch_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityBatch_
#define soap_POST_recv___turb1__GetVelocityBatch_(soap, data) ( soap_read___turb1__GetVelocityBatch_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetLaplacianOfGradient__DEFINED
#define SOAP_TYPE___turb1__GetLaplacianOfGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetLaplacianOfGradient_(struct soap*, struct __turb1__GetLaplacianOfGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetLaplacianOfGradient_(struct soap*, const struct __turb1__GetLaplacianOfGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetLaplacianOfGradient_(struct soap*, const char*, int, const struct __turb1__GetLaplacianOfGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient_ * SOAP_FMAC4 soap_in___turb1__GetLaplacianOfGradient_(struct soap*, const char*, struct __turb1__GetLaplacianOfGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient_ * SOAP_FMAC4 soap_new___turb1__GetLaplacianOfGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetLaplacianOfGradient_(struct soap*, const struct __turb1__GetLaplacianOfGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetLaplacianOfGradient_
#define soap_write___turb1__GetLaplacianOfGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetLaplacianOfGradient_(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient_(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetLaplacianOfGradient_
#define soap_PUT___turb1__GetLaplacianOfGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient_(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient_(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetLaplacianOfGradient_
#define soap_PATCH___turb1__GetLaplacianOfGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient_(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient_(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetLaplacianOfGradient_
#define soap_POST_send___turb1__GetLaplacianOfGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient_(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient_(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient_ * SOAP_FMAC4 soap_get___turb1__GetLaplacianOfGradient_(struct soap*, struct __turb1__GetLaplacianOfGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetLaplacianOfGradient_
#define soap_read___turb1__GetLaplacianOfGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetLaplacianOfGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetLaplacianOfGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetLaplacianOfGradient_
#define soap_GET___turb1__GetLaplacianOfGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetLaplacianOfGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetLaplacianOfGradient_
#define soap_POST_recv___turb1__GetLaplacianOfGradient_(soap, data) ( soap_read___turb1__GetLaplacianOfGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterGradient__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterGradient_(struct soap*, struct __turb1__GetBoxFilterGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterGradient_(struct soap*, const struct __turb1__GetBoxFilterGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterGradient_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterGradient_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterGradient_(struct soap*, const char*, struct __turb1__GetBoxFilterGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterGradient_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterGradient_(struct soap*, const struct __turb1__GetBoxFilterGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterGradient_
#define soap_write___turb1__GetBoxFilterGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterGradient_(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient_(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterGradient_
#define soap_PUT___turb1__GetBoxFilterGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient_(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient_(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterGradient_
#define soap_PATCH___turb1__GetBoxFilterGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient_(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient_(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterGradient_
#define soap_POST_send___turb1__GetBoxFilterGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient_(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient_(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterGradient_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterGradient_(struct soap*, struct __turb1__GetBoxFilterGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterGradient_
#define soap_read___turb1__GetBoxFilterGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterGradient_
#define soap_GET___turb1__GetBoxFilterGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterGradient_
#define soap_POST_recv___turb1__GetBoxFilterGradient_(soap, data) ( soap_read___turb1__GetBoxFilterGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSscalar__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSscalar__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSscalar_(struct soap*, struct __turb1__GetBoxFilterSGSscalar_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSscalar_(struct soap*, const struct __turb1__GetBoxFilterSGSscalar_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSscalar_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSscalar_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSscalar_(struct soap*, const char*, struct __turb1__GetBoxFilterSGSscalar_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSscalar_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSscalar_(struct soap*, const struct __turb1__GetBoxFilterSGSscalar_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSscalar_
#define soap_write___turb1__GetBoxFilterSGSscalar_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSscalar_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar_(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSscalar_
#define soap_PUT___turb1__GetBoxFilterSGSscalar_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar_(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSscalar_
#define soap_PATCH___turb1__GetBoxFilterSGSscalar_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar_(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSscalar_
#define soap_POST_send___turb1__GetBoxFilterSGSscalar_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar_(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSscalar_(struct soap*, struct __turb1__GetBoxFilterSGSscalar_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSscalar_
#define soap_read___turb1__GetBoxFilterSGSscalar_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSscalar_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSscalar_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSscalar_
#define soap_GET___turb1__GetBoxFilterSGSscalar_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSscalar_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSscalar_
#define soap_POST_recv___turb1__GetBoxFilterSGSscalar_(soap, data) ( soap_read___turb1__GetBoxFilterSGSscalar_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSvector__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSvector__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSvector_(struct soap*, struct __turb1__GetBoxFilterSGSvector_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSvector_(struct soap*, const struct __turb1__GetBoxFilterSGSvector_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSvector_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSvector_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSvector_(struct soap*, const char*, struct __turb1__GetBoxFilterSGSvector_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSvector_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSvector_(struct soap*, const struct __turb1__GetBoxFilterSGSvector_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSvector_
#define soap_write___turb1__GetBoxFilterSGSvector_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSvector_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector_(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSvector_
#define soap_PUT___turb1__GetBoxFilterSGSvector_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector_(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSvector_
#define soap_PATCH___turb1__GetBoxFilterSGSvector_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector_(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSvector_
#define soap_POST_send___turb1__GetBoxFilterSGSvector_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector_(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSvector_(struct soap*, struct __turb1__GetBoxFilterSGSvector_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSvector_
#define soap_read___turb1__GetBoxFilterSGSvector_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSvector_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSvector_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSvector_
#define soap_GET___turb1__GetBoxFilterSGSvector_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSvector_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSvector_
#define soap_POST_recv___turb1__GetBoxFilterSGSvector_(soap, data) ( soap_read___turb1__GetBoxFilterSGSvector_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGStensor__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGStensor__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGStensor_(struct soap*, struct __turb1__GetBoxFilterSGStensor_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGStensor_(struct soap*, const struct __turb1__GetBoxFilterSGStensor_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGStensor_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGStensor_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGStensor_(struct soap*, const char*, struct __turb1__GetBoxFilterSGStensor_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGStensor_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGStensor_(struct soap*, const struct __turb1__GetBoxFilterSGStensor_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGStensor_
#define soap_write___turb1__GetBoxFilterSGStensor_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGStensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor_(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGStensor_
#define soap_PUT___turb1__GetBoxFilterSGStensor_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor_(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGStensor_
#define soap_PATCH___turb1__GetBoxFilterSGStensor_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor_(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGStensor_
#define soap_POST_send___turb1__GetBoxFilterSGStensor_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor_(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGStensor_(struct soap*, struct __turb1__GetBoxFilterSGStensor_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGStensor_
#define soap_read___turb1__GetBoxFilterSGStensor_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGStensor_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGStensor_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGStensor_
#define soap_GET___turb1__GetBoxFilterSGStensor_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGStensor_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGStensor_
#define soap_POST_recv___turb1__GetBoxFilterSGStensor_(soap, data) ( soap_read___turb1__GetBoxFilterSGStensor_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSsymtensor_(struct soap*, struct __turb1__GetBoxFilterSGSsymtensor_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSsymtensor_(struct soap*, const struct __turb1__GetBoxFilterSGSsymtensor_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSsymtensor_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSsymtensor_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSsymtensor_(struct soap*, const char*, struct __turb1__GetBoxFilterSGSsymtensor_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSsymtensor_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSsymtensor_(struct soap*, const struct __turb1__GetBoxFilterSGSsymtensor_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSsymtensor_
#define soap_write___turb1__GetBoxFilterSGSsymtensor_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSsymtensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor_(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSsymtensor_
#define soap_PUT___turb1__GetBoxFilterSGSsymtensor_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor_(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSsymtensor_
#define soap_PATCH___turb1__GetBoxFilterSGSsymtensor_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor_(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSsymtensor_
#define soap_POST_send___turb1__GetBoxFilterSGSsymtensor_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor_(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSsymtensor_(struct soap*, struct __turb1__GetBoxFilterSGSsymtensor_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSsymtensor_
#define soap_read___turb1__GetBoxFilterSGSsymtensor_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSsymtensor_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSsymtensor_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSsymtensor_
#define soap_GET___turb1__GetBoxFilterSGSsymtensor_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSsymtensor_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSsymtensor_
#define soap_POST_recv___turb1__GetBoxFilterSGSsymtensor_(soap, data) ( soap_read___turb1__GetBoxFilterSGSsymtensor_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGS__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGS__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGS_(struct soap*, struct __turb1__GetBoxFilterSGS_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGS_(struct soap*, const struct __turb1__GetBoxFilterSGS_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGS_(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGS_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGS_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGS_(struct soap*, const char*, struct __turb1__GetBoxFilterSGS_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGS_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGS_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGS_(struct soap*, const struct __turb1__GetBoxFilterSGS_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGS_
#define soap_write___turb1__GetBoxFilterSGS_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGS_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS_(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGS_
#define soap_PUT___turb1__GetBoxFilterSGS_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS_(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGS_
#define soap_PATCH___turb1__GetBoxFilterSGS_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS_(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGS_
#define soap_POST_send___turb1__GetBoxFilterSGS_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS_(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS_(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGS_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGS_(struct soap*, struct __turb1__GetBoxFilterSGS_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGS_
#define soap_read___turb1__GetBoxFilterSGS_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGS_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGS_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGS_
#define soap_GET___turb1__GetBoxFilterSGS_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGS_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGS_
#define soap_POST_recv___turb1__GetBoxFilterSGS_(soap, data) ( soap_read___turb1__GetBoxFilterSGS_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilter__DEFINED
#define SOAP_TYPE___turb1__GetBoxFilter__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilter_(struct soap*, struct __turb1__GetBoxFilter_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilter_(struct soap*, const struct __turb1__GetBoxFilter_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilter_(struct soap*, const char*, int, const struct __turb1__GetBoxFilter_ *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilter_ * SOAP_FMAC4 soap_in___turb1__GetBoxFilter_(struct soap*, const char*, struct __turb1__GetBoxFilter_ *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilter_ * SOAP_FMAC4 soap_new___turb1__GetBoxFilter_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilter_(struct soap*, const struct __turb1__GetBoxFilter_ *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilter_
#define soap_write___turb1__GetBoxFilter_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilter_(soap, data), 0) || soap_put___turb1__GetBoxFilter_(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilter_
#define soap_PUT___turb1__GetBoxFilter_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter_(soap, data), 0) || soap_put___turb1__GetBoxFilter_(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilter_
#define soap_PATCH___turb1__GetBoxFilter_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter_(soap, data), 0) || soap_put___turb1__GetBoxFilter_(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilter_
#define soap_POST_send___turb1__GetBoxFilter_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter_(soap, data), 0) || soap_put___turb1__GetBoxFilter_(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilter_ * SOAP_FMAC4 soap_get___turb1__GetBoxFilter_(struct soap*, struct __turb1__GetBoxFilter_ *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilter_
#define soap_read___turb1__GetBoxFilter_(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilter_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilter_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilter_
#define soap_GET___turb1__GetBoxFilter_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilter_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilter_
#define soap_POST_recv___turb1__GetBoxFilter_(soap, data) ( soap_read___turb1__GetBoxFilter_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetInvariant__DEFINED
#define SOAP_TYPE___turb1__GetInvariant__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetInvariant_(struct soap*, struct __turb1__GetInvariant_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetInvariant_(struct soap*, const struct __turb1__GetInvariant_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetInvariant_(struct soap*, const char*, int, const struct __turb1__GetInvariant_ *, const char*);
SOAP_FMAC3 struct __turb1__GetInvariant_ * SOAP_FMAC4 soap_in___turb1__GetInvariant_(struct soap*, const char*, struct __turb1__GetInvariant_ *, const char*);

SOAP_FMAC3 struct __turb1__GetInvariant_ * SOAP_FMAC4 soap_new___turb1__GetInvariant_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetInvariant_(struct soap*, const struct __turb1__GetInvariant_ *, const char*, const char*);

#ifndef soap_write___turb1__GetInvariant_
#define soap_write___turb1__GetInvariant_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetInvariant_(soap, data), 0) || soap_put___turb1__GetInvariant_(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetInvariant_
#define soap_PUT___turb1__GetInvariant_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant_(soap, data), 0) || soap_put___turb1__GetInvariant_(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetInvariant_
#define soap_PATCH___turb1__GetInvariant_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant_(soap, data), 0) || soap_put___turb1__GetInvariant_(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetInvariant_
#define soap_POST_send___turb1__GetInvariant_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant_(soap, data), 0) || soap_put___turb1__GetInvariant_(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetInvariant_ * SOAP_FMAC4 soap_get___turb1__GetInvariant_(struct soap*, struct __turb1__GetInvariant_ *, const char*, const char*);

#ifndef soap_read___turb1__GetInvariant_
#define soap_read___turb1__GetInvariant_(soap, data) ( ((data) ? (soap_default___turb1__GetInvariant_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetInvariant_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetInvariant_
#define soap_GET___turb1__GetInvariant_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetInvariant_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetInvariant_
#define soap_POST_recv___turb1__GetInvariant_(soap, data) ( soap_read___turb1__GetInvariant_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetForce__DEFINED
#define SOAP_TYPE___turb1__GetForce__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetForce_(struct soap*, struct __turb1__GetForce_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetForce_(struct soap*, const struct __turb1__GetForce_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetForce_(struct soap*, const char*, int, const struct __turb1__GetForce_ *, const char*);
SOAP_FMAC3 struct __turb1__GetForce_ * SOAP_FMAC4 soap_in___turb1__GetForce_(struct soap*, const char*, struct __turb1__GetForce_ *, const char*);

SOAP_FMAC3 struct __turb1__GetForce_ * SOAP_FMAC4 soap_new___turb1__GetForce_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetForce_(struct soap*, const struct __turb1__GetForce_ *, const char*, const char*);

#ifndef soap_write___turb1__GetForce_
#define soap_write___turb1__GetForce_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetForce_(soap, data), 0) || soap_put___turb1__GetForce_(soap, data, "-turb1:GetForce", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetForce_
#define soap_PUT___turb1__GetForce_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce_(soap, data), 0) || soap_put___turb1__GetForce_(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetForce_
#define soap_PATCH___turb1__GetForce_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce_(soap, data), 0) || soap_put___turb1__GetForce_(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetForce_
#define soap_POST_send___turb1__GetForce_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce_(soap, data), 0) || soap_put___turb1__GetForce_(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetForce_ * SOAP_FMAC4 soap_get___turb1__GetForce_(struct soap*, struct __turb1__GetForce_ *, const char*, const char*);

#ifndef soap_read___turb1__GetForce_
#define soap_read___turb1__GetForce_(soap, data) ( ((data) ? (soap_default___turb1__GetForce_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetForce_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetForce_
#define soap_GET___turb1__GetForce_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetForce_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetForce_
#define soap_POST_recv___turb1__GetForce_(soap, data) ( soap_read___turb1__GetForce_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetThreshold__DEFINED
#define SOAP_TYPE___turb1__GetThreshold__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetThreshold_(struct soap*, struct __turb1__GetThreshold_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetThreshold_(struct soap*, const struct __turb1__GetThreshold_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetThreshold_(struct soap*, const char*, int, const struct __turb1__GetThreshold_ *, const char*);
SOAP_FMAC3 struct __turb1__GetThreshold_ * SOAP_FMAC4 soap_in___turb1__GetThreshold_(struct soap*, const char*, struct __turb1__GetThreshold_ *, const char*);

SOAP_FMAC3 struct __turb1__GetThreshold_ * SOAP_FMAC4 soap_new___turb1__GetThreshold_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetThreshold_(struct soap*, const struct __turb1__GetThreshold_ *, const char*, const char*);

#ifndef soap_write___turb1__GetThreshold_
#define soap_write___turb1__GetThreshold_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetThreshold_(soap, data), 0) || soap_put___turb1__GetThreshold_(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetThreshold_
#define soap_PUT___turb1__GetThreshold_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_(soap, data), 0) || soap_put___turb1__GetThreshold_(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetThreshold_
#define soap_PATCH___turb1__GetThreshold_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_(soap, data), 0) || soap_put___turb1__GetThreshold_(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetThreshold_
#define soap_POST_send___turb1__GetThreshold_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_(soap, data), 0) || soap_put___turb1__GetThreshold_(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetThreshold_ * SOAP_FMAC4 soap_get___turb1__GetThreshold_(struct soap*, struct __turb1__GetThreshold_ *, const char*, const char*);

#ifndef soap_read___turb1__GetThreshold_
#define soap_read___turb1__GetThreshold_(soap, data) ( ((data) ? (soap_default___turb1__GetThreshold_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetThreshold_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetThreshold_
#define soap_GET___turb1__GetThreshold_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetThreshold_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetThreshold_
#define soap_POST_recv___turb1__GetThreshold_(soap, data) ( soap_read___turb1__GetThreshold_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPosition__DEFINED
#define SOAP_TYPE___turb1__GetPosition__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPosition_(struct soap*, struct __turb1__GetPosition_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPosition_(struct soap*, const struct __turb1__GetPosition_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPosition_(struct soap*, const char*, int, const struct __turb1__GetPosition_ *, const char*);
SOAP_FMAC3 struct __turb1__GetPosition_ * SOAP_FMAC4 soap_in___turb1__GetPosition_(struct soap*, const char*, struct __turb1__GetPosition_ *, const char*);

SOAP_FMAC3 struct __turb1__GetPosition_ * SOAP_FMAC4 soap_new___turb1__GetPosition_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPosition_(struct soap*, const struct __turb1__GetPosition_ *, const char*, const char*);

#ifndef soap_write___turb1__GetPosition_
#define soap_write___turb1__GetPosition_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPosition_(soap, data), 0) || soap_put___turb1__GetPosition_(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPosition_
#define soap_PUT___turb1__GetPosition_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_(soap, data), 0) || soap_put___turb1__GetPosition_(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPosition_
#define soap_PATCH___turb1__GetPosition_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_(soap, data), 0) || soap_put___turb1__GetPosition_(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPosition_
#define soap_POST_send___turb1__GetPosition_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_(soap, data), 0) || soap_put___turb1__GetPosition_(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPosition_ * SOAP_FMAC4 soap_get___turb1__GetPosition_(struct soap*, struct __turb1__GetPosition_ *, const char*, const char*);

#ifndef soap_read___turb1__GetPosition_
#define soap_read___turb1__GetPosition_(soap, data) ( ((data) ? (soap_default___turb1__GetPosition_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPosition_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPosition_
#define soap_GET___turb1__GetPosition_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPosition_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPosition_
#define soap_POST_recv___turb1__GetPosition_(soap, data) ( soap_read___turb1__GetPosition_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialLaplacian__DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialLaplacian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialLaplacian_(struct soap*, struct __turb1__GetVectorPotentialLaplacian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialLaplacian_(struct soap*, const struct __turb1__GetVectorPotentialLaplacian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialLaplacian_(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialLaplacian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian_ * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialLaplacian_(struct soap*, const char*, struct __turb1__GetVectorPotentialLaplacian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian_ * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialLaplacian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialLaplacian_(struct soap*, const struct __turb1__GetVectorPotentialLaplacian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialLaplacian_
#define soap_write___turb1__GetVectorPotentialLaplacian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialLaplacian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian_(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialLaplacian_
#define soap_PUT___turb1__GetVectorPotentialLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian_(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialLaplacian_
#define soap_PATCH___turb1__GetVectorPotentialLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian_(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialLaplacian_
#define soap_POST_send___turb1__GetVectorPotentialLaplacian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian_(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian_ * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialLaplacian_(struct soap*, struct __turb1__GetVectorPotentialLaplacian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialLaplacian_
#define soap_read___turb1__GetVectorPotentialLaplacian_(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialLaplacian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialLaplacian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialLaplacian_
#define soap_GET___turb1__GetVectorPotentialLaplacian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialLaplacian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialLaplacian_
#define soap_POST_recv___turb1__GetVectorPotentialLaplacian_(soap, data) ( soap_read___turb1__GetVectorPotentialLaplacian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticFieldLaplacian__DEFINED
#define SOAP_TYPE___turb1__GetMagneticFieldLaplacian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticFieldLaplacian_(struct soap*, struct __turb1__GetMagneticFieldLaplacian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticFieldLaplacian_(struct soap*, const struct __turb1__GetMagneticFieldLaplacian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticFieldLaplacian_(struct soap*, const char*, int, const struct __turb1__GetMagneticFieldLaplacian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian_ * SOAP_FMAC4 soap_in___turb1__GetMagneticFieldLaplacian_(struct soap*, const char*, struct __turb1__GetMagneticFieldLaplacian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian_ * SOAP_FMAC4 soap_new___turb1__GetMagneticFieldLaplacian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticFieldLaplacian_(struct soap*, const struct __turb1__GetMagneticFieldLaplacian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticFieldLaplacian_
#define soap_write___turb1__GetMagneticFieldLaplacian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticFieldLaplacian_(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian_(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticFieldLaplacian_
#define soap_PUT___turb1__GetMagneticFieldLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian_(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian_(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticFieldLaplacian_
#define soap_PATCH___turb1__GetMagneticFieldLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian_(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian_(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticFieldLaplacian_
#define soap_POST_send___turb1__GetMagneticFieldLaplacian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian_(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian_(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian_ * SOAP_FMAC4 soap_get___turb1__GetMagneticFieldLaplacian_(struct soap*, struct __turb1__GetMagneticFieldLaplacian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticFieldLaplacian_
#define soap_read___turb1__GetMagneticFieldLaplacian_(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticFieldLaplacian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticFieldLaplacian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticFieldLaplacian_
#define soap_GET___turb1__GetMagneticFieldLaplacian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticFieldLaplacian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticFieldLaplacian_
#define soap_POST_recv___turb1__GetMagneticFieldLaplacian_(soap, data) ( soap_read___turb1__GetMagneticFieldLaplacian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityLaplacian__DEFINED
#define SOAP_TYPE___turb1__GetVelocityLaplacian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityLaplacian_(struct soap*, struct __turb1__GetVelocityLaplacian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityLaplacian_(struct soap*, const struct __turb1__GetVelocityLaplacian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityLaplacian_(struct soap*, const char*, int, const struct __turb1__GetVelocityLaplacian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityLaplacian_ * SOAP_FMAC4 soap_in___turb1__GetVelocityLaplacian_(struct soap*, const char*, struct __turb1__GetVelocityLaplacian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityLaplacian_ * SOAP_FMAC4 soap_new___turb1__GetVelocityLaplacian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityLaplacian_(struct soap*, const struct __turb1__GetVelocityLaplacian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityLaplacian_
#define soap_write___turb1__GetVelocityLaplacian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityLaplacian_(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian_(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityLaplacian_
#define soap_PUT___turb1__GetVelocityLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian_(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian_(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityLaplacian_
#define soap_PATCH___turb1__GetVelocityLaplacian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian_(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian_(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityLaplacian_
#define soap_POST_send___turb1__GetVelocityLaplacian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian_(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian_(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityLaplacian_ * SOAP_FMAC4 soap_get___turb1__GetVelocityLaplacian_(struct soap*, struct __turb1__GetVelocityLaplacian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityLaplacian_
#define soap_read___turb1__GetVelocityLaplacian_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityLaplacian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityLaplacian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityLaplacian_
#define soap_GET___turb1__GetVelocityLaplacian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityLaplacian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityLaplacian_
#define soap_POST_recv___turb1__GetVelocityLaplacian_(soap, data) ( soap_read___turb1__GetVelocityLaplacian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperatureHessian__DEFINED
#define SOAP_TYPE___turb1__GetTemperatureHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperatureHessian_(struct soap*, struct __turb1__GetTemperatureHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperatureHessian_(struct soap*, const struct __turb1__GetTemperatureHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperatureHessian_(struct soap*, const char*, int, const struct __turb1__GetTemperatureHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperatureHessian_ * SOAP_FMAC4 soap_in___turb1__GetTemperatureHessian_(struct soap*, const char*, struct __turb1__GetTemperatureHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperatureHessian_ * SOAP_FMAC4 soap_new___turb1__GetTemperatureHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperatureHessian_(struct soap*, const struct __turb1__GetTemperatureHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperatureHessian_
#define soap_write___turb1__GetTemperatureHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperatureHessian_(soap, data), 0) || soap_put___turb1__GetTemperatureHessian_(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperatureHessian_
#define soap_PUT___turb1__GetTemperatureHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian_(soap, data), 0) || soap_put___turb1__GetTemperatureHessian_(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperatureHessian_
#define soap_PATCH___turb1__GetTemperatureHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian_(soap, data), 0) || soap_put___turb1__GetTemperatureHessian_(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperatureHessian_
#define soap_POST_send___turb1__GetTemperatureHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian_(soap, data), 0) || soap_put___turb1__GetTemperatureHessian_(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperatureHessian_ * SOAP_FMAC4 soap_get___turb1__GetTemperatureHessian_(struct soap*, struct __turb1__GetTemperatureHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperatureHessian_
#define soap_read___turb1__GetTemperatureHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetTemperatureHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperatureHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperatureHessian_
#define soap_GET___turb1__GetTemperatureHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperatureHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperatureHessian_
#define soap_POST_recv___turb1__GetTemperatureHessian_(soap, data) ( soap_read___turb1__GetTemperatureHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensityHessian__DEFINED
#define SOAP_TYPE___turb1__GetDensityHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensityHessian_(struct soap*, struct __turb1__GetDensityHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensityHessian_(struct soap*, const struct __turb1__GetDensityHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensityHessian_(struct soap*, const char*, int, const struct __turb1__GetDensityHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetDensityHessian_ * SOAP_FMAC4 soap_in___turb1__GetDensityHessian_(struct soap*, const char*, struct __turb1__GetDensityHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetDensityHessian_ * SOAP_FMAC4 soap_new___turb1__GetDensityHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensityHessian_(struct soap*, const struct __turb1__GetDensityHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetDensityHessian_
#define soap_write___turb1__GetDensityHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensityHessian_(soap, data), 0) || soap_put___turb1__GetDensityHessian_(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensityHessian_
#define soap_PUT___turb1__GetDensityHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian_(soap, data), 0) || soap_put___turb1__GetDensityHessian_(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensityHessian_
#define soap_PATCH___turb1__GetDensityHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian_(soap, data), 0) || soap_put___turb1__GetDensityHessian_(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensityHessian_
#define soap_POST_send___turb1__GetDensityHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian_(soap, data), 0) || soap_put___turb1__GetDensityHessian_(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensityHessian_ * SOAP_FMAC4 soap_get___turb1__GetDensityHessian_(struct soap*, struct __turb1__GetDensityHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetDensityHessian_
#define soap_read___turb1__GetDensityHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetDensityHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensityHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensityHessian_
#define soap_GET___turb1__GetDensityHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensityHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensityHessian_
#define soap_POST_recv___turb1__GetDensityHessian_(soap, data) ( soap_read___turb1__GetDensityHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressureHessian__DEFINED
#define SOAP_TYPE___turb1__GetPressureHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressureHessian_(struct soap*, struct __turb1__GetPressureHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressureHessian_(struct soap*, const struct __turb1__GetPressureHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressureHessian_(struct soap*, const char*, int, const struct __turb1__GetPressureHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetPressureHessian_ * SOAP_FMAC4 soap_in___turb1__GetPressureHessian_(struct soap*, const char*, struct __turb1__GetPressureHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetPressureHessian_ * SOAP_FMAC4 soap_new___turb1__GetPressureHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressureHessian_(struct soap*, const struct __turb1__GetPressureHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetPressureHessian_
#define soap_write___turb1__GetPressureHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressureHessian_(soap, data), 0) || soap_put___turb1__GetPressureHessian_(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressureHessian_
#define soap_PUT___turb1__GetPressureHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian_(soap, data), 0) || soap_put___turb1__GetPressureHessian_(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressureHessian_
#define soap_PATCH___turb1__GetPressureHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian_(soap, data), 0) || soap_put___turb1__GetPressureHessian_(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressureHessian_
#define soap_POST_send___turb1__GetPressureHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian_(soap, data), 0) || soap_put___turb1__GetPressureHessian_(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressureHessian_ * SOAP_FMAC4 soap_get___turb1__GetPressureHessian_(struct soap*, struct __turb1__GetPressureHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetPressureHessian_
#define soap_read___turb1__GetPressureHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetPressureHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressureHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressureHessian_
#define soap_GET___turb1__GetPressureHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressureHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressureHessian_
#define soap_POST_recv___turb1__GetPressureHessian_(soap, data) ( soap_read___turb1__GetPressureHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialHessian__DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialHessian_(struct soap*, struct __turb1__GetVectorPotentialHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialHessian_(struct soap*, const struct __turb1__GetVectorPotentialHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialHessian_(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian_ * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialHessian_(struct soap*, const char*, struct __turb1__GetVectorPotentialHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian_ * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialHessian_(struct soap*, const struct __turb1__GetVectorPotentialHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialHessian_
#define soap_write___turb1__GetVectorPotentialHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialHessian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian_(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialHessian_
#define soap_PUT___turb1__GetVectorPotentialHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian_(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialHessian_
#define soap_PATCH___turb1__GetVectorPotentialHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian_(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialHessian_
#define soap_POST_send___turb1__GetVectorPotentialHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian_(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian_(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian_ * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialHessian_(struct soap*, struct __turb1__GetVectorPotentialHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialHessian_
#define soap_read___turb1__GetVectorPotentialHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialHessian_
#define soap_GET___turb1__GetVectorPotentialHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialHessian_
#define soap_POST_recv___turb1__GetVectorPotentialHessian_(soap, data) ( soap_read___turb1__GetVectorPotentialHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticHessian__DEFINED
#define SOAP_TYPE___turb1__GetMagneticHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticHessian_(struct soap*, struct __turb1__GetMagneticHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticHessian_(struct soap*, const struct __turb1__GetMagneticHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticHessian_(struct soap*, const char*, int, const struct __turb1__GetMagneticHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticHessian_ * SOAP_FMAC4 soap_in___turb1__GetMagneticHessian_(struct soap*, const char*, struct __turb1__GetMagneticHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticHessian_ * SOAP_FMAC4 soap_new___turb1__GetMagneticHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticHessian_(struct soap*, const struct __turb1__GetMagneticHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticHessian_
#define soap_write___turb1__GetMagneticHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticHessian_(soap, data), 0) || soap_put___turb1__GetMagneticHessian_(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticHessian_
#define soap_PUT___turb1__GetMagneticHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian_(soap, data), 0) || soap_put___turb1__GetMagneticHessian_(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticHessian_
#define soap_PATCH___turb1__GetMagneticHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian_(soap, data), 0) || soap_put___turb1__GetMagneticHessian_(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticHessian_
#define soap_POST_send___turb1__GetMagneticHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian_(soap, data), 0) || soap_put___turb1__GetMagneticHessian_(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticHessian_ * SOAP_FMAC4 soap_get___turb1__GetMagneticHessian_(struct soap*, struct __turb1__GetMagneticHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticHessian_
#define soap_read___turb1__GetMagneticHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticHessian_
#define soap_GET___turb1__GetMagneticHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticHessian_
#define soap_POST_recv___turb1__GetMagneticHessian_(soap, data) ( soap_read___turb1__GetMagneticHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityHessian__DEFINED
#define SOAP_TYPE___turb1__GetVelocityHessian__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityHessian_(struct soap*, struct __turb1__GetVelocityHessian_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityHessian_(struct soap*, const struct __turb1__GetVelocityHessian_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityHessian_(struct soap*, const char*, int, const struct __turb1__GetVelocityHessian_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityHessian_ * SOAP_FMAC4 soap_in___turb1__GetVelocityHessian_(struct soap*, const char*, struct __turb1__GetVelocityHessian_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityHessian_ * SOAP_FMAC4 soap_new___turb1__GetVelocityHessian_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityHessian_(struct soap*, const struct __turb1__GetVelocityHessian_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityHessian_
#define soap_write___turb1__GetVelocityHessian_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityHessian_(soap, data), 0) || soap_put___turb1__GetVelocityHessian_(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityHessian_
#define soap_PUT___turb1__GetVelocityHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian_(soap, data), 0) || soap_put___turb1__GetVelocityHessian_(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityHessian_
#define soap_PATCH___turb1__GetVelocityHessian_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian_(soap, data), 0) || soap_put___turb1__GetVelocityHessian_(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityHessian_
#define soap_POST_send___turb1__GetVelocityHessian_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian_(soap, data), 0) || soap_put___turb1__GetVelocityHessian_(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityHessian_ * SOAP_FMAC4 soap_get___turb1__GetVelocityHessian_(struct soap*, struct __turb1__GetVelocityHessian_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityHessian_
#define soap_read___turb1__GetVelocityHessian_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityHessian_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityHessian_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityHessian_
#define soap_GET___turb1__GetVelocityHessian_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityHessian_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityHessian_
#define soap_POST_recv___turb1__GetVelocityHessian_(soap, data) ( soap_read___turb1__GetVelocityHessian_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperatureGradient__DEFINED
#define SOAP_TYPE___turb1__GetTemperatureGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperatureGradient_(struct soap*, struct __turb1__GetTemperatureGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperatureGradient_(struct soap*, const struct __turb1__GetTemperatureGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperatureGradient_(struct soap*, const char*, int, const struct __turb1__GetTemperatureGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperatureGradient_ * SOAP_FMAC4 soap_in___turb1__GetTemperatureGradient_(struct soap*, const char*, struct __turb1__GetTemperatureGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperatureGradient_ * SOAP_FMAC4 soap_new___turb1__GetTemperatureGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperatureGradient_(struct soap*, const struct __turb1__GetTemperatureGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperatureGradient_
#define soap_write___turb1__GetTemperatureGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperatureGradient_(soap, data), 0) || soap_put___turb1__GetTemperatureGradient_(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperatureGradient_
#define soap_PUT___turb1__GetTemperatureGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient_(soap, data), 0) || soap_put___turb1__GetTemperatureGradient_(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperatureGradient_
#define soap_PATCH___turb1__GetTemperatureGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient_(soap, data), 0) || soap_put___turb1__GetTemperatureGradient_(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperatureGradient_
#define soap_POST_send___turb1__GetTemperatureGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient_(soap, data), 0) || soap_put___turb1__GetTemperatureGradient_(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperatureGradient_ * SOAP_FMAC4 soap_get___turb1__GetTemperatureGradient_(struct soap*, struct __turb1__GetTemperatureGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperatureGradient_
#define soap_read___turb1__GetTemperatureGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetTemperatureGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperatureGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperatureGradient_
#define soap_GET___turb1__GetTemperatureGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperatureGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperatureGradient_
#define soap_POST_recv___turb1__GetTemperatureGradient_(soap, data) ( soap_read___turb1__GetTemperatureGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensityGradient__DEFINED
#define SOAP_TYPE___turb1__GetDensityGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensityGradient_(struct soap*, struct __turb1__GetDensityGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensityGradient_(struct soap*, const struct __turb1__GetDensityGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensityGradient_(struct soap*, const char*, int, const struct __turb1__GetDensityGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetDensityGradient_ * SOAP_FMAC4 soap_in___turb1__GetDensityGradient_(struct soap*, const char*, struct __turb1__GetDensityGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetDensityGradient_ * SOAP_FMAC4 soap_new___turb1__GetDensityGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensityGradient_(struct soap*, const struct __turb1__GetDensityGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetDensityGradient_
#define soap_write___turb1__GetDensityGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensityGradient_(soap, data), 0) || soap_put___turb1__GetDensityGradient_(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensityGradient_
#define soap_PUT___turb1__GetDensityGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient_(soap, data), 0) || soap_put___turb1__GetDensityGradient_(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensityGradient_
#define soap_PATCH___turb1__GetDensityGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient_(soap, data), 0) || soap_put___turb1__GetDensityGradient_(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensityGradient_
#define soap_POST_send___turb1__GetDensityGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient_(soap, data), 0) || soap_put___turb1__GetDensityGradient_(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensityGradient_ * SOAP_FMAC4 soap_get___turb1__GetDensityGradient_(struct soap*, struct __turb1__GetDensityGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetDensityGradient_
#define soap_read___turb1__GetDensityGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetDensityGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensityGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensityGradient_
#define soap_GET___turb1__GetDensityGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensityGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensityGradient_
#define soap_POST_recv___turb1__GetDensityGradient_(soap, data) ( soap_read___turb1__GetDensityGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressureGradient__DEFINED
#define SOAP_TYPE___turb1__GetPressureGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressureGradient_(struct soap*, struct __turb1__GetPressureGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressureGradient_(struct soap*, const struct __turb1__GetPressureGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressureGradient_(struct soap*, const char*, int, const struct __turb1__GetPressureGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetPressureGradient_ * SOAP_FMAC4 soap_in___turb1__GetPressureGradient_(struct soap*, const char*, struct __turb1__GetPressureGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetPressureGradient_ * SOAP_FMAC4 soap_new___turb1__GetPressureGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressureGradient_(struct soap*, const struct __turb1__GetPressureGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetPressureGradient_
#define soap_write___turb1__GetPressureGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressureGradient_(soap, data), 0) || soap_put___turb1__GetPressureGradient_(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressureGradient_
#define soap_PUT___turb1__GetPressureGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient_(soap, data), 0) || soap_put___turb1__GetPressureGradient_(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressureGradient_
#define soap_PATCH___turb1__GetPressureGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient_(soap, data), 0) || soap_put___turb1__GetPressureGradient_(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressureGradient_
#define soap_POST_send___turb1__GetPressureGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient_(soap, data), 0) || soap_put___turb1__GetPressureGradient_(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressureGradient_ * SOAP_FMAC4 soap_get___turb1__GetPressureGradient_(struct soap*, struct __turb1__GetPressureGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetPressureGradient_
#define soap_read___turb1__GetPressureGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetPressureGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressureGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressureGradient_
#define soap_GET___turb1__GetPressureGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressureGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressureGradient_
#define soap_POST_recv___turb1__GetPressureGradient_(soap, data) ( soap_read___turb1__GetPressureGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialGradient__DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialGradient_(struct soap*, struct __turb1__GetVectorPotentialGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialGradient_(struct soap*, const struct __turb1__GetVectorPotentialGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialGradient_(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient_ * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialGradient_(struct soap*, const char*, struct __turb1__GetVectorPotentialGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient_ * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialGradient_(struct soap*, const struct __turb1__GetVectorPotentialGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialGradient_
#define soap_write___turb1__GetVectorPotentialGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialGradient_(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient_(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialGradient_
#define soap_PUT___turb1__GetVectorPotentialGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient_(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient_(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialGradient_
#define soap_PATCH___turb1__GetVectorPotentialGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient_(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient_(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialGradient_
#define soap_POST_send___turb1__GetVectorPotentialGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient_(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient_(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient_ * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialGradient_(struct soap*, struct __turb1__GetVectorPotentialGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialGradient_
#define soap_read___turb1__GetVectorPotentialGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialGradient_
#define soap_GET___turb1__GetVectorPotentialGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialGradient_
#define soap_POST_recv___turb1__GetVectorPotentialGradient_(soap, data) ( soap_read___turb1__GetVectorPotentialGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticFieldGradient__DEFINED
#define SOAP_TYPE___turb1__GetMagneticFieldGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticFieldGradient_(struct soap*, struct __turb1__GetMagneticFieldGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticFieldGradient_(struct soap*, const struct __turb1__GetMagneticFieldGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticFieldGradient_(struct soap*, const char*, int, const struct __turb1__GetMagneticFieldGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient_ * SOAP_FMAC4 soap_in___turb1__GetMagneticFieldGradient_(struct soap*, const char*, struct __turb1__GetMagneticFieldGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient_ * SOAP_FMAC4 soap_new___turb1__GetMagneticFieldGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticFieldGradient_(struct soap*, const struct __turb1__GetMagneticFieldGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticFieldGradient_
#define soap_write___turb1__GetMagneticFieldGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticFieldGradient_(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient_(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticFieldGradient_
#define soap_PUT___turb1__GetMagneticFieldGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient_(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient_(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticFieldGradient_
#define soap_PATCH___turb1__GetMagneticFieldGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient_(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient_(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticFieldGradient_
#define soap_POST_send___turb1__GetMagneticFieldGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient_(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient_(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient_ * SOAP_FMAC4 soap_get___turb1__GetMagneticFieldGradient_(struct soap*, struct __turb1__GetMagneticFieldGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticFieldGradient_
#define soap_read___turb1__GetMagneticFieldGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticFieldGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticFieldGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticFieldGradient_
#define soap_GET___turb1__GetMagneticFieldGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticFieldGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticFieldGradient_
#define soap_POST_recv___turb1__GetMagneticFieldGradient_(soap, data) ( soap_read___turb1__GetMagneticFieldGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityGradient__DEFINED
#define SOAP_TYPE___turb1__GetVelocityGradient__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityGradient_(struct soap*, struct __turb1__GetVelocityGradient_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityGradient_(struct soap*, const struct __turb1__GetVelocityGradient_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityGradient_(struct soap*, const char*, int, const struct __turb1__GetVelocityGradient_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityGradient_ * SOAP_FMAC4 soap_in___turb1__GetVelocityGradient_(struct soap*, const char*, struct __turb1__GetVelocityGradient_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityGradient_ * SOAP_FMAC4 soap_new___turb1__GetVelocityGradient_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityGradient_(struct soap*, const struct __turb1__GetVelocityGradient_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityGradient_
#define soap_write___turb1__GetVelocityGradient_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityGradient_(soap, data), 0) || soap_put___turb1__GetVelocityGradient_(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityGradient_
#define soap_PUT___turb1__GetVelocityGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient_(soap, data), 0) || soap_put___turb1__GetVelocityGradient_(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityGradient_
#define soap_PATCH___turb1__GetVelocityGradient_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient_(soap, data), 0) || soap_put___turb1__GetVelocityGradient_(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityGradient_
#define soap_POST_send___turb1__GetVelocityGradient_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient_(soap, data), 0) || soap_put___turb1__GetVelocityGradient_(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityGradient_ * SOAP_FMAC4 soap_get___turb1__GetVelocityGradient_(struct soap*, struct __turb1__GetVelocityGradient_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityGradient_
#define soap_read___turb1__GetVelocityGradient_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityGradient_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityGradient_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityGradient_
#define soap_GET___turb1__GetVelocityGradient_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityGradient_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityGradient_
#define soap_POST_recv___turb1__GetVelocityGradient_(soap, data) ( soap_read___turb1__GetVelocityGradient_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityAndTemperature__DEFINED
#define SOAP_TYPE___turb1__GetVelocityAndTemperature__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityAndTemperature_(struct soap*, struct __turb1__GetVelocityAndTemperature_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityAndTemperature_(struct soap*, const struct __turb1__GetVelocityAndTemperature_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityAndTemperature_(struct soap*, const char*, int, const struct __turb1__GetVelocityAndTemperature_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature_ * SOAP_FMAC4 soap_in___turb1__GetVelocityAndTemperature_(struct soap*, const char*, struct __turb1__GetVelocityAndTemperature_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature_ * SOAP_FMAC4 soap_new___turb1__GetVelocityAndTemperature_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityAndTemperature_(struct soap*, const struct __turb1__GetVelocityAndTemperature_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityAndTemperature_
#define soap_write___turb1__GetVelocityAndTemperature_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityAndTemperature_(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature_(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityAndTemperature_
#define soap_PUT___turb1__GetVelocityAndTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature_(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature_(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityAndTemperature_
#define soap_PATCH___turb1__GetVelocityAndTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature_(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature_(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityAndTemperature_
#define soap_POST_send___turb1__GetVelocityAndTemperature_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature_(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature_(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature_ * SOAP_FMAC4 soap_get___turb1__GetVelocityAndTemperature_(struct soap*, struct __turb1__GetVelocityAndTemperature_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityAndTemperature_
#define soap_read___turb1__GetVelocityAndTemperature_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityAndTemperature_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityAndTemperature_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityAndTemperature_
#define soap_GET___turb1__GetVelocityAndTemperature_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityAndTemperature_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityAndTemperature_
#define soap_POST_recv___turb1__GetVelocityAndTemperature_(soap, data) ( soap_read___turb1__GetVelocityAndTemperature_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityAndPressure__DEFINED
#define SOAP_TYPE___turb1__GetVelocityAndPressure__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityAndPressure_(struct soap*, struct __turb1__GetVelocityAndPressure_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityAndPressure_(struct soap*, const struct __turb1__GetVelocityAndPressure_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityAndPressure_(struct soap*, const char*, int, const struct __turb1__GetVelocityAndPressure_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityAndPressure_ * SOAP_FMAC4 soap_in___turb1__GetVelocityAndPressure_(struct soap*, const char*, struct __turb1__GetVelocityAndPressure_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityAndPressure_ * SOAP_FMAC4 soap_new___turb1__GetVelocityAndPressure_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityAndPressure_(struct soap*, const struct __turb1__GetVelocityAndPressure_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityAndPressure_
#define soap_write___turb1__GetVelocityAndPressure_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityAndPressure_(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure_(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityAndPressure_
#define soap_PUT___turb1__GetVelocityAndPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure_(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure_(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityAndPressure_
#define soap_PATCH___turb1__GetVelocityAndPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure_(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure_(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityAndPressure_
#define soap_POST_send___turb1__GetVelocityAndPressure_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure_(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure_(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityAndPressure_ * SOAP_FMAC4 soap_get___turb1__GetVelocityAndPressure_(struct soap*, struct __turb1__GetVelocityAndPressure_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityAndPressure_
#define soap_read___turb1__GetVelocityAndPressure_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityAndPressure_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityAndPressure_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityAndPressure_
#define soap_GET___turb1__GetVelocityAndPressure_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityAndPressure_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityAndPressure_
#define soap_POST_recv___turb1__GetVelocityAndPressure_(soap, data) ( soap_read___turb1__GetVelocityAndPressure_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperature__DEFINED
#define SOAP_TYPE___turb1__GetTemperature__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperature_(struct soap*, struct __turb1__GetTemperature_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperature_(struct soap*, const struct __turb1__GetTemperature_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperature_(struct soap*, const char*, int, const struct __turb1__GetTemperature_ *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperature_ * SOAP_FMAC4 soap_in___turb1__GetTemperature_(struct soap*, const char*, struct __turb1__GetTemperature_ *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperature_ * SOAP_FMAC4 soap_new___turb1__GetTemperature_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperature_(struct soap*, const struct __turb1__GetTemperature_ *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperature_
#define soap_write___turb1__GetTemperature_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperature_(soap, data), 0) || soap_put___turb1__GetTemperature_(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperature_
#define soap_PUT___turb1__GetTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature_(soap, data), 0) || soap_put___turb1__GetTemperature_(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperature_
#define soap_PATCH___turb1__GetTemperature_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature_(soap, data), 0) || soap_put___turb1__GetTemperature_(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperature_
#define soap_POST_send___turb1__GetTemperature_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature_(soap, data), 0) || soap_put___turb1__GetTemperature_(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperature_ * SOAP_FMAC4 soap_get___turb1__GetTemperature_(struct soap*, struct __turb1__GetTemperature_ *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperature_
#define soap_read___turb1__GetTemperature_(soap, data) ( ((data) ? (soap_default___turb1__GetTemperature_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperature_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperature_
#define soap_GET___turb1__GetTemperature_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperature_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperature_
#define soap_POST_recv___turb1__GetTemperature_(soap, data) ( soap_read___turb1__GetTemperature_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensity__DEFINED
#define SOAP_TYPE___turb1__GetDensity__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensity_(struct soap*, struct __turb1__GetDensity_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensity_(struct soap*, const struct __turb1__GetDensity_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensity_(struct soap*, const char*, int, const struct __turb1__GetDensity_ *, const char*);
SOAP_FMAC3 struct __turb1__GetDensity_ * SOAP_FMAC4 soap_in___turb1__GetDensity_(struct soap*, const char*, struct __turb1__GetDensity_ *, const char*);

SOAP_FMAC3 struct __turb1__GetDensity_ * SOAP_FMAC4 soap_new___turb1__GetDensity_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensity_(struct soap*, const struct __turb1__GetDensity_ *, const char*, const char*);

#ifndef soap_write___turb1__GetDensity_
#define soap_write___turb1__GetDensity_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensity_(soap, data), 0) || soap_put___turb1__GetDensity_(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensity_
#define soap_PUT___turb1__GetDensity_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity_(soap, data), 0) || soap_put___turb1__GetDensity_(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensity_
#define soap_PATCH___turb1__GetDensity_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity_(soap, data), 0) || soap_put___turb1__GetDensity_(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensity_
#define soap_POST_send___turb1__GetDensity_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity_(soap, data), 0) || soap_put___turb1__GetDensity_(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensity_ * SOAP_FMAC4 soap_get___turb1__GetDensity_(struct soap*, struct __turb1__GetDensity_ *, const char*, const char*);

#ifndef soap_read___turb1__GetDensity_
#define soap_read___turb1__GetDensity_(soap, data) ( ((data) ? (soap_default___turb1__GetDensity_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensity_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensity_
#define soap_GET___turb1__GetDensity_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensity_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensity_
#define soap_POST_recv___turb1__GetDensity_(soap, data) ( soap_read___turb1__GetDensity_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressure__DEFINED
#define SOAP_TYPE___turb1__GetPressure__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressure_(struct soap*, struct __turb1__GetPressure_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressure_(struct soap*, const struct __turb1__GetPressure_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressure_(struct soap*, const char*, int, const struct __turb1__GetPressure_ *, const char*);
SOAP_FMAC3 struct __turb1__GetPressure_ * SOAP_FMAC4 soap_in___turb1__GetPressure_(struct soap*, const char*, struct __turb1__GetPressure_ *, const char*);

SOAP_FMAC3 struct __turb1__GetPressure_ * SOAP_FMAC4 soap_new___turb1__GetPressure_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressure_(struct soap*, const struct __turb1__GetPressure_ *, const char*, const char*);

#ifndef soap_write___turb1__GetPressure_
#define soap_write___turb1__GetPressure_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressure_(soap, data), 0) || soap_put___turb1__GetPressure_(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressure_
#define soap_PUT___turb1__GetPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure_(soap, data), 0) || soap_put___turb1__GetPressure_(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressure_
#define soap_PATCH___turb1__GetPressure_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure_(soap, data), 0) || soap_put___turb1__GetPressure_(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressure_
#define soap_POST_send___turb1__GetPressure_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure_(soap, data), 0) || soap_put___turb1__GetPressure_(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressure_ * SOAP_FMAC4 soap_get___turb1__GetPressure_(struct soap*, struct __turb1__GetPressure_ *, const char*, const char*);

#ifndef soap_read___turb1__GetPressure_
#define soap_read___turb1__GetPressure_(soap, data) ( ((data) ? (soap_default___turb1__GetPressure_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressure_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressure_
#define soap_GET___turb1__GetPressure_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressure_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressure_
#define soap_POST_recv___turb1__GetPressure_(soap, data) ( soap_read___turb1__GetPressure_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotential__DEFINED
#define SOAP_TYPE___turb1__GetVectorPotential__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotential_(struct soap*, struct __turb1__GetVectorPotential_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotential_(struct soap*, const struct __turb1__GetVectorPotential_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotential_(struct soap*, const char*, int, const struct __turb1__GetVectorPotential_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotential_ * SOAP_FMAC4 soap_in___turb1__GetVectorPotential_(struct soap*, const char*, struct __turb1__GetVectorPotential_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotential_ * SOAP_FMAC4 soap_new___turb1__GetVectorPotential_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotential_(struct soap*, const struct __turb1__GetVectorPotential_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotential_
#define soap_write___turb1__GetVectorPotential_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotential_(soap, data), 0) || soap_put___turb1__GetVectorPotential_(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotential_
#define soap_PUT___turb1__GetVectorPotential_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential_(soap, data), 0) || soap_put___turb1__GetVectorPotential_(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotential_
#define soap_PATCH___turb1__GetVectorPotential_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential_(soap, data), 0) || soap_put___turb1__GetVectorPotential_(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotential_
#define soap_POST_send___turb1__GetVectorPotential_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential_(soap, data), 0) || soap_put___turb1__GetVectorPotential_(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotential_ * SOAP_FMAC4 soap_get___turb1__GetVectorPotential_(struct soap*, struct __turb1__GetVectorPotential_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotential_
#define soap_read___turb1__GetVectorPotential_(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotential_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotential_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotential_
#define soap_GET___turb1__GetVectorPotential_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotential_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotential_
#define soap_POST_recv___turb1__GetVectorPotential_(soap, data) ( soap_read___turb1__GetVectorPotential_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticField__DEFINED
#define SOAP_TYPE___turb1__GetMagneticField__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticField_(struct soap*, struct __turb1__GetMagneticField_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticField_(struct soap*, const struct __turb1__GetMagneticField_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticField_(struct soap*, const char*, int, const struct __turb1__GetMagneticField_ *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticField_ * SOAP_FMAC4 soap_in___turb1__GetMagneticField_(struct soap*, const char*, struct __turb1__GetMagneticField_ *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticField_ * SOAP_FMAC4 soap_new___turb1__GetMagneticField_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticField_(struct soap*, const struct __turb1__GetMagneticField_ *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticField_
#define soap_write___turb1__GetMagneticField_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticField_(soap, data), 0) || soap_put___turb1__GetMagneticField_(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticField_
#define soap_PUT___turb1__GetMagneticField_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField_(soap, data), 0) || soap_put___turb1__GetMagneticField_(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticField_
#define soap_PATCH___turb1__GetMagneticField_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField_(soap, data), 0) || soap_put___turb1__GetMagneticField_(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticField_
#define soap_POST_send___turb1__GetMagneticField_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField_(soap, data), 0) || soap_put___turb1__GetMagneticField_(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticField_ * SOAP_FMAC4 soap_get___turb1__GetMagneticField_(struct soap*, struct __turb1__GetMagneticField_ *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticField_
#define soap_read___turb1__GetMagneticField_(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticField_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticField_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticField_
#define soap_GET___turb1__GetMagneticField_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticField_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticField_
#define soap_POST_recv___turb1__GetMagneticField_(soap, data) ( soap_read___turb1__GetMagneticField_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocity__DEFINED
#define SOAP_TYPE___turb1__GetVelocity__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocity_(struct soap*, struct __turb1__GetVelocity_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocity_(struct soap*, const struct __turb1__GetVelocity_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocity_(struct soap*, const char*, int, const struct __turb1__GetVelocity_ *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocity_ * SOAP_FMAC4 soap_in___turb1__GetVelocity_(struct soap*, const char*, struct __turb1__GetVelocity_ *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocity_ * SOAP_FMAC4 soap_new___turb1__GetVelocity_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocity_(struct soap*, const struct __turb1__GetVelocity_ *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocity_
#define soap_write___turb1__GetVelocity_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocity_(soap, data), 0) || soap_put___turb1__GetVelocity_(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocity_
#define soap_PUT___turb1__GetVelocity_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity_(soap, data), 0) || soap_put___turb1__GetVelocity_(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocity_
#define soap_PATCH___turb1__GetVelocity_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity_(soap, data), 0) || soap_put___turb1__GetVelocity_(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocity_
#define soap_POST_send___turb1__GetVelocity_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity_(soap, data), 0) || soap_put___turb1__GetVelocity_(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocity_ * SOAP_FMAC4 soap_get___turb1__GetVelocity_(struct soap*, struct __turb1__GetVelocity_ *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocity_
#define soap_read___turb1__GetVelocity_(soap, data) ( ((data) ? (soap_default___turb1__GetVelocity_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocity_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocity_
#define soap_GET___turb1__GetVelocity_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocity_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocity_
#define soap_POST_recv___turb1__GetVelocity_(soap, data) ( soap_read___turb1__GetVelocity_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__NullOp__DEFINED
#define SOAP_TYPE___turb1__NullOp__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__NullOp_(struct soap*, struct __turb1__NullOp_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__NullOp_(struct soap*, const struct __turb1__NullOp_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__NullOp_(struct soap*, const char*, int, const struct __turb1__NullOp_ *, const char*);
SOAP_FMAC3 struct __turb1__NullOp_ * SOAP_FMAC4 soap_in___turb1__NullOp_(struct soap*, const char*, struct __turb1__NullOp_ *, const char*);

SOAP_FMAC3 struct __turb1__NullOp_ * SOAP_FMAC4 soap_new___turb1__NullOp_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__NullOp_(struct soap*, const struct __turb1__NullOp_ *, const char*, const char*);

#ifndef soap_write___turb1__NullOp_
#define soap_write___turb1__NullOp_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__NullOp_(soap, data), 0) || soap_put___turb1__NullOp_(soap, data, "-turb1:NullOp", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__NullOp_
#define soap_PUT___turb1__NullOp_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp_(soap, data), 0) || soap_put___turb1__NullOp_(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__NullOp_
#define soap_PATCH___turb1__NullOp_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp_(soap, data), 0) || soap_put___turb1__NullOp_(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__NullOp_
#define soap_POST_send___turb1__NullOp_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp_(soap, data), 0) || soap_put___turb1__NullOp_(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__NullOp_ * SOAP_FMAC4 soap_get___turb1__NullOp_(struct soap*, struct __turb1__NullOp_ *, const char*, const char*);

#ifndef soap_read___turb1__NullOp_
#define soap_read___turb1__NullOp_(soap, data) ( ((data) ? (soap_default___turb1__NullOp_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__NullOp_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__NullOp_
#define soap_GET___turb1__NullOp_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__NullOp_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__NullOp_
#define soap_POST_recv___turb1__NullOp_(soap, data) ( soap_read___turb1__NullOp_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetThreshold_USCOREPython_DEFINED
#define SOAP_TYPE___turb1__GetThreshold_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetThreshold_USCOREPython(struct soap*, struct __turb1__GetThreshold_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetThreshold_USCOREPython(struct soap*, const struct __turb1__GetThreshold_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetThreshold_USCOREPython(struct soap*, const char*, int, const struct __turb1__GetThreshold_USCOREPython *, const char*);
SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_in___turb1__GetThreshold_USCOREPython(struct soap*, const char*, struct __turb1__GetThreshold_USCOREPython *, const char*);

SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_new___turb1__GetThreshold_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetThreshold_USCOREPython(struct soap*, const struct __turb1__GetThreshold_USCOREPython *, const char*, const char*);

#ifndef soap_write___turb1__GetThreshold_USCOREPython
#define soap_write___turb1__GetThreshold_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetThreshold_USCOREPython
#define soap_PUT___turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetThreshold_USCOREPython
#define soap_PATCH___turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetThreshold_USCOREPython
#define soap_POST_send___turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put___turb1__GetThreshold_USCOREPython(soap, data, "-turb1:GetThreshold_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_get___turb1__GetThreshold_USCOREPython(struct soap*, struct __turb1__GetThreshold_USCOREPython *, const char*, const char*);

#ifndef soap_read___turb1__GetThreshold_USCOREPython
#define soap_read___turb1__GetThreshold_USCOREPython(soap, data) ( ((data) ? (soap_default___turb1__GetThreshold_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetThreshold_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetThreshold_USCOREPython
#define soap_GET___turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetThreshold_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetThreshold_USCOREPython
#define soap_POST_recv___turb1__GetThreshold_USCOREPython(soap, data) ( soap_read___turb1__GetThreshold_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPosition_USCOREPython_DEFINED
#define SOAP_TYPE___turb1__GetPosition_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPosition_USCOREPython(struct soap*, struct __turb1__GetPosition_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPosition_USCOREPython(struct soap*, const struct __turb1__GetPosition_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPosition_USCOREPython(struct soap*, const char*, int, const struct __turb1__GetPosition_USCOREPython *, const char*);
SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_in___turb1__GetPosition_USCOREPython(struct soap*, const char*, struct __turb1__GetPosition_USCOREPython *, const char*);

SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_new___turb1__GetPosition_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPosition_USCOREPython(struct soap*, const struct __turb1__GetPosition_USCOREPython *, const char*, const char*);

#ifndef soap_write___turb1__GetPosition_USCOREPython
#define soap_write___turb1__GetPosition_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPosition_USCOREPython
#define soap_PUT___turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPosition_USCOREPython
#define soap_PATCH___turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPosition_USCOREPython
#define soap_POST_send___turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put___turb1__GetPosition_USCOREPython(soap, data, "-turb1:GetPosition_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_get___turb1__GetPosition_USCOREPython(struct soap*, struct __turb1__GetPosition_USCOREPython *, const char*, const char*);

#ifndef soap_read___turb1__GetPosition_USCOREPython
#define soap_read___turb1__GetPosition_USCOREPython(soap, data) ( ((data) ? (soap_default___turb1__GetPosition_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPosition_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPosition_USCOREPython
#define soap_GET___turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPosition_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPosition_USCOREPython
#define soap_POST_recv___turb1__GetPosition_USCOREPython(soap, data) ( soap_read___turb1__GetPosition_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetFilter_USCOREPython_DEFINED
#define SOAP_TYPE___turb1__GetFilter_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetFilter_USCOREPython(struct soap*, struct __turb1__GetFilter_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetFilter_USCOREPython(struct soap*, const struct __turb1__GetFilter_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetFilter_USCOREPython(struct soap*, const char*, int, const struct __turb1__GetFilter_USCOREPython *, const char*);
SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_in___turb1__GetFilter_USCOREPython(struct soap*, const char*, struct __turb1__GetFilter_USCOREPython *, const char*);

SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_new___turb1__GetFilter_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetFilter_USCOREPython(struct soap*, const struct __turb1__GetFilter_USCOREPython *, const char*, const char*);

#ifndef soap_write___turb1__GetFilter_USCOREPython
#define soap_write___turb1__GetFilter_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetFilter_USCOREPython
#define soap_PUT___turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetFilter_USCOREPython
#define soap_PATCH___turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetFilter_USCOREPython
#define soap_POST_send___turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put___turb1__GetFilter_USCOREPython(soap, data, "-turb1:GetFilter_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_get___turb1__GetFilter_USCOREPython(struct soap*, struct __turb1__GetFilter_USCOREPython *, const char*, const char*);

#ifndef soap_read___turb1__GetFilter_USCOREPython
#define soap_read___turb1__GetFilter_USCOREPython(soap, data) ( ((data) ? (soap_default___turb1__GetFilter_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetFilter_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetFilter_USCOREPython
#define soap_GET___turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetFilter_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetFilter_USCOREPython
#define soap_POST_recv___turb1__GetFilter_USCOREPython(soap, data) ( soap_read___turb1__GetFilter_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetData_USCOREPython_DEFINED
#define SOAP_TYPE___turb1__GetData_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetData_USCOREPython(struct soap*, struct __turb1__GetData_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetData_USCOREPython(struct soap*, const struct __turb1__GetData_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetData_USCOREPython(struct soap*, const char*, int, const struct __turb1__GetData_USCOREPython *, const char*);
SOAP_FMAC3 struct __turb1__GetData_USCOREPython * SOAP_FMAC4 soap_in___turb1__GetData_USCOREPython(struct soap*, const char*, struct __turb1__GetData_USCOREPython *, const char*);

SOAP_FMAC3 struct __turb1__GetData_USCOREPython * SOAP_FMAC4 soap_new___turb1__GetData_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetData_USCOREPython(struct soap*, const struct __turb1__GetData_USCOREPython *, const char*, const char*);

#ifndef soap_write___turb1__GetData_USCOREPython
#define soap_write___turb1__GetData_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetData_USCOREPython(soap, data), 0) || soap_put___turb1__GetData_USCOREPython(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetData_USCOREPython
#define soap_PUT___turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython(soap, data), 0) || soap_put___turb1__GetData_USCOREPython(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetData_USCOREPython
#define soap_PATCH___turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython(soap, data), 0) || soap_put___turb1__GetData_USCOREPython(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetData_USCOREPython
#define soap_POST_send___turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetData_USCOREPython(soap, data), 0) || soap_put___turb1__GetData_USCOREPython(soap, data, "-turb1:GetData_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetData_USCOREPython * SOAP_FMAC4 soap_get___turb1__GetData_USCOREPython(struct soap*, struct __turb1__GetData_USCOREPython *, const char*, const char*);

#ifndef soap_read___turb1__GetData_USCOREPython
#define soap_read___turb1__GetData_USCOREPython(soap, data) ( ((data) ? (soap_default___turb1__GetData_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetData_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetData_USCOREPython
#define soap_GET___turb1__GetData_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetData_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetData_USCOREPython
#define soap_POST_recv___turb1__GetData_USCOREPython(soap, data) ( soap_read___turb1__GetData_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetAnyCutoutWeb_DEFINED
#define SOAP_TYPE___turb1__GetAnyCutoutWeb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetAnyCutoutWeb(struct soap*, struct __turb1__GetAnyCutoutWeb *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetAnyCutoutWeb(struct soap*, const struct __turb1__GetAnyCutoutWeb *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetAnyCutoutWeb(struct soap*, const char*, int, const struct __turb1__GetAnyCutoutWeb *, const char*);
SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_in___turb1__GetAnyCutoutWeb(struct soap*, const char*, struct __turb1__GetAnyCutoutWeb *, const char*);

SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_new___turb1__GetAnyCutoutWeb(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetAnyCutoutWeb(struct soap*, const struct __turb1__GetAnyCutoutWeb *, const char*, const char*);

#ifndef soap_write___turb1__GetAnyCutoutWeb
#define soap_write___turb1__GetAnyCutoutWeb(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetAnyCutoutWeb
#define soap_PUT___turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetAnyCutoutWeb
#define soap_PATCH___turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetAnyCutoutWeb
#define soap_POST_send___turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put___turb1__GetAnyCutoutWeb(soap, data, "-turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_get___turb1__GetAnyCutoutWeb(struct soap*, struct __turb1__GetAnyCutoutWeb *, const char*, const char*);

#ifndef soap_read___turb1__GetAnyCutoutWeb
#define soap_read___turb1__GetAnyCutoutWeb(soap, data) ( ((data) ? (soap_default___turb1__GetAnyCutoutWeb(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetAnyCutoutWeb(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetAnyCutoutWeb
#define soap_GET___turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetAnyCutoutWeb(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetAnyCutoutWeb
#define soap_POST_recv___turb1__GetAnyCutoutWeb(soap, data) ( soap_read___turb1__GetAnyCutoutWeb(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawTemperature_DEFINED
#define SOAP_TYPE___turb1__GetRawTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawTemperature(struct soap*, struct __turb1__GetRawTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawTemperature(struct soap*, const struct __turb1__GetRawTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawTemperature(struct soap*, const char*, int, const struct __turb1__GetRawTemperature *, const char*);
SOAP_FMAC3 struct __turb1__GetRawTemperature * SOAP_FMAC4 soap_in___turb1__GetRawTemperature(struct soap*, const char*, struct __turb1__GetRawTemperature *, const char*);

SOAP_FMAC3 struct __turb1__GetRawTemperature * SOAP_FMAC4 soap_new___turb1__GetRawTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawTemperature(struct soap*, const struct __turb1__GetRawTemperature *, const char*, const char*);

#ifndef soap_write___turb1__GetRawTemperature
#define soap_write___turb1__GetRawTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawTemperature(soap, data), 0) || soap_put___turb1__GetRawTemperature(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawTemperature
#define soap_PUT___turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature(soap, data), 0) || soap_put___turb1__GetRawTemperature(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawTemperature
#define soap_PATCH___turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature(soap, data), 0) || soap_put___turb1__GetRawTemperature(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawTemperature
#define soap_POST_send___turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawTemperature(soap, data), 0) || soap_put___turb1__GetRawTemperature(soap, data, "-turb1:GetRawTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawTemperature * SOAP_FMAC4 soap_get___turb1__GetRawTemperature(struct soap*, struct __turb1__GetRawTemperature *, const char*, const char*);

#ifndef soap_read___turb1__GetRawTemperature
#define soap_read___turb1__GetRawTemperature(soap, data) ( ((data) ? (soap_default___turb1__GetRawTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawTemperature
#define soap_GET___turb1__GetRawTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawTemperature
#define soap_POST_recv___turb1__GetRawTemperature(soap, data) ( soap_read___turb1__GetRawTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawDensity_DEFINED
#define SOAP_TYPE___turb1__GetRawDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawDensity(struct soap*, struct __turb1__GetRawDensity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawDensity(struct soap*, const struct __turb1__GetRawDensity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawDensity(struct soap*, const char*, int, const struct __turb1__GetRawDensity *, const char*);
SOAP_FMAC3 struct __turb1__GetRawDensity * SOAP_FMAC4 soap_in___turb1__GetRawDensity(struct soap*, const char*, struct __turb1__GetRawDensity *, const char*);

SOAP_FMAC3 struct __turb1__GetRawDensity * SOAP_FMAC4 soap_new___turb1__GetRawDensity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawDensity(struct soap*, const struct __turb1__GetRawDensity *, const char*, const char*);

#ifndef soap_write___turb1__GetRawDensity
#define soap_write___turb1__GetRawDensity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawDensity(soap, data), 0) || soap_put___turb1__GetRawDensity(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawDensity
#define soap_PUT___turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity(soap, data), 0) || soap_put___turb1__GetRawDensity(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawDensity
#define soap_PATCH___turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity(soap, data), 0) || soap_put___turb1__GetRawDensity(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawDensity
#define soap_POST_send___turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawDensity(soap, data), 0) || soap_put___turb1__GetRawDensity(soap, data, "-turb1:GetRawDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawDensity * SOAP_FMAC4 soap_get___turb1__GetRawDensity(struct soap*, struct __turb1__GetRawDensity *, const char*, const char*);

#ifndef soap_read___turb1__GetRawDensity
#define soap_read___turb1__GetRawDensity(soap, data) ( ((data) ? (soap_default___turb1__GetRawDensity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawDensity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawDensity
#define soap_GET___turb1__GetRawDensity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawDensity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawDensity
#define soap_POST_recv___turb1__GetRawDensity(soap, data) ( soap_read___turb1__GetRawDensity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawPressure_DEFINED
#define SOAP_TYPE___turb1__GetRawPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawPressure(struct soap*, struct __turb1__GetRawPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawPressure(struct soap*, const struct __turb1__GetRawPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawPressure(struct soap*, const char*, int, const struct __turb1__GetRawPressure *, const char*);
SOAP_FMAC3 struct __turb1__GetRawPressure * SOAP_FMAC4 soap_in___turb1__GetRawPressure(struct soap*, const char*, struct __turb1__GetRawPressure *, const char*);

SOAP_FMAC3 struct __turb1__GetRawPressure * SOAP_FMAC4 soap_new___turb1__GetRawPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawPressure(struct soap*, const struct __turb1__GetRawPressure *, const char*, const char*);

#ifndef soap_write___turb1__GetRawPressure
#define soap_write___turb1__GetRawPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawPressure(soap, data), 0) || soap_put___turb1__GetRawPressure(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawPressure
#define soap_PUT___turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure(soap, data), 0) || soap_put___turb1__GetRawPressure(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawPressure
#define soap_PATCH___turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure(soap, data), 0) || soap_put___turb1__GetRawPressure(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawPressure
#define soap_POST_send___turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawPressure(soap, data), 0) || soap_put___turb1__GetRawPressure(soap, data, "-turb1:GetRawPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawPressure * SOAP_FMAC4 soap_get___turb1__GetRawPressure(struct soap*, struct __turb1__GetRawPressure *, const char*, const char*);

#ifndef soap_read___turb1__GetRawPressure
#define soap_read___turb1__GetRawPressure(soap, data) ( ((data) ? (soap_default___turb1__GetRawPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawPressure
#define soap_GET___turb1__GetRawPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawPressure
#define soap_POST_recv___turb1__GetRawPressure(soap, data) ( soap_read___turb1__GetRawPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawVectorPotential_DEFINED
#define SOAP_TYPE___turb1__GetRawVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawVectorPotential(struct soap*, struct __turb1__GetRawVectorPotential *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawVectorPotential(struct soap*, const struct __turb1__GetRawVectorPotential *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawVectorPotential(struct soap*, const char*, int, const struct __turb1__GetRawVectorPotential *, const char*);
SOAP_FMAC3 struct __turb1__GetRawVectorPotential * SOAP_FMAC4 soap_in___turb1__GetRawVectorPotential(struct soap*, const char*, struct __turb1__GetRawVectorPotential *, const char*);

SOAP_FMAC3 struct __turb1__GetRawVectorPotential * SOAP_FMAC4 soap_new___turb1__GetRawVectorPotential(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawVectorPotential(struct soap*, const struct __turb1__GetRawVectorPotential *, const char*, const char*);

#ifndef soap_write___turb1__GetRawVectorPotential
#define soap_write___turb1__GetRawVectorPotential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawVectorPotential(soap, data), 0) || soap_put___turb1__GetRawVectorPotential(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawVectorPotential
#define soap_PUT___turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential(soap, data), 0) || soap_put___turb1__GetRawVectorPotential(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawVectorPotential
#define soap_PATCH___turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential(soap, data), 0) || soap_put___turb1__GetRawVectorPotential(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawVectorPotential
#define soap_POST_send___turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVectorPotential(soap, data), 0) || soap_put___turb1__GetRawVectorPotential(soap, data, "-turb1:GetRawVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawVectorPotential * SOAP_FMAC4 soap_get___turb1__GetRawVectorPotential(struct soap*, struct __turb1__GetRawVectorPotential *, const char*, const char*);

#ifndef soap_read___turb1__GetRawVectorPotential
#define soap_read___turb1__GetRawVectorPotential(soap, data) ( ((data) ? (soap_default___turb1__GetRawVectorPotential(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawVectorPotential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawVectorPotential
#define soap_GET___turb1__GetRawVectorPotential(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawVectorPotential(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawVectorPotential
#define soap_POST_recv___turb1__GetRawVectorPotential(soap, data) ( soap_read___turb1__GetRawVectorPotential(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawMagneticField_DEFINED
#define SOAP_TYPE___turb1__GetRawMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawMagneticField(struct soap*, struct __turb1__GetRawMagneticField *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawMagneticField(struct soap*, const struct __turb1__GetRawMagneticField *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawMagneticField(struct soap*, const char*, int, const struct __turb1__GetRawMagneticField *, const char*);
SOAP_FMAC3 struct __turb1__GetRawMagneticField * SOAP_FMAC4 soap_in___turb1__GetRawMagneticField(struct soap*, const char*, struct __turb1__GetRawMagneticField *, const char*);

SOAP_FMAC3 struct __turb1__GetRawMagneticField * SOAP_FMAC4 soap_new___turb1__GetRawMagneticField(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawMagneticField(struct soap*, const struct __turb1__GetRawMagneticField *, const char*, const char*);

#ifndef soap_write___turb1__GetRawMagneticField
#define soap_write___turb1__GetRawMagneticField(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawMagneticField(soap, data), 0) || soap_put___turb1__GetRawMagneticField(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawMagneticField
#define soap_PUT___turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField(soap, data), 0) || soap_put___turb1__GetRawMagneticField(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawMagneticField
#define soap_PATCH___turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField(soap, data), 0) || soap_put___turb1__GetRawMagneticField(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawMagneticField
#define soap_POST_send___turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawMagneticField(soap, data), 0) || soap_put___turb1__GetRawMagneticField(soap, data, "-turb1:GetRawMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawMagneticField * SOAP_FMAC4 soap_get___turb1__GetRawMagneticField(struct soap*, struct __turb1__GetRawMagneticField *, const char*, const char*);

#ifndef soap_read___turb1__GetRawMagneticField
#define soap_read___turb1__GetRawMagneticField(soap, data) ( ((data) ? (soap_default___turb1__GetRawMagneticField(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawMagneticField(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawMagneticField
#define soap_GET___turb1__GetRawMagneticField(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawMagneticField(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawMagneticField
#define soap_POST_recv___turb1__GetRawMagneticField(soap, data) ( soap_read___turb1__GetRawMagneticField(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetRawVelocity_DEFINED
#define SOAP_TYPE___turb1__GetRawVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetRawVelocity(struct soap*, struct __turb1__GetRawVelocity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetRawVelocity(struct soap*, const struct __turb1__GetRawVelocity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetRawVelocity(struct soap*, const char*, int, const struct __turb1__GetRawVelocity *, const char*);
SOAP_FMAC3 struct __turb1__GetRawVelocity * SOAP_FMAC4 soap_in___turb1__GetRawVelocity(struct soap*, const char*, struct __turb1__GetRawVelocity *, const char*);

SOAP_FMAC3 struct __turb1__GetRawVelocity * SOAP_FMAC4 soap_new___turb1__GetRawVelocity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetRawVelocity(struct soap*, const struct __turb1__GetRawVelocity *, const char*, const char*);

#ifndef soap_write___turb1__GetRawVelocity
#define soap_write___turb1__GetRawVelocity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetRawVelocity(soap, data), 0) || soap_put___turb1__GetRawVelocity(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetRawVelocity
#define soap_PUT___turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity(soap, data), 0) || soap_put___turb1__GetRawVelocity(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetRawVelocity
#define soap_PATCH___turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity(soap, data), 0) || soap_put___turb1__GetRawVelocity(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetRawVelocity
#define soap_POST_send___turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetRawVelocity(soap, data), 0) || soap_put___turb1__GetRawVelocity(soap, data, "-turb1:GetRawVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetRawVelocity * SOAP_FMAC4 soap_get___turb1__GetRawVelocity(struct soap*, struct __turb1__GetRawVelocity *, const char*, const char*);

#ifndef soap_read___turb1__GetRawVelocity
#define soap_read___turb1__GetRawVelocity(soap, data) ( ((data) ? (soap_default___turb1__GetRawVelocity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetRawVelocity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetRawVelocity
#define soap_GET___turb1__GetRawVelocity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetRawVelocity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetRawVelocity
#define soap_POST_recv___turb1__GetRawVelocity(soap, data) ( soap_read___turb1__GetRawVelocity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityBatch_DEFINED
#define SOAP_TYPE___turb1__GetVelocityBatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityBatch(struct soap*, struct __turb1__GetVelocityBatch *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityBatch(struct soap*, const struct __turb1__GetVelocityBatch *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityBatch(struct soap*, const char*, int, const struct __turb1__GetVelocityBatch *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityBatch * SOAP_FMAC4 soap_in___turb1__GetVelocityBatch(struct soap*, const char*, struct __turb1__GetVelocityBatch *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityBatch * SOAP_FMAC4 soap_new___turb1__GetVelocityBatch(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityBatch(struct soap*, const struct __turb1__GetVelocityBatch *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityBatch
#define soap_write___turb1__GetVelocityBatch(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityBatch(soap, data), 0) || soap_put___turb1__GetVelocityBatch(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityBatch
#define soap_PUT___turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch(soap, data), 0) || soap_put___turb1__GetVelocityBatch(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityBatch
#define soap_PATCH___turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch(soap, data), 0) || soap_put___turb1__GetVelocityBatch(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityBatch
#define soap_POST_send___turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityBatch(soap, data), 0) || soap_put___turb1__GetVelocityBatch(soap, data, "-turb1:GetVelocityBatch", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityBatch * SOAP_FMAC4 soap_get___turb1__GetVelocityBatch(struct soap*, struct __turb1__GetVelocityBatch *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityBatch
#define soap_read___turb1__GetVelocityBatch(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityBatch(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityBatch(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityBatch
#define soap_GET___turb1__GetVelocityBatch(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityBatch(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityBatch
#define soap_POST_recv___turb1__GetVelocityBatch(soap, data) ( soap_read___turb1__GetVelocityBatch(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetLaplacianOfGradient_DEFINED
#define SOAP_TYPE___turb1__GetLaplacianOfGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetLaplacianOfGradient(struct soap*, struct __turb1__GetLaplacianOfGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetLaplacianOfGradient(struct soap*, const struct __turb1__GetLaplacianOfGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetLaplacianOfGradient(struct soap*, const char*, int, const struct __turb1__GetLaplacianOfGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_in___turb1__GetLaplacianOfGradient(struct soap*, const char*, struct __turb1__GetLaplacianOfGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_new___turb1__GetLaplacianOfGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetLaplacianOfGradient(struct soap*, const struct __turb1__GetLaplacianOfGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetLaplacianOfGradient
#define soap_write___turb1__GetLaplacianOfGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetLaplacianOfGradient
#define soap_PUT___turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetLaplacianOfGradient
#define soap_PATCH___turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetLaplacianOfGradient
#define soap_POST_send___turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put___turb1__GetLaplacianOfGradient(soap, data, "-turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_get___turb1__GetLaplacianOfGradient(struct soap*, struct __turb1__GetLaplacianOfGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetLaplacianOfGradient
#define soap_read___turb1__GetLaplacianOfGradient(soap, data) ( ((data) ? (soap_default___turb1__GetLaplacianOfGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetLaplacianOfGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetLaplacianOfGradient
#define soap_GET___turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetLaplacianOfGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetLaplacianOfGradient
#define soap_POST_recv___turb1__GetLaplacianOfGradient(soap, data) ( soap_read___turb1__GetLaplacianOfGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterGradient_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterGradient(struct soap*, struct __turb1__GetBoxFilterGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterGradient(struct soap*, const struct __turb1__GetBoxFilterGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterGradient(struct soap*, const char*, int, const struct __turb1__GetBoxFilterGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_in___turb1__GetBoxFilterGradient(struct soap*, const char*, struct __turb1__GetBoxFilterGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_new___turb1__GetBoxFilterGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterGradient(struct soap*, const struct __turb1__GetBoxFilterGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterGradient
#define soap_write___turb1__GetBoxFilterGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterGradient(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterGradient
#define soap_PUT___turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterGradient
#define soap_PATCH___turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterGradient
#define soap_POST_send___turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterGradient(soap, data), 0) || soap_put___turb1__GetBoxFilterGradient(soap, data, "-turb1:GetBoxFilterGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_get___turb1__GetBoxFilterGradient(struct soap*, struct __turb1__GetBoxFilterGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterGradient
#define soap_read___turb1__GetBoxFilterGradient(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterGradient
#define soap_GET___turb1__GetBoxFilterGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterGradient
#define soap_POST_recv___turb1__GetBoxFilterGradient(soap, data) ( soap_read___turb1__GetBoxFilterGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSscalar_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSscalar_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSscalar(struct soap*, struct __turb1__GetBoxFilterSGSscalar *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSscalar(struct soap*, const struct __turb1__GetBoxFilterSGSscalar *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSscalar(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSscalar *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSscalar(struct soap*, const char*, struct __turb1__GetBoxFilterSGSscalar *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSscalar(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSscalar(struct soap*, const struct __turb1__GetBoxFilterSGSscalar *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSscalar
#define soap_write___turb1__GetBoxFilterSGSscalar(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSscalar
#define soap_PUT___turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSscalar
#define soap_PATCH___turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSscalar
#define soap_POST_send___turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSscalar(soap, data, "-turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSscalar(struct soap*, struct __turb1__GetBoxFilterSGSscalar *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSscalar
#define soap_read___turb1__GetBoxFilterSGSscalar(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSscalar(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSscalar(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSscalar
#define soap_GET___turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSscalar(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSscalar
#define soap_POST_recv___turb1__GetBoxFilterSGSscalar(soap, data) ( soap_read___turb1__GetBoxFilterSGSscalar(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSvector_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSvector_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSvector(struct soap*, struct __turb1__GetBoxFilterSGSvector *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSvector(struct soap*, const struct __turb1__GetBoxFilterSGSvector *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSvector(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSvector *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSvector(struct soap*, const char*, struct __turb1__GetBoxFilterSGSvector *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSvector(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSvector(struct soap*, const struct __turb1__GetBoxFilterSGSvector *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSvector
#define soap_write___turb1__GetBoxFilterSGSvector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSvector
#define soap_PUT___turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSvector
#define soap_PATCH___turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSvector
#define soap_POST_send___turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSvector(soap, data, "-turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSvector(struct soap*, struct __turb1__GetBoxFilterSGSvector *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSvector
#define soap_read___turb1__GetBoxFilterSGSvector(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSvector(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSvector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSvector
#define soap_GET___turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSvector(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSvector
#define soap_POST_recv___turb1__GetBoxFilterSGSvector(soap, data) ( soap_read___turb1__GetBoxFilterSGSvector(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGStensor_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGStensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGStensor(struct soap*, struct __turb1__GetBoxFilterSGStensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGStensor(struct soap*, const struct __turb1__GetBoxFilterSGStensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGStensor(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGStensor *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGStensor(struct soap*, const char*, struct __turb1__GetBoxFilterSGStensor *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGStensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGStensor(struct soap*, const struct __turb1__GetBoxFilterSGStensor *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGStensor
#define soap_write___turb1__GetBoxFilterSGStensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGStensor
#define soap_PUT___turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGStensor
#define soap_PATCH___turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGStensor
#define soap_POST_send___turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGStensor(soap, data, "-turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGStensor(struct soap*, struct __turb1__GetBoxFilterSGStensor *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGStensor
#define soap_read___turb1__GetBoxFilterSGStensor(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGStensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGStensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGStensor
#define soap_GET___turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGStensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGStensor
#define soap_POST_recv___turb1__GetBoxFilterSGStensor(soap, data) ( soap_read___turb1__GetBoxFilterSGStensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGSsymtensor(struct soap*, struct __turb1__GetBoxFilterSGSsymtensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGSsymtensor(struct soap*, const struct __turb1__GetBoxFilterSGSsymtensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGSsymtensor(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGSsymtensor *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGSsymtensor(struct soap*, const char*, struct __turb1__GetBoxFilterSGSsymtensor *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGSsymtensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGSsymtensor(struct soap*, const struct __turb1__GetBoxFilterSGSsymtensor *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGSsymtensor
#define soap_write___turb1__GetBoxFilterSGSsymtensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGSsymtensor
#define soap_PUT___turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGSsymtensor
#define soap_PATCH___turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGSsymtensor
#define soap_POST_send___turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put___turb1__GetBoxFilterSGSsymtensor(soap, data, "-turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGSsymtensor(struct soap*, struct __turb1__GetBoxFilterSGSsymtensor *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGSsymtensor
#define soap_read___turb1__GetBoxFilterSGSsymtensor(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGSsymtensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGSsymtensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGSsymtensor
#define soap_GET___turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGSsymtensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGSsymtensor
#define soap_POST_recv___turb1__GetBoxFilterSGSsymtensor(soap, data) ( soap_read___turb1__GetBoxFilterSGSsymtensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilterSGS_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilterSGS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilterSGS(struct soap*, struct __turb1__GetBoxFilterSGS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilterSGS(struct soap*, const struct __turb1__GetBoxFilterSGS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilterSGS(struct soap*, const char*, int, const struct __turb1__GetBoxFilterSGS *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_in___turb1__GetBoxFilterSGS(struct soap*, const char*, struct __turb1__GetBoxFilterSGS *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_new___turb1__GetBoxFilterSGS(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilterSGS(struct soap*, const struct __turb1__GetBoxFilterSGS *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilterSGS
#define soap_write___turb1__GetBoxFilterSGS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilterSGS(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilterSGS
#define soap_PUT___turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilterSGS
#define soap_PATCH___turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilterSGS
#define soap_POST_send___turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilterSGS(soap, data), 0) || soap_put___turb1__GetBoxFilterSGS(soap, data, "-turb1:GetBoxFilterSGS", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_get___turb1__GetBoxFilterSGS(struct soap*, struct __turb1__GetBoxFilterSGS *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilterSGS
#define soap_read___turb1__GetBoxFilterSGS(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilterSGS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilterSGS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilterSGS
#define soap_GET___turb1__GetBoxFilterSGS(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilterSGS(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilterSGS
#define soap_POST_recv___turb1__GetBoxFilterSGS(soap, data) ( soap_read___turb1__GetBoxFilterSGS(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetBoxFilter_DEFINED
#define SOAP_TYPE___turb1__GetBoxFilter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetBoxFilter(struct soap*, struct __turb1__GetBoxFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetBoxFilter(struct soap*, const struct __turb1__GetBoxFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetBoxFilter(struct soap*, const char*, int, const struct __turb1__GetBoxFilter *, const char*);
SOAP_FMAC3 struct __turb1__GetBoxFilter * SOAP_FMAC4 soap_in___turb1__GetBoxFilter(struct soap*, const char*, struct __turb1__GetBoxFilter *, const char*);

SOAP_FMAC3 struct __turb1__GetBoxFilter * SOAP_FMAC4 soap_new___turb1__GetBoxFilter(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetBoxFilter(struct soap*, const struct __turb1__GetBoxFilter *, const char*, const char*);

#ifndef soap_write___turb1__GetBoxFilter
#define soap_write___turb1__GetBoxFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetBoxFilter(soap, data), 0) || soap_put___turb1__GetBoxFilter(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetBoxFilter
#define soap_PUT___turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter(soap, data), 0) || soap_put___turb1__GetBoxFilter(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetBoxFilter
#define soap_PATCH___turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter(soap, data), 0) || soap_put___turb1__GetBoxFilter(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetBoxFilter
#define soap_POST_send___turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetBoxFilter(soap, data), 0) || soap_put___turb1__GetBoxFilter(soap, data, "-turb1:GetBoxFilter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetBoxFilter * SOAP_FMAC4 soap_get___turb1__GetBoxFilter(struct soap*, struct __turb1__GetBoxFilter *, const char*, const char*);

#ifndef soap_read___turb1__GetBoxFilter
#define soap_read___turb1__GetBoxFilter(soap, data) ( ((data) ? (soap_default___turb1__GetBoxFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetBoxFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetBoxFilter
#define soap_GET___turb1__GetBoxFilter(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetBoxFilter(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetBoxFilter
#define soap_POST_recv___turb1__GetBoxFilter(soap, data) ( soap_read___turb1__GetBoxFilter(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetInvariant_DEFINED
#define SOAP_TYPE___turb1__GetInvariant_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetInvariant(struct soap*, struct __turb1__GetInvariant *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetInvariant(struct soap*, const struct __turb1__GetInvariant *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetInvariant(struct soap*, const char*, int, const struct __turb1__GetInvariant *, const char*);
SOAP_FMAC3 struct __turb1__GetInvariant * SOAP_FMAC4 soap_in___turb1__GetInvariant(struct soap*, const char*, struct __turb1__GetInvariant *, const char*);

SOAP_FMAC3 struct __turb1__GetInvariant * SOAP_FMAC4 soap_new___turb1__GetInvariant(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetInvariant(struct soap*, const struct __turb1__GetInvariant *, const char*, const char*);

#ifndef soap_write___turb1__GetInvariant
#define soap_write___turb1__GetInvariant(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetInvariant(soap, data), 0) || soap_put___turb1__GetInvariant(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetInvariant
#define soap_PUT___turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant(soap, data), 0) || soap_put___turb1__GetInvariant(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetInvariant
#define soap_PATCH___turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant(soap, data), 0) || soap_put___turb1__GetInvariant(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetInvariant
#define soap_POST_send___turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetInvariant(soap, data), 0) || soap_put___turb1__GetInvariant(soap, data, "-turb1:GetInvariant", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetInvariant * SOAP_FMAC4 soap_get___turb1__GetInvariant(struct soap*, struct __turb1__GetInvariant *, const char*, const char*);

#ifndef soap_read___turb1__GetInvariant
#define soap_read___turb1__GetInvariant(soap, data) ( ((data) ? (soap_default___turb1__GetInvariant(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetInvariant(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetInvariant
#define soap_GET___turb1__GetInvariant(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetInvariant(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetInvariant
#define soap_POST_recv___turb1__GetInvariant(soap, data) ( soap_read___turb1__GetInvariant(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetForce_DEFINED
#define SOAP_TYPE___turb1__GetForce_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetForce(struct soap*, struct __turb1__GetForce *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetForce(struct soap*, const struct __turb1__GetForce *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetForce(struct soap*, const char*, int, const struct __turb1__GetForce *, const char*);
SOAP_FMAC3 struct __turb1__GetForce * SOAP_FMAC4 soap_in___turb1__GetForce(struct soap*, const char*, struct __turb1__GetForce *, const char*);

SOAP_FMAC3 struct __turb1__GetForce * SOAP_FMAC4 soap_new___turb1__GetForce(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetForce(struct soap*, const struct __turb1__GetForce *, const char*, const char*);

#ifndef soap_write___turb1__GetForce
#define soap_write___turb1__GetForce(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetForce(soap, data), 0) || soap_put___turb1__GetForce(soap, data, "-turb1:GetForce", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetForce
#define soap_PUT___turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce(soap, data), 0) || soap_put___turb1__GetForce(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetForce
#define soap_PATCH___turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce(soap, data), 0) || soap_put___turb1__GetForce(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetForce
#define soap_POST_send___turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetForce(soap, data), 0) || soap_put___turb1__GetForce(soap, data, "-turb1:GetForce", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetForce * SOAP_FMAC4 soap_get___turb1__GetForce(struct soap*, struct __turb1__GetForce *, const char*, const char*);

#ifndef soap_read___turb1__GetForce
#define soap_read___turb1__GetForce(soap, data) ( ((data) ? (soap_default___turb1__GetForce(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetForce(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetForce
#define soap_GET___turb1__GetForce(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetForce(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetForce
#define soap_POST_recv___turb1__GetForce(soap, data) ( soap_read___turb1__GetForce(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetThreshold_DEFINED
#define SOAP_TYPE___turb1__GetThreshold_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetThreshold(struct soap*, struct __turb1__GetThreshold *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetThreshold(struct soap*, const struct __turb1__GetThreshold *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetThreshold(struct soap*, const char*, int, const struct __turb1__GetThreshold *, const char*);
SOAP_FMAC3 struct __turb1__GetThreshold * SOAP_FMAC4 soap_in___turb1__GetThreshold(struct soap*, const char*, struct __turb1__GetThreshold *, const char*);

SOAP_FMAC3 struct __turb1__GetThreshold * SOAP_FMAC4 soap_new___turb1__GetThreshold(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetThreshold(struct soap*, const struct __turb1__GetThreshold *, const char*, const char*);

#ifndef soap_write___turb1__GetThreshold
#define soap_write___turb1__GetThreshold(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetThreshold(soap, data), 0) || soap_put___turb1__GetThreshold(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetThreshold
#define soap_PUT___turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold(soap, data), 0) || soap_put___turb1__GetThreshold(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetThreshold
#define soap_PATCH___turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold(soap, data), 0) || soap_put___turb1__GetThreshold(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetThreshold
#define soap_POST_send___turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetThreshold(soap, data), 0) || soap_put___turb1__GetThreshold(soap, data, "-turb1:GetThreshold", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetThreshold * SOAP_FMAC4 soap_get___turb1__GetThreshold(struct soap*, struct __turb1__GetThreshold *, const char*, const char*);

#ifndef soap_read___turb1__GetThreshold
#define soap_read___turb1__GetThreshold(soap, data) ( ((data) ? (soap_default___turb1__GetThreshold(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetThreshold(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetThreshold
#define soap_GET___turb1__GetThreshold(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetThreshold(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetThreshold
#define soap_POST_recv___turb1__GetThreshold(soap, data) ( soap_read___turb1__GetThreshold(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPosition_DEFINED
#define SOAP_TYPE___turb1__GetPosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPosition(struct soap*, struct __turb1__GetPosition *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPosition(struct soap*, const struct __turb1__GetPosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPosition(struct soap*, const char*, int, const struct __turb1__GetPosition *, const char*);
SOAP_FMAC3 struct __turb1__GetPosition * SOAP_FMAC4 soap_in___turb1__GetPosition(struct soap*, const char*, struct __turb1__GetPosition *, const char*);

SOAP_FMAC3 struct __turb1__GetPosition * SOAP_FMAC4 soap_new___turb1__GetPosition(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPosition(struct soap*, const struct __turb1__GetPosition *, const char*, const char*);

#ifndef soap_write___turb1__GetPosition
#define soap_write___turb1__GetPosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPosition(soap, data), 0) || soap_put___turb1__GetPosition(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPosition
#define soap_PUT___turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition(soap, data), 0) || soap_put___turb1__GetPosition(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPosition
#define soap_PATCH___turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition(soap, data), 0) || soap_put___turb1__GetPosition(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPosition
#define soap_POST_send___turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPosition(soap, data), 0) || soap_put___turb1__GetPosition(soap, data, "-turb1:GetPosition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPosition * SOAP_FMAC4 soap_get___turb1__GetPosition(struct soap*, struct __turb1__GetPosition *, const char*, const char*);

#ifndef soap_read___turb1__GetPosition
#define soap_read___turb1__GetPosition(soap, data) ( ((data) ? (soap_default___turb1__GetPosition(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPosition(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPosition
#define soap_GET___turb1__GetPosition(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPosition(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPosition
#define soap_POST_recv___turb1__GetPosition(soap, data) ( soap_read___turb1__GetPosition(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialLaplacian_DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialLaplacian(struct soap*, struct __turb1__GetVectorPotentialLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialLaplacian(struct soap*, const struct __turb1__GetVectorPotentialLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialLaplacian(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialLaplacian *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialLaplacian(struct soap*, const char*, struct __turb1__GetVectorPotentialLaplacian *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialLaplacian(struct soap*, const struct __turb1__GetVectorPotentialLaplacian *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialLaplacian
#define soap_write___turb1__GetVectorPotentialLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialLaplacian
#define soap_PUT___turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialLaplacian
#define soap_PATCH___turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialLaplacian
#define soap_POST_send___turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put___turb1__GetVectorPotentialLaplacian(soap, data, "-turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialLaplacian(struct soap*, struct __turb1__GetVectorPotentialLaplacian *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialLaplacian
#define soap_read___turb1__GetVectorPotentialLaplacian(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialLaplacian
#define soap_GET___turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialLaplacian
#define soap_POST_recv___turb1__GetVectorPotentialLaplacian(soap, data) ( soap_read___turb1__GetVectorPotentialLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticFieldLaplacian_DEFINED
#define SOAP_TYPE___turb1__GetMagneticFieldLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticFieldLaplacian(struct soap*, struct __turb1__GetMagneticFieldLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticFieldLaplacian(struct soap*, const struct __turb1__GetMagneticFieldLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticFieldLaplacian(struct soap*, const char*, int, const struct __turb1__GetMagneticFieldLaplacian *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_in___turb1__GetMagneticFieldLaplacian(struct soap*, const char*, struct __turb1__GetMagneticFieldLaplacian *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_new___turb1__GetMagneticFieldLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticFieldLaplacian(struct soap*, const struct __turb1__GetMagneticFieldLaplacian *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticFieldLaplacian
#define soap_write___turb1__GetMagneticFieldLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticFieldLaplacian
#define soap_PUT___turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticFieldLaplacian
#define soap_PATCH___turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticFieldLaplacian
#define soap_POST_send___turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put___turb1__GetMagneticFieldLaplacian(soap, data, "-turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_get___turb1__GetMagneticFieldLaplacian(struct soap*, struct __turb1__GetMagneticFieldLaplacian *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticFieldLaplacian
#define soap_read___turb1__GetMagneticFieldLaplacian(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticFieldLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticFieldLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticFieldLaplacian
#define soap_GET___turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticFieldLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticFieldLaplacian
#define soap_POST_recv___turb1__GetMagneticFieldLaplacian(soap, data) ( soap_read___turb1__GetMagneticFieldLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityLaplacian_DEFINED
#define SOAP_TYPE___turb1__GetVelocityLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityLaplacian(struct soap*, struct __turb1__GetVelocityLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityLaplacian(struct soap*, const struct __turb1__GetVelocityLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityLaplacian(struct soap*, const char*, int, const struct __turb1__GetVelocityLaplacian *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_in___turb1__GetVelocityLaplacian(struct soap*, const char*, struct __turb1__GetVelocityLaplacian *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_new___turb1__GetVelocityLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityLaplacian(struct soap*, const struct __turb1__GetVelocityLaplacian *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityLaplacian
#define soap_write___turb1__GetVelocityLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityLaplacian(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityLaplacian
#define soap_PUT___turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityLaplacian
#define soap_PATCH___turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityLaplacian
#define soap_POST_send___turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityLaplacian(soap, data), 0) || soap_put___turb1__GetVelocityLaplacian(soap, data, "-turb1:GetVelocityLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_get___turb1__GetVelocityLaplacian(struct soap*, struct __turb1__GetVelocityLaplacian *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityLaplacian
#define soap_read___turb1__GetVelocityLaplacian(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityLaplacian
#define soap_GET___turb1__GetVelocityLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityLaplacian
#define soap_POST_recv___turb1__GetVelocityLaplacian(soap, data) ( soap_read___turb1__GetVelocityLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperatureHessian_DEFINED
#define SOAP_TYPE___turb1__GetTemperatureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperatureHessian(struct soap*, struct __turb1__GetTemperatureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperatureHessian(struct soap*, const struct __turb1__GetTemperatureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperatureHessian(struct soap*, const char*, int, const struct __turb1__GetTemperatureHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperatureHessian * SOAP_FMAC4 soap_in___turb1__GetTemperatureHessian(struct soap*, const char*, struct __turb1__GetTemperatureHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperatureHessian * SOAP_FMAC4 soap_new___turb1__GetTemperatureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperatureHessian(struct soap*, const struct __turb1__GetTemperatureHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperatureHessian
#define soap_write___turb1__GetTemperatureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperatureHessian(soap, data), 0) || soap_put___turb1__GetTemperatureHessian(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperatureHessian
#define soap_PUT___turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian(soap, data), 0) || soap_put___turb1__GetTemperatureHessian(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperatureHessian
#define soap_PATCH___turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian(soap, data), 0) || soap_put___turb1__GetTemperatureHessian(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperatureHessian
#define soap_POST_send___turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureHessian(soap, data), 0) || soap_put___turb1__GetTemperatureHessian(soap, data, "-turb1:GetTemperatureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperatureHessian * SOAP_FMAC4 soap_get___turb1__GetTemperatureHessian(struct soap*, struct __turb1__GetTemperatureHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperatureHessian
#define soap_read___turb1__GetTemperatureHessian(soap, data) ( ((data) ? (soap_default___turb1__GetTemperatureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperatureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperatureHessian
#define soap_GET___turb1__GetTemperatureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperatureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperatureHessian
#define soap_POST_recv___turb1__GetTemperatureHessian(soap, data) ( soap_read___turb1__GetTemperatureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensityHessian_DEFINED
#define SOAP_TYPE___turb1__GetDensityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensityHessian(struct soap*, struct __turb1__GetDensityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensityHessian(struct soap*, const struct __turb1__GetDensityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensityHessian(struct soap*, const char*, int, const struct __turb1__GetDensityHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetDensityHessian * SOAP_FMAC4 soap_in___turb1__GetDensityHessian(struct soap*, const char*, struct __turb1__GetDensityHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetDensityHessian * SOAP_FMAC4 soap_new___turb1__GetDensityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensityHessian(struct soap*, const struct __turb1__GetDensityHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetDensityHessian
#define soap_write___turb1__GetDensityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensityHessian(soap, data), 0) || soap_put___turb1__GetDensityHessian(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensityHessian
#define soap_PUT___turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian(soap, data), 0) || soap_put___turb1__GetDensityHessian(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensityHessian
#define soap_PATCH___turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian(soap, data), 0) || soap_put___turb1__GetDensityHessian(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensityHessian
#define soap_POST_send___turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityHessian(soap, data), 0) || soap_put___turb1__GetDensityHessian(soap, data, "-turb1:GetDensityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensityHessian * SOAP_FMAC4 soap_get___turb1__GetDensityHessian(struct soap*, struct __turb1__GetDensityHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetDensityHessian
#define soap_read___turb1__GetDensityHessian(soap, data) ( ((data) ? (soap_default___turb1__GetDensityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensityHessian
#define soap_GET___turb1__GetDensityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensityHessian
#define soap_POST_recv___turb1__GetDensityHessian(soap, data) ( soap_read___turb1__GetDensityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressureHessian_DEFINED
#define SOAP_TYPE___turb1__GetPressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressureHessian(struct soap*, struct __turb1__GetPressureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressureHessian(struct soap*, const struct __turb1__GetPressureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressureHessian(struct soap*, const char*, int, const struct __turb1__GetPressureHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetPressureHessian * SOAP_FMAC4 soap_in___turb1__GetPressureHessian(struct soap*, const char*, struct __turb1__GetPressureHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetPressureHessian * SOAP_FMAC4 soap_new___turb1__GetPressureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressureHessian(struct soap*, const struct __turb1__GetPressureHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetPressureHessian
#define soap_write___turb1__GetPressureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressureHessian(soap, data), 0) || soap_put___turb1__GetPressureHessian(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressureHessian
#define soap_PUT___turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian(soap, data), 0) || soap_put___turb1__GetPressureHessian(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressureHessian
#define soap_PATCH___turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian(soap, data), 0) || soap_put___turb1__GetPressureHessian(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressureHessian
#define soap_POST_send___turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureHessian(soap, data), 0) || soap_put___turb1__GetPressureHessian(soap, data, "-turb1:GetPressureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressureHessian * SOAP_FMAC4 soap_get___turb1__GetPressureHessian(struct soap*, struct __turb1__GetPressureHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetPressureHessian
#define soap_read___turb1__GetPressureHessian(soap, data) ( ((data) ? (soap_default___turb1__GetPressureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressureHessian
#define soap_GET___turb1__GetPressureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressureHessian
#define soap_POST_recv___turb1__GetPressureHessian(soap, data) ( soap_read___turb1__GetPressureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialHessian_DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialHessian(struct soap*, struct __turb1__GetVectorPotentialHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialHessian(struct soap*, const struct __turb1__GetVectorPotentialHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialHessian(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialHessian(struct soap*, const char*, struct __turb1__GetVectorPotentialHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialHessian(struct soap*, const struct __turb1__GetVectorPotentialHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialHessian
#define soap_write___turb1__GetVectorPotentialHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialHessian
#define soap_PUT___turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialHessian
#define soap_PATCH___turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialHessian
#define soap_POST_send___turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put___turb1__GetVectorPotentialHessian(soap, data, "-turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialHessian(struct soap*, struct __turb1__GetVectorPotentialHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialHessian
#define soap_read___turb1__GetVectorPotentialHessian(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialHessian
#define soap_GET___turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialHessian
#define soap_POST_recv___turb1__GetVectorPotentialHessian(soap, data) ( soap_read___turb1__GetVectorPotentialHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticHessian_DEFINED
#define SOAP_TYPE___turb1__GetMagneticHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticHessian(struct soap*, struct __turb1__GetMagneticHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticHessian(struct soap*, const struct __turb1__GetMagneticHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticHessian(struct soap*, const char*, int, const struct __turb1__GetMagneticHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticHessian * SOAP_FMAC4 soap_in___turb1__GetMagneticHessian(struct soap*, const char*, struct __turb1__GetMagneticHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticHessian * SOAP_FMAC4 soap_new___turb1__GetMagneticHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticHessian(struct soap*, const struct __turb1__GetMagneticHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticHessian
#define soap_write___turb1__GetMagneticHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticHessian(soap, data), 0) || soap_put___turb1__GetMagneticHessian(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticHessian
#define soap_PUT___turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian(soap, data), 0) || soap_put___turb1__GetMagneticHessian(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticHessian
#define soap_PATCH___turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian(soap, data), 0) || soap_put___turb1__GetMagneticHessian(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticHessian
#define soap_POST_send___turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticHessian(soap, data), 0) || soap_put___turb1__GetMagneticHessian(soap, data, "-turb1:GetMagneticHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticHessian * SOAP_FMAC4 soap_get___turb1__GetMagneticHessian(struct soap*, struct __turb1__GetMagneticHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticHessian
#define soap_read___turb1__GetMagneticHessian(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticHessian
#define soap_GET___turb1__GetMagneticHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticHessian
#define soap_POST_recv___turb1__GetMagneticHessian(soap, data) ( soap_read___turb1__GetMagneticHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityHessian_DEFINED
#define SOAP_TYPE___turb1__GetVelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityHessian(struct soap*, struct __turb1__GetVelocityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityHessian(struct soap*, const struct __turb1__GetVelocityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityHessian(struct soap*, const char*, int, const struct __turb1__GetVelocityHessian *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityHessian * SOAP_FMAC4 soap_in___turb1__GetVelocityHessian(struct soap*, const char*, struct __turb1__GetVelocityHessian *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityHessian * SOAP_FMAC4 soap_new___turb1__GetVelocityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityHessian(struct soap*, const struct __turb1__GetVelocityHessian *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityHessian
#define soap_write___turb1__GetVelocityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityHessian(soap, data), 0) || soap_put___turb1__GetVelocityHessian(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityHessian
#define soap_PUT___turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian(soap, data), 0) || soap_put___turb1__GetVelocityHessian(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityHessian
#define soap_PATCH___turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian(soap, data), 0) || soap_put___turb1__GetVelocityHessian(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityHessian
#define soap_POST_send___turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityHessian(soap, data), 0) || soap_put___turb1__GetVelocityHessian(soap, data, "-turb1:GetVelocityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityHessian * SOAP_FMAC4 soap_get___turb1__GetVelocityHessian(struct soap*, struct __turb1__GetVelocityHessian *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityHessian
#define soap_read___turb1__GetVelocityHessian(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityHessian
#define soap_GET___turb1__GetVelocityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityHessian
#define soap_POST_recv___turb1__GetVelocityHessian(soap, data) ( soap_read___turb1__GetVelocityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperatureGradient_DEFINED
#define SOAP_TYPE___turb1__GetTemperatureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperatureGradient(struct soap*, struct __turb1__GetTemperatureGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperatureGradient(struct soap*, const struct __turb1__GetTemperatureGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperatureGradient(struct soap*, const char*, int, const struct __turb1__GetTemperatureGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperatureGradient * SOAP_FMAC4 soap_in___turb1__GetTemperatureGradient(struct soap*, const char*, struct __turb1__GetTemperatureGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperatureGradient * SOAP_FMAC4 soap_new___turb1__GetTemperatureGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperatureGradient(struct soap*, const struct __turb1__GetTemperatureGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperatureGradient
#define soap_write___turb1__GetTemperatureGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperatureGradient(soap, data), 0) || soap_put___turb1__GetTemperatureGradient(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperatureGradient
#define soap_PUT___turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient(soap, data), 0) || soap_put___turb1__GetTemperatureGradient(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperatureGradient
#define soap_PATCH___turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient(soap, data), 0) || soap_put___turb1__GetTemperatureGradient(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperatureGradient
#define soap_POST_send___turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperatureGradient(soap, data), 0) || soap_put___turb1__GetTemperatureGradient(soap, data, "-turb1:GetTemperatureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperatureGradient * SOAP_FMAC4 soap_get___turb1__GetTemperatureGradient(struct soap*, struct __turb1__GetTemperatureGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperatureGradient
#define soap_read___turb1__GetTemperatureGradient(soap, data) ( ((data) ? (soap_default___turb1__GetTemperatureGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperatureGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperatureGradient
#define soap_GET___turb1__GetTemperatureGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperatureGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperatureGradient
#define soap_POST_recv___turb1__GetTemperatureGradient(soap, data) ( soap_read___turb1__GetTemperatureGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensityGradient_DEFINED
#define SOAP_TYPE___turb1__GetDensityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensityGradient(struct soap*, struct __turb1__GetDensityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensityGradient(struct soap*, const struct __turb1__GetDensityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensityGradient(struct soap*, const char*, int, const struct __turb1__GetDensityGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetDensityGradient * SOAP_FMAC4 soap_in___turb1__GetDensityGradient(struct soap*, const char*, struct __turb1__GetDensityGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetDensityGradient * SOAP_FMAC4 soap_new___turb1__GetDensityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensityGradient(struct soap*, const struct __turb1__GetDensityGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetDensityGradient
#define soap_write___turb1__GetDensityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensityGradient(soap, data), 0) || soap_put___turb1__GetDensityGradient(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensityGradient
#define soap_PUT___turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient(soap, data), 0) || soap_put___turb1__GetDensityGradient(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensityGradient
#define soap_PATCH___turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient(soap, data), 0) || soap_put___turb1__GetDensityGradient(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensityGradient
#define soap_POST_send___turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensityGradient(soap, data), 0) || soap_put___turb1__GetDensityGradient(soap, data, "-turb1:GetDensityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensityGradient * SOAP_FMAC4 soap_get___turb1__GetDensityGradient(struct soap*, struct __turb1__GetDensityGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetDensityGradient
#define soap_read___turb1__GetDensityGradient(soap, data) ( ((data) ? (soap_default___turb1__GetDensityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensityGradient
#define soap_GET___turb1__GetDensityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensityGradient
#define soap_POST_recv___turb1__GetDensityGradient(soap, data) ( soap_read___turb1__GetDensityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressureGradient_DEFINED
#define SOAP_TYPE___turb1__GetPressureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressureGradient(struct soap*, struct __turb1__GetPressureGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressureGradient(struct soap*, const struct __turb1__GetPressureGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressureGradient(struct soap*, const char*, int, const struct __turb1__GetPressureGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetPressureGradient * SOAP_FMAC4 soap_in___turb1__GetPressureGradient(struct soap*, const char*, struct __turb1__GetPressureGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetPressureGradient * SOAP_FMAC4 soap_new___turb1__GetPressureGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressureGradient(struct soap*, const struct __turb1__GetPressureGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetPressureGradient
#define soap_write___turb1__GetPressureGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressureGradient(soap, data), 0) || soap_put___turb1__GetPressureGradient(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressureGradient
#define soap_PUT___turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient(soap, data), 0) || soap_put___turb1__GetPressureGradient(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressureGradient
#define soap_PATCH___turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient(soap, data), 0) || soap_put___turb1__GetPressureGradient(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressureGradient
#define soap_POST_send___turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressureGradient(soap, data), 0) || soap_put___turb1__GetPressureGradient(soap, data, "-turb1:GetPressureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressureGradient * SOAP_FMAC4 soap_get___turb1__GetPressureGradient(struct soap*, struct __turb1__GetPressureGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetPressureGradient
#define soap_read___turb1__GetPressureGradient(soap, data) ( ((data) ? (soap_default___turb1__GetPressureGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressureGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressureGradient
#define soap_GET___turb1__GetPressureGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressureGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressureGradient
#define soap_POST_recv___turb1__GetPressureGradient(soap, data) ( soap_read___turb1__GetPressureGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotentialGradient_DEFINED
#define SOAP_TYPE___turb1__GetVectorPotentialGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotentialGradient(struct soap*, struct __turb1__GetVectorPotentialGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotentialGradient(struct soap*, const struct __turb1__GetVectorPotentialGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotentialGradient(struct soap*, const char*, int, const struct __turb1__GetVectorPotentialGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_in___turb1__GetVectorPotentialGradient(struct soap*, const char*, struct __turb1__GetVectorPotentialGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_new___turb1__GetVectorPotentialGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotentialGradient(struct soap*, const struct __turb1__GetVectorPotentialGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotentialGradient
#define soap_write___turb1__GetVectorPotentialGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotentialGradient
#define soap_PUT___turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotentialGradient
#define soap_PATCH___turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotentialGradient
#define soap_POST_send___turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put___turb1__GetVectorPotentialGradient(soap, data, "-turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_get___turb1__GetVectorPotentialGradient(struct soap*, struct __turb1__GetVectorPotentialGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotentialGradient
#define soap_read___turb1__GetVectorPotentialGradient(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotentialGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotentialGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotentialGradient
#define soap_GET___turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotentialGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotentialGradient
#define soap_POST_recv___turb1__GetVectorPotentialGradient(soap, data) ( soap_read___turb1__GetVectorPotentialGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticFieldGradient_DEFINED
#define SOAP_TYPE___turb1__GetMagneticFieldGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticFieldGradient(struct soap*, struct __turb1__GetMagneticFieldGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticFieldGradient(struct soap*, const struct __turb1__GetMagneticFieldGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticFieldGradient(struct soap*, const char*, int, const struct __turb1__GetMagneticFieldGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_in___turb1__GetMagneticFieldGradient(struct soap*, const char*, struct __turb1__GetMagneticFieldGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_new___turb1__GetMagneticFieldGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticFieldGradient(struct soap*, const struct __turb1__GetMagneticFieldGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticFieldGradient
#define soap_write___turb1__GetMagneticFieldGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticFieldGradient
#define soap_PUT___turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticFieldGradient
#define soap_PATCH___turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticFieldGradient
#define soap_POST_send___turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put___turb1__GetMagneticFieldGradient(soap, data, "-turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_get___turb1__GetMagneticFieldGradient(struct soap*, struct __turb1__GetMagneticFieldGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticFieldGradient
#define soap_read___turb1__GetMagneticFieldGradient(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticFieldGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticFieldGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticFieldGradient
#define soap_GET___turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticFieldGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticFieldGradient
#define soap_POST_recv___turb1__GetMagneticFieldGradient(soap, data) ( soap_read___turb1__GetMagneticFieldGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityGradient_DEFINED
#define SOAP_TYPE___turb1__GetVelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityGradient(struct soap*, struct __turb1__GetVelocityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityGradient(struct soap*, const struct __turb1__GetVelocityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityGradient(struct soap*, const char*, int, const struct __turb1__GetVelocityGradient *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityGradient * SOAP_FMAC4 soap_in___turb1__GetVelocityGradient(struct soap*, const char*, struct __turb1__GetVelocityGradient *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityGradient * SOAP_FMAC4 soap_new___turb1__GetVelocityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityGradient(struct soap*, const struct __turb1__GetVelocityGradient *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityGradient
#define soap_write___turb1__GetVelocityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityGradient(soap, data), 0) || soap_put___turb1__GetVelocityGradient(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityGradient
#define soap_PUT___turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient(soap, data), 0) || soap_put___turb1__GetVelocityGradient(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityGradient
#define soap_PATCH___turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient(soap, data), 0) || soap_put___turb1__GetVelocityGradient(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityGradient
#define soap_POST_send___turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityGradient(soap, data), 0) || soap_put___turb1__GetVelocityGradient(soap, data, "-turb1:GetVelocityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityGradient * SOAP_FMAC4 soap_get___turb1__GetVelocityGradient(struct soap*, struct __turb1__GetVelocityGradient *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityGradient
#define soap_read___turb1__GetVelocityGradient(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityGradient
#define soap_GET___turb1__GetVelocityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityGradient
#define soap_POST_recv___turb1__GetVelocityGradient(soap, data) ( soap_read___turb1__GetVelocityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityAndTemperature_DEFINED
#define SOAP_TYPE___turb1__GetVelocityAndTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityAndTemperature(struct soap*, struct __turb1__GetVelocityAndTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityAndTemperature(struct soap*, const struct __turb1__GetVelocityAndTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityAndTemperature(struct soap*, const char*, int, const struct __turb1__GetVelocityAndTemperature *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_in___turb1__GetVelocityAndTemperature(struct soap*, const char*, struct __turb1__GetVelocityAndTemperature *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_new___turb1__GetVelocityAndTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityAndTemperature(struct soap*, const struct __turb1__GetVelocityAndTemperature *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityAndTemperature
#define soap_write___turb1__GetVelocityAndTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityAndTemperature
#define soap_PUT___turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityAndTemperature
#define soap_PATCH___turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityAndTemperature
#define soap_POST_send___turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put___turb1__GetVelocityAndTemperature(soap, data, "-turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_get___turb1__GetVelocityAndTemperature(struct soap*, struct __turb1__GetVelocityAndTemperature *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityAndTemperature
#define soap_read___turb1__GetVelocityAndTemperature(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityAndTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityAndTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityAndTemperature
#define soap_GET___turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityAndTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityAndTemperature
#define soap_POST_recv___turb1__GetVelocityAndTemperature(soap, data) ( soap_read___turb1__GetVelocityAndTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocityAndPressure_DEFINED
#define SOAP_TYPE___turb1__GetVelocityAndPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocityAndPressure(struct soap*, struct __turb1__GetVelocityAndPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocityAndPressure(struct soap*, const struct __turb1__GetVelocityAndPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocityAndPressure(struct soap*, const char*, int, const struct __turb1__GetVelocityAndPressure *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_in___turb1__GetVelocityAndPressure(struct soap*, const char*, struct __turb1__GetVelocityAndPressure *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_new___turb1__GetVelocityAndPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocityAndPressure(struct soap*, const struct __turb1__GetVelocityAndPressure *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocityAndPressure
#define soap_write___turb1__GetVelocityAndPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocityAndPressure(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocityAndPressure
#define soap_PUT___turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocityAndPressure
#define soap_PATCH___turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocityAndPressure
#define soap_POST_send___turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocityAndPressure(soap, data), 0) || soap_put___turb1__GetVelocityAndPressure(soap, data, "-turb1:GetVelocityAndPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_get___turb1__GetVelocityAndPressure(struct soap*, struct __turb1__GetVelocityAndPressure *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocityAndPressure
#define soap_read___turb1__GetVelocityAndPressure(soap, data) ( ((data) ? (soap_default___turb1__GetVelocityAndPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocityAndPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocityAndPressure
#define soap_GET___turb1__GetVelocityAndPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocityAndPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocityAndPressure
#define soap_POST_recv___turb1__GetVelocityAndPressure(soap, data) ( soap_read___turb1__GetVelocityAndPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetTemperature_DEFINED
#define SOAP_TYPE___turb1__GetTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetTemperature(struct soap*, struct __turb1__GetTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetTemperature(struct soap*, const struct __turb1__GetTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetTemperature(struct soap*, const char*, int, const struct __turb1__GetTemperature *, const char*);
SOAP_FMAC3 struct __turb1__GetTemperature * SOAP_FMAC4 soap_in___turb1__GetTemperature(struct soap*, const char*, struct __turb1__GetTemperature *, const char*);

SOAP_FMAC3 struct __turb1__GetTemperature * SOAP_FMAC4 soap_new___turb1__GetTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetTemperature(struct soap*, const struct __turb1__GetTemperature *, const char*, const char*);

#ifndef soap_write___turb1__GetTemperature
#define soap_write___turb1__GetTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetTemperature(soap, data), 0) || soap_put___turb1__GetTemperature(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetTemperature
#define soap_PUT___turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature(soap, data), 0) || soap_put___turb1__GetTemperature(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetTemperature
#define soap_PATCH___turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature(soap, data), 0) || soap_put___turb1__GetTemperature(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetTemperature
#define soap_POST_send___turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetTemperature(soap, data), 0) || soap_put___turb1__GetTemperature(soap, data, "-turb1:GetTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetTemperature * SOAP_FMAC4 soap_get___turb1__GetTemperature(struct soap*, struct __turb1__GetTemperature *, const char*, const char*);

#ifndef soap_read___turb1__GetTemperature
#define soap_read___turb1__GetTemperature(soap, data) ( ((data) ? (soap_default___turb1__GetTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetTemperature
#define soap_GET___turb1__GetTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetTemperature
#define soap_POST_recv___turb1__GetTemperature(soap, data) ( soap_read___turb1__GetTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetDensity_DEFINED
#define SOAP_TYPE___turb1__GetDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetDensity(struct soap*, struct __turb1__GetDensity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetDensity(struct soap*, const struct __turb1__GetDensity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetDensity(struct soap*, const char*, int, const struct __turb1__GetDensity *, const char*);
SOAP_FMAC3 struct __turb1__GetDensity * SOAP_FMAC4 soap_in___turb1__GetDensity(struct soap*, const char*, struct __turb1__GetDensity *, const char*);

SOAP_FMAC3 struct __turb1__GetDensity * SOAP_FMAC4 soap_new___turb1__GetDensity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetDensity(struct soap*, const struct __turb1__GetDensity *, const char*, const char*);

#ifndef soap_write___turb1__GetDensity
#define soap_write___turb1__GetDensity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetDensity(soap, data), 0) || soap_put___turb1__GetDensity(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetDensity
#define soap_PUT___turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity(soap, data), 0) || soap_put___turb1__GetDensity(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetDensity
#define soap_PATCH___turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity(soap, data), 0) || soap_put___turb1__GetDensity(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetDensity
#define soap_POST_send___turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetDensity(soap, data), 0) || soap_put___turb1__GetDensity(soap, data, "-turb1:GetDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetDensity * SOAP_FMAC4 soap_get___turb1__GetDensity(struct soap*, struct __turb1__GetDensity *, const char*, const char*);

#ifndef soap_read___turb1__GetDensity
#define soap_read___turb1__GetDensity(soap, data) ( ((data) ? (soap_default___turb1__GetDensity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetDensity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetDensity
#define soap_GET___turb1__GetDensity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetDensity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetDensity
#define soap_POST_recv___turb1__GetDensity(soap, data) ( soap_read___turb1__GetDensity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetPressure_DEFINED
#define SOAP_TYPE___turb1__GetPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetPressure(struct soap*, struct __turb1__GetPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetPressure(struct soap*, const struct __turb1__GetPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetPressure(struct soap*, const char*, int, const struct __turb1__GetPressure *, const char*);
SOAP_FMAC3 struct __turb1__GetPressure * SOAP_FMAC4 soap_in___turb1__GetPressure(struct soap*, const char*, struct __turb1__GetPressure *, const char*);

SOAP_FMAC3 struct __turb1__GetPressure * SOAP_FMAC4 soap_new___turb1__GetPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetPressure(struct soap*, const struct __turb1__GetPressure *, const char*, const char*);

#ifndef soap_write___turb1__GetPressure
#define soap_write___turb1__GetPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetPressure(soap, data), 0) || soap_put___turb1__GetPressure(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetPressure
#define soap_PUT___turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure(soap, data), 0) || soap_put___turb1__GetPressure(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetPressure
#define soap_PATCH___turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure(soap, data), 0) || soap_put___turb1__GetPressure(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetPressure
#define soap_POST_send___turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetPressure(soap, data), 0) || soap_put___turb1__GetPressure(soap, data, "-turb1:GetPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetPressure * SOAP_FMAC4 soap_get___turb1__GetPressure(struct soap*, struct __turb1__GetPressure *, const char*, const char*);

#ifndef soap_read___turb1__GetPressure
#define soap_read___turb1__GetPressure(soap, data) ( ((data) ? (soap_default___turb1__GetPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetPressure
#define soap_GET___turb1__GetPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetPressure
#define soap_POST_recv___turb1__GetPressure(soap, data) ( soap_read___turb1__GetPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVectorPotential_DEFINED
#define SOAP_TYPE___turb1__GetVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVectorPotential(struct soap*, struct __turb1__GetVectorPotential *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVectorPotential(struct soap*, const struct __turb1__GetVectorPotential *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVectorPotential(struct soap*, const char*, int, const struct __turb1__GetVectorPotential *, const char*);
SOAP_FMAC3 struct __turb1__GetVectorPotential * SOAP_FMAC4 soap_in___turb1__GetVectorPotential(struct soap*, const char*, struct __turb1__GetVectorPotential *, const char*);

SOAP_FMAC3 struct __turb1__GetVectorPotential * SOAP_FMAC4 soap_new___turb1__GetVectorPotential(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVectorPotential(struct soap*, const struct __turb1__GetVectorPotential *, const char*, const char*);

#ifndef soap_write___turb1__GetVectorPotential
#define soap_write___turb1__GetVectorPotential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVectorPotential(soap, data), 0) || soap_put___turb1__GetVectorPotential(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVectorPotential
#define soap_PUT___turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential(soap, data), 0) || soap_put___turb1__GetVectorPotential(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVectorPotential
#define soap_PATCH___turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential(soap, data), 0) || soap_put___turb1__GetVectorPotential(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVectorPotential
#define soap_POST_send___turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVectorPotential(soap, data), 0) || soap_put___turb1__GetVectorPotential(soap, data, "-turb1:GetVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVectorPotential * SOAP_FMAC4 soap_get___turb1__GetVectorPotential(struct soap*, struct __turb1__GetVectorPotential *, const char*, const char*);

#ifndef soap_read___turb1__GetVectorPotential
#define soap_read___turb1__GetVectorPotential(soap, data) ( ((data) ? (soap_default___turb1__GetVectorPotential(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVectorPotential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVectorPotential
#define soap_GET___turb1__GetVectorPotential(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVectorPotential(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVectorPotential
#define soap_POST_recv___turb1__GetVectorPotential(soap, data) ( soap_read___turb1__GetVectorPotential(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetMagneticField_DEFINED
#define SOAP_TYPE___turb1__GetMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetMagneticField(struct soap*, struct __turb1__GetMagneticField *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetMagneticField(struct soap*, const struct __turb1__GetMagneticField *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetMagneticField(struct soap*, const char*, int, const struct __turb1__GetMagneticField *, const char*);
SOAP_FMAC3 struct __turb1__GetMagneticField * SOAP_FMAC4 soap_in___turb1__GetMagneticField(struct soap*, const char*, struct __turb1__GetMagneticField *, const char*);

SOAP_FMAC3 struct __turb1__GetMagneticField * SOAP_FMAC4 soap_new___turb1__GetMagneticField(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetMagneticField(struct soap*, const struct __turb1__GetMagneticField *, const char*, const char*);

#ifndef soap_write___turb1__GetMagneticField
#define soap_write___turb1__GetMagneticField(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetMagneticField(soap, data), 0) || soap_put___turb1__GetMagneticField(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetMagneticField
#define soap_PUT___turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField(soap, data), 0) || soap_put___turb1__GetMagneticField(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetMagneticField
#define soap_PATCH___turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField(soap, data), 0) || soap_put___turb1__GetMagneticField(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetMagneticField
#define soap_POST_send___turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetMagneticField(soap, data), 0) || soap_put___turb1__GetMagneticField(soap, data, "-turb1:GetMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetMagneticField * SOAP_FMAC4 soap_get___turb1__GetMagneticField(struct soap*, struct __turb1__GetMagneticField *, const char*, const char*);

#ifndef soap_read___turb1__GetMagneticField
#define soap_read___turb1__GetMagneticField(soap, data) ( ((data) ? (soap_default___turb1__GetMagneticField(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetMagneticField(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetMagneticField
#define soap_GET___turb1__GetMagneticField(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetMagneticField(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetMagneticField
#define soap_POST_recv___turb1__GetMagneticField(soap, data) ( soap_read___turb1__GetMagneticField(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__GetVelocity_DEFINED
#define SOAP_TYPE___turb1__GetVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__GetVelocity(struct soap*, struct __turb1__GetVelocity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__GetVelocity(struct soap*, const struct __turb1__GetVelocity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__GetVelocity(struct soap*, const char*, int, const struct __turb1__GetVelocity *, const char*);
SOAP_FMAC3 struct __turb1__GetVelocity * SOAP_FMAC4 soap_in___turb1__GetVelocity(struct soap*, const char*, struct __turb1__GetVelocity *, const char*);

SOAP_FMAC3 struct __turb1__GetVelocity * SOAP_FMAC4 soap_new___turb1__GetVelocity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__GetVelocity(struct soap*, const struct __turb1__GetVelocity *, const char*, const char*);

#ifndef soap_write___turb1__GetVelocity
#define soap_write___turb1__GetVelocity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__GetVelocity(soap, data), 0) || soap_put___turb1__GetVelocity(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__GetVelocity
#define soap_PUT___turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity(soap, data), 0) || soap_put___turb1__GetVelocity(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__GetVelocity
#define soap_PATCH___turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity(soap, data), 0) || soap_put___turb1__GetVelocity(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__GetVelocity
#define soap_POST_send___turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__GetVelocity(soap, data), 0) || soap_put___turb1__GetVelocity(soap, data, "-turb1:GetVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__GetVelocity * SOAP_FMAC4 soap_get___turb1__GetVelocity(struct soap*, struct __turb1__GetVelocity *, const char*, const char*);

#ifndef soap_read___turb1__GetVelocity
#define soap_read___turb1__GetVelocity(soap, data) ( ((data) ? (soap_default___turb1__GetVelocity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__GetVelocity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__GetVelocity
#define soap_GET___turb1__GetVelocity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__GetVelocity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__GetVelocity
#define soap_POST_recv___turb1__GetVelocity(soap, data) ( soap_read___turb1__GetVelocity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___turb1__NullOp_DEFINED
#define SOAP_TYPE___turb1__NullOp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___turb1__NullOp(struct soap*, struct __turb1__NullOp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___turb1__NullOp(struct soap*, const struct __turb1__NullOp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___turb1__NullOp(struct soap*, const char*, int, const struct __turb1__NullOp *, const char*);
SOAP_FMAC3 struct __turb1__NullOp * SOAP_FMAC4 soap_in___turb1__NullOp(struct soap*, const char*, struct __turb1__NullOp *, const char*);

SOAP_FMAC3 struct __turb1__NullOp * SOAP_FMAC4 soap_new___turb1__NullOp(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___turb1__NullOp(struct soap*, const struct __turb1__NullOp *, const char*, const char*);

#ifndef soap_write___turb1__NullOp
#define soap_write___turb1__NullOp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___turb1__NullOp(soap, data), 0) || soap_put___turb1__NullOp(soap, data, "-turb1:NullOp", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___turb1__NullOp
#define soap_PUT___turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp(soap, data), 0) || soap_put___turb1__NullOp(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___turb1__NullOp
#define soap_PATCH___turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp(soap, data), 0) || soap_put___turb1__NullOp(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___turb1__NullOp
#define soap_POST_send___turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___turb1__NullOp(soap, data), 0) || soap_put___turb1__NullOp(soap, data, "-turb1:NullOp", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __turb1__NullOp * SOAP_FMAC4 soap_get___turb1__NullOp(struct soap*, struct __turb1__NullOp *, const char*, const char*);

#ifndef soap_read___turb1__NullOp
#define soap_read___turb1__NullOp(soap, data) ( ((data) ? (soap_default___turb1__NullOp(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___turb1__NullOp(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___turb1__NullOp
#define soap_GET___turb1__NullOp(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___turb1__NullOp(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___turb1__NullOp
#define soap_POST_recv___turb1__NullOp(soap, data) ( soap_read___turb1__NullOp(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetThreshold_USCOREPythonResponse_DEFINED
#define SOAP_TYPE__turb1__GetThreshold_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetThreshold_USCOREPythonResponse(struct soap*, struct _turb1__GetThreshold_USCOREPythonResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetThreshold_USCOREPythonResponse(struct soap*, const struct _turb1__GetThreshold_USCOREPythonResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetThreshold_USCOREPythonResponse(struct soap*, const char*, int, const struct _turb1__GetThreshold_USCOREPythonResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPythonResponse * SOAP_FMAC4 soap_in__turb1__GetThreshold_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetThreshold_USCOREPythonResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPythonResponse * SOAP_FMAC4 soap_new__turb1__GetThreshold_USCOREPythonResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetThreshold_USCOREPythonResponse(struct soap*, const struct _turb1__GetThreshold_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetThreshold_USCOREPythonResponse
#define soap_write__turb1__GetThreshold_USCOREPythonResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetThreshold_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPythonResponse(soap, data, "turb1:GetThreshold_PythonResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetThreshold_USCOREPythonResponse
#define soap_PUT__turb1__GetThreshold_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPythonResponse(soap, data, "turb1:GetThreshold_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetThreshold_USCOREPythonResponse
#define soap_PATCH__turb1__GetThreshold_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPythonResponse(soap, data, "turb1:GetThreshold_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetThreshold_USCOREPythonResponse
#define soap_POST_send__turb1__GetThreshold_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPythonResponse(soap, data, "turb1:GetThreshold_PythonResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPythonResponse * SOAP_FMAC4 soap_get__turb1__GetThreshold_USCOREPythonResponse(struct soap*, struct _turb1__GetThreshold_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetThreshold_USCOREPythonResponse
#define soap_read__turb1__GetThreshold_USCOREPythonResponse(soap, data) ( ((data) ? (soap_default__turb1__GetThreshold_USCOREPythonResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetThreshold_USCOREPythonResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetThreshold_USCOREPythonResponse
#define soap_GET__turb1__GetThreshold_USCOREPythonResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetThreshold_USCOREPythonResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetThreshold_USCOREPythonResponse
#define soap_POST_recv__turb1__GetThreshold_USCOREPythonResponse(soap, data) ( soap_read__turb1__GetThreshold_USCOREPythonResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetThreshold_USCOREPython_DEFINED
#define SOAP_TYPE__turb1__GetThreshold_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetThreshold_USCOREPython(struct soap*, struct _turb1__GetThreshold_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetThreshold_USCOREPython(struct soap*, const struct _turb1__GetThreshold_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetThreshold_USCOREPython(struct soap*, const char*, int, const struct _turb1__GetThreshold_USCOREPython *, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_in__turb1__GetThreshold_USCOREPython(struct soap*, const char*, struct _turb1__GetThreshold_USCOREPython *, const char*);

SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_new__turb1__GetThreshold_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetThreshold_USCOREPython(struct soap*, const struct _turb1__GetThreshold_USCOREPython *, const char*, const char*);

#ifndef soap_write__turb1__GetThreshold_USCOREPython
#define soap_write__turb1__GetThreshold_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPython(soap, data, "turb1:GetThreshold_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetThreshold_USCOREPython
#define soap_PUT__turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPython(soap, data, "turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetThreshold_USCOREPython
#define soap_PATCH__turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPython(soap, data, "turb1:GetThreshold_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetThreshold_USCOREPython
#define soap_POST_send__turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold_USCOREPython(soap, data), 0) || soap_put__turb1__GetThreshold_USCOREPython(soap, data, "turb1:GetThreshold_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPython * SOAP_FMAC4 soap_get__turb1__GetThreshold_USCOREPython(struct soap*, struct _turb1__GetThreshold_USCOREPython *, const char*, const char*);

#ifndef soap_read__turb1__GetThreshold_USCOREPython
#define soap_read__turb1__GetThreshold_USCOREPython(soap, data) ( ((data) ? (soap_default__turb1__GetThreshold_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetThreshold_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetThreshold_USCOREPython
#define soap_GET__turb1__GetThreshold_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetThreshold_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetThreshold_USCOREPython
#define soap_POST_recv__turb1__GetThreshold_USCOREPython(soap, data) ( soap_read__turb1__GetThreshold_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPosition_USCOREPythonResponse_DEFINED
#define SOAP_TYPE__turb1__GetPosition_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPosition_USCOREPythonResponse(struct soap*, struct _turb1__GetPosition_USCOREPythonResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPosition_USCOREPythonResponse(struct soap*, const struct _turb1__GetPosition_USCOREPythonResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPosition_USCOREPythonResponse(struct soap*, const char*, int, const struct _turb1__GetPosition_USCOREPythonResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPythonResponse * SOAP_FMAC4 soap_in__turb1__GetPosition_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetPosition_USCOREPythonResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetPosition_USCOREPythonResponse * SOAP_FMAC4 soap_new__turb1__GetPosition_USCOREPythonResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPosition_USCOREPythonResponse(struct soap*, const struct _turb1__GetPosition_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetPosition_USCOREPythonResponse
#define soap_write__turb1__GetPosition_USCOREPythonResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPosition_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPythonResponse(soap, data, "turb1:GetPosition_PythonResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPosition_USCOREPythonResponse
#define soap_PUT__turb1__GetPosition_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPythonResponse(soap, data, "turb1:GetPosition_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPosition_USCOREPythonResponse
#define soap_PATCH__turb1__GetPosition_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPythonResponse(soap, data, "turb1:GetPosition_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPosition_USCOREPythonResponse
#define soap_POST_send__turb1__GetPosition_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPythonResponse(soap, data, "turb1:GetPosition_PythonResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPosition_USCOREPythonResponse * SOAP_FMAC4 soap_get__turb1__GetPosition_USCOREPythonResponse(struct soap*, struct _turb1__GetPosition_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetPosition_USCOREPythonResponse
#define soap_read__turb1__GetPosition_USCOREPythonResponse(soap, data) ( ((data) ? (soap_default__turb1__GetPosition_USCOREPythonResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPosition_USCOREPythonResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPosition_USCOREPythonResponse
#define soap_GET__turb1__GetPosition_USCOREPythonResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPosition_USCOREPythonResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPosition_USCOREPythonResponse
#define soap_POST_recv__turb1__GetPosition_USCOREPythonResponse(soap, data) ( soap_read__turb1__GetPosition_USCOREPythonResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPosition_USCOREPython_DEFINED
#define SOAP_TYPE__turb1__GetPosition_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPosition_USCOREPython(struct soap*, struct _turb1__GetPosition_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPosition_USCOREPython(struct soap*, const struct _turb1__GetPosition_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPosition_USCOREPython(struct soap*, const char*, int, const struct _turb1__GetPosition_USCOREPython *, const char*);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_in__turb1__GetPosition_USCOREPython(struct soap*, const char*, struct _turb1__GetPosition_USCOREPython *, const char*);

SOAP_FMAC3 struct _turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_new__turb1__GetPosition_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPosition_USCOREPython(struct soap*, const struct _turb1__GetPosition_USCOREPython *, const char*, const char*);

#ifndef soap_write__turb1__GetPosition_USCOREPython
#define soap_write__turb1__GetPosition_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPython(soap, data, "turb1:GetPosition_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPosition_USCOREPython
#define soap_PUT__turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPython(soap, data, "turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPosition_USCOREPython
#define soap_PATCH__turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPython(soap, data, "turb1:GetPosition_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPosition_USCOREPython
#define soap_POST_send__turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition_USCOREPython(soap, data), 0) || soap_put__turb1__GetPosition_USCOREPython(soap, data, "turb1:GetPosition_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPosition_USCOREPython * SOAP_FMAC4 soap_get__turb1__GetPosition_USCOREPython(struct soap*, struct _turb1__GetPosition_USCOREPython *, const char*, const char*);

#ifndef soap_read__turb1__GetPosition_USCOREPython
#define soap_read__turb1__GetPosition_USCOREPython(soap, data) ( ((data) ? (soap_default__turb1__GetPosition_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPosition_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPosition_USCOREPython
#define soap_GET__turb1__GetPosition_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPosition_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPosition_USCOREPython
#define soap_POST_recv__turb1__GetPosition_USCOREPython(soap, data) ( soap_read__turb1__GetPosition_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetFilter_USCOREPythonResponse_DEFINED
#define SOAP_TYPE__turb1__GetFilter_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetFilter_USCOREPythonResponse(struct soap*, struct _turb1__GetFilter_USCOREPythonResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetFilter_USCOREPythonResponse(struct soap*, const struct _turb1__GetFilter_USCOREPythonResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetFilter_USCOREPythonResponse(struct soap*, const char*, int, const struct _turb1__GetFilter_USCOREPythonResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPythonResponse * SOAP_FMAC4 soap_in__turb1__GetFilter_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetFilter_USCOREPythonResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetFilter_USCOREPythonResponse * SOAP_FMAC4 soap_new__turb1__GetFilter_USCOREPythonResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetFilter_USCOREPythonResponse(struct soap*, const struct _turb1__GetFilter_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetFilter_USCOREPythonResponse
#define soap_write__turb1__GetFilter_USCOREPythonResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetFilter_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPythonResponse(soap, data, "turb1:GetFilter_PythonResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetFilter_USCOREPythonResponse
#define soap_PUT__turb1__GetFilter_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPythonResponse(soap, data, "turb1:GetFilter_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetFilter_USCOREPythonResponse
#define soap_PATCH__turb1__GetFilter_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPythonResponse(soap, data, "turb1:GetFilter_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetFilter_USCOREPythonResponse
#define soap_POST_send__turb1__GetFilter_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPythonResponse(soap, data, "turb1:GetFilter_PythonResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetFilter_USCOREPythonResponse * SOAP_FMAC4 soap_get__turb1__GetFilter_USCOREPythonResponse(struct soap*, struct _turb1__GetFilter_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetFilter_USCOREPythonResponse
#define soap_read__turb1__GetFilter_USCOREPythonResponse(soap, data) ( ((data) ? (soap_default__turb1__GetFilter_USCOREPythonResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetFilter_USCOREPythonResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetFilter_USCOREPythonResponse
#define soap_GET__turb1__GetFilter_USCOREPythonResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetFilter_USCOREPythonResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetFilter_USCOREPythonResponse
#define soap_POST_recv__turb1__GetFilter_USCOREPythonResponse(soap, data) ( soap_read__turb1__GetFilter_USCOREPythonResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetFilter_USCOREPython_DEFINED
#define SOAP_TYPE__turb1__GetFilter_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetFilter_USCOREPython(struct soap*, struct _turb1__GetFilter_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetFilter_USCOREPython(struct soap*, const struct _turb1__GetFilter_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetFilter_USCOREPython(struct soap*, const char*, int, const struct _turb1__GetFilter_USCOREPython *, const char*);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_in__turb1__GetFilter_USCOREPython(struct soap*, const char*, struct _turb1__GetFilter_USCOREPython *, const char*);

SOAP_FMAC3 struct _turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_new__turb1__GetFilter_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetFilter_USCOREPython(struct soap*, const struct _turb1__GetFilter_USCOREPython *, const char*, const char*);

#ifndef soap_write__turb1__GetFilter_USCOREPython
#define soap_write__turb1__GetFilter_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPython(soap, data, "turb1:GetFilter_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetFilter_USCOREPython
#define soap_PUT__turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPython(soap, data, "turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetFilter_USCOREPython
#define soap_PATCH__turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPython(soap, data, "turb1:GetFilter_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetFilter_USCOREPython
#define soap_POST_send__turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetFilter_USCOREPython(soap, data), 0) || soap_put__turb1__GetFilter_USCOREPython(soap, data, "turb1:GetFilter_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetFilter_USCOREPython * SOAP_FMAC4 soap_get__turb1__GetFilter_USCOREPython(struct soap*, struct _turb1__GetFilter_USCOREPython *, const char*, const char*);

#ifndef soap_read__turb1__GetFilter_USCOREPython
#define soap_read__turb1__GetFilter_USCOREPython(soap, data) ( ((data) ? (soap_default__turb1__GetFilter_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetFilter_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetFilter_USCOREPython
#define soap_GET__turb1__GetFilter_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetFilter_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetFilter_USCOREPython
#define soap_POST_recv__turb1__GetFilter_USCOREPython(soap, data) ( soap_read__turb1__GetFilter_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetData_USCOREPythonResponse_DEFINED
#define SOAP_TYPE__turb1__GetData_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetData_USCOREPythonResponse(struct soap*, struct _turb1__GetData_USCOREPythonResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetData_USCOREPythonResponse(struct soap*, const struct _turb1__GetData_USCOREPythonResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetData_USCOREPythonResponse(struct soap*, const char*, int, const struct _turb1__GetData_USCOREPythonResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetData_USCOREPythonResponse * SOAP_FMAC4 soap_in__turb1__GetData_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetData_USCOREPythonResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetData_USCOREPythonResponse * SOAP_FMAC4 soap_new__turb1__GetData_USCOREPythonResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetData_USCOREPythonResponse(struct soap*, const struct _turb1__GetData_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetData_USCOREPythonResponse
#define soap_write__turb1__GetData_USCOREPythonResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetData_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetData_USCOREPythonResponse(soap, data, "turb1:GetData_PythonResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetData_USCOREPythonResponse
#define soap_PUT__turb1__GetData_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetData_USCOREPythonResponse(soap, data, "turb1:GetData_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetData_USCOREPythonResponse
#define soap_PATCH__turb1__GetData_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetData_USCOREPythonResponse(soap, data, "turb1:GetData_PythonResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetData_USCOREPythonResponse
#define soap_POST_send__turb1__GetData_USCOREPythonResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPythonResponse(soap, data), 0) || soap_put__turb1__GetData_USCOREPythonResponse(soap, data, "turb1:GetData_PythonResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetData_USCOREPythonResponse * SOAP_FMAC4 soap_get__turb1__GetData_USCOREPythonResponse(struct soap*, struct _turb1__GetData_USCOREPythonResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetData_USCOREPythonResponse
#define soap_read__turb1__GetData_USCOREPythonResponse(soap, data) ( ((data) ? (soap_default__turb1__GetData_USCOREPythonResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetData_USCOREPythonResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetData_USCOREPythonResponse
#define soap_GET__turb1__GetData_USCOREPythonResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetData_USCOREPythonResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetData_USCOREPythonResponse
#define soap_POST_recv__turb1__GetData_USCOREPythonResponse(soap, data) ( soap_read__turb1__GetData_USCOREPythonResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetData_USCOREPython_DEFINED
#define SOAP_TYPE__turb1__GetData_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetData_USCOREPython(struct soap*, struct _turb1__GetData_USCOREPython *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetData_USCOREPython(struct soap*, const struct _turb1__GetData_USCOREPython *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetData_USCOREPython(struct soap*, const char*, int, const struct _turb1__GetData_USCOREPython *, const char*);
SOAP_FMAC3 struct _turb1__GetData_USCOREPython * SOAP_FMAC4 soap_in__turb1__GetData_USCOREPython(struct soap*, const char*, struct _turb1__GetData_USCOREPython *, const char*);

SOAP_FMAC3 struct _turb1__GetData_USCOREPython * SOAP_FMAC4 soap_new__turb1__GetData_USCOREPython(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetData_USCOREPython(struct soap*, const struct _turb1__GetData_USCOREPython *, const char*, const char*);

#ifndef soap_write__turb1__GetData_USCOREPython
#define soap_write__turb1__GetData_USCOREPython(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetData_USCOREPython(soap, data), 0) || soap_put__turb1__GetData_USCOREPython(soap, data, "turb1:GetData_Python", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetData_USCOREPython
#define soap_PUT__turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPython(soap, data), 0) || soap_put__turb1__GetData_USCOREPython(soap, data, "turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetData_USCOREPython
#define soap_PATCH__turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPython(soap, data), 0) || soap_put__turb1__GetData_USCOREPython(soap, data, "turb1:GetData_Python", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetData_USCOREPython
#define soap_POST_send__turb1__GetData_USCOREPython(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetData_USCOREPython(soap, data), 0) || soap_put__turb1__GetData_USCOREPython(soap, data, "turb1:GetData_Python", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetData_USCOREPython * SOAP_FMAC4 soap_get__turb1__GetData_USCOREPython(struct soap*, struct _turb1__GetData_USCOREPython *, const char*, const char*);

#ifndef soap_read__turb1__GetData_USCOREPython
#define soap_read__turb1__GetData_USCOREPython(soap, data) ( ((data) ? (soap_default__turb1__GetData_USCOREPython(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetData_USCOREPython(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetData_USCOREPython
#define soap_GET__turb1__GetData_USCOREPython(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetData_USCOREPython(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetData_USCOREPython
#define soap_POST_recv__turb1__GetData_USCOREPython(soap, data) ( soap_read__turb1__GetData_USCOREPython(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetAnyCutoutWebResponse_DEFINED
#define SOAP_TYPE__turb1__GetAnyCutoutWebResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetAnyCutoutWebResponse(struct soap*, const struct _turb1__GetAnyCutoutWebResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetAnyCutoutWebResponse(struct soap*, const char*, int, const struct _turb1__GetAnyCutoutWebResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWebResponse * SOAP_FMAC4 soap_in__turb1__GetAnyCutoutWebResponse(struct soap*, const char*, struct _turb1__GetAnyCutoutWebResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetAnyCutoutWebResponse * SOAP_FMAC4 soap_new__turb1__GetAnyCutoutWebResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetAnyCutoutWebResponse(struct soap*, const struct _turb1__GetAnyCutoutWebResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetAnyCutoutWebResponse
#define soap_write__turb1__GetAnyCutoutWebResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetAnyCutoutWebResponse(soap, data), 0) || soap_put__turb1__GetAnyCutoutWebResponse(soap, data, "turb1:GetAnyCutoutWebResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetAnyCutoutWebResponse
#define soap_PUT__turb1__GetAnyCutoutWebResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWebResponse(soap, data), 0) || soap_put__turb1__GetAnyCutoutWebResponse(soap, data, "turb1:GetAnyCutoutWebResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetAnyCutoutWebResponse
#define soap_PATCH__turb1__GetAnyCutoutWebResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWebResponse(soap, data), 0) || soap_put__turb1__GetAnyCutoutWebResponse(soap, data, "turb1:GetAnyCutoutWebResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetAnyCutoutWebResponse
#define soap_POST_send__turb1__GetAnyCutoutWebResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWebResponse(soap, data), 0) || soap_put__turb1__GetAnyCutoutWebResponse(soap, data, "turb1:GetAnyCutoutWebResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetAnyCutoutWebResponse * SOAP_FMAC4 soap_get__turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetAnyCutoutWebResponse
#define soap_read__turb1__GetAnyCutoutWebResponse(soap, data) ( ((data) ? (soap_default__turb1__GetAnyCutoutWebResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetAnyCutoutWebResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetAnyCutoutWebResponse
#define soap_GET__turb1__GetAnyCutoutWebResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetAnyCutoutWebResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetAnyCutoutWebResponse
#define soap_POST_recv__turb1__GetAnyCutoutWebResponse(soap, data) ( soap_read__turb1__GetAnyCutoutWebResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetAnyCutoutWeb_DEFINED
#define SOAP_TYPE__turb1__GetAnyCutoutWeb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetAnyCutoutWeb(struct soap*, const struct _turb1__GetAnyCutoutWeb *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetAnyCutoutWeb(struct soap*, const char*, int, const struct _turb1__GetAnyCutoutWeb *, const char*);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_in__turb1__GetAnyCutoutWeb(struct soap*, const char*, struct _turb1__GetAnyCutoutWeb *, const char*);

SOAP_FMAC3 struct _turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_new__turb1__GetAnyCutoutWeb(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetAnyCutoutWeb(struct soap*, const struct _turb1__GetAnyCutoutWeb *, const char*, const char*);

#ifndef soap_write__turb1__GetAnyCutoutWeb
#define soap_write__turb1__GetAnyCutoutWeb(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put__turb1__GetAnyCutoutWeb(soap, data, "turb1:GetAnyCutoutWeb", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetAnyCutoutWeb
#define soap_PUT__turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put__turb1__GetAnyCutoutWeb(soap, data, "turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetAnyCutoutWeb
#define soap_PATCH__turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put__turb1__GetAnyCutoutWeb(soap, data, "turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetAnyCutoutWeb
#define soap_POST_send__turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetAnyCutoutWeb(soap, data), 0) || soap_put__turb1__GetAnyCutoutWeb(soap, data, "turb1:GetAnyCutoutWeb", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetAnyCutoutWeb * SOAP_FMAC4 soap_get__turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb *, const char*, const char*);

#ifndef soap_read__turb1__GetAnyCutoutWeb
#define soap_read__turb1__GetAnyCutoutWeb(soap, data) ( ((data) ? (soap_default__turb1__GetAnyCutoutWeb(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetAnyCutoutWeb(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetAnyCutoutWeb
#define soap_GET__turb1__GetAnyCutoutWeb(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetAnyCutoutWeb(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetAnyCutoutWeb
#define soap_POST_recv__turb1__GetAnyCutoutWeb(soap, data) ( soap_read__turb1__GetAnyCutoutWeb(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawTemperatureResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawTemperatureResponse(struct soap*, const struct _turb1__GetRawTemperatureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawTemperatureResponse(struct soap*, const char*, int, const struct _turb1__GetRawTemperatureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawTemperatureResponse * SOAP_FMAC4 soap_in__turb1__GetRawTemperatureResponse(struct soap*, const char*, struct _turb1__GetRawTemperatureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawTemperatureResponse * SOAP_FMAC4 soap_new__turb1__GetRawTemperatureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawTemperatureResponse(struct soap*, const struct _turb1__GetRawTemperatureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawTemperatureResponse
#define soap_write__turb1__GetRawTemperatureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawTemperatureResponse(soap, data), 0) || soap_put__turb1__GetRawTemperatureResponse(soap, data, "turb1:GetRawTemperatureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawTemperatureResponse
#define soap_PUT__turb1__GetRawTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperatureResponse(soap, data), 0) || soap_put__turb1__GetRawTemperatureResponse(soap, data, "turb1:GetRawTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawTemperatureResponse
#define soap_PATCH__turb1__GetRawTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperatureResponse(soap, data), 0) || soap_put__turb1__GetRawTemperatureResponse(soap, data, "turb1:GetRawTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawTemperatureResponse
#define soap_POST_send__turb1__GetRawTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperatureResponse(soap, data), 0) || soap_put__turb1__GetRawTemperatureResponse(soap, data, "turb1:GetRawTemperatureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawTemperatureResponse * SOAP_FMAC4 soap_get__turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawTemperatureResponse
#define soap_read__turb1__GetRawTemperatureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawTemperatureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawTemperatureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawTemperatureResponse
#define soap_GET__turb1__GetRawTemperatureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawTemperatureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawTemperatureResponse
#define soap_POST_recv__turb1__GetRawTemperatureResponse(soap, data) ( soap_read__turb1__GetRawTemperatureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawTemperature_DEFINED
#define SOAP_TYPE__turb1__GetRawTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawTemperature(struct soap*, const struct _turb1__GetRawTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawTemperature(struct soap*, const char*, int, const struct _turb1__GetRawTemperature *, const char*);
SOAP_FMAC3 struct _turb1__GetRawTemperature * SOAP_FMAC4 soap_in__turb1__GetRawTemperature(struct soap*, const char*, struct _turb1__GetRawTemperature *, const char*);

SOAP_FMAC3 struct _turb1__GetRawTemperature * SOAP_FMAC4 soap_new__turb1__GetRawTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawTemperature(struct soap*, const struct _turb1__GetRawTemperature *, const char*, const char*);

#ifndef soap_write__turb1__GetRawTemperature
#define soap_write__turb1__GetRawTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawTemperature(soap, data), 0) || soap_put__turb1__GetRawTemperature(soap, data, "turb1:GetRawTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawTemperature
#define soap_PUT__turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperature(soap, data), 0) || soap_put__turb1__GetRawTemperature(soap, data, "turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawTemperature
#define soap_PATCH__turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperature(soap, data), 0) || soap_put__turb1__GetRawTemperature(soap, data, "turb1:GetRawTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawTemperature
#define soap_POST_send__turb1__GetRawTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawTemperature(soap, data), 0) || soap_put__turb1__GetRawTemperature(soap, data, "turb1:GetRawTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawTemperature * SOAP_FMAC4 soap_get__turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature *, const char*, const char*);

#ifndef soap_read__turb1__GetRawTemperature
#define soap_read__turb1__GetRawTemperature(soap, data) ( ((data) ? (soap_default__turb1__GetRawTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawTemperature
#define soap_GET__turb1__GetRawTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawTemperature
#define soap_POST_recv__turb1__GetRawTemperature(soap, data) ( soap_read__turb1__GetRawTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawDensityResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawDensityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawDensityResponse(struct soap*, const struct _turb1__GetRawDensityResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawDensityResponse(struct soap*, const char*, int, const struct _turb1__GetRawDensityResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawDensityResponse * SOAP_FMAC4 soap_in__turb1__GetRawDensityResponse(struct soap*, const char*, struct _turb1__GetRawDensityResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawDensityResponse * SOAP_FMAC4 soap_new__turb1__GetRawDensityResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawDensityResponse(struct soap*, const struct _turb1__GetRawDensityResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawDensityResponse
#define soap_write__turb1__GetRawDensityResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawDensityResponse(soap, data), 0) || soap_put__turb1__GetRawDensityResponse(soap, data, "turb1:GetRawDensityResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawDensityResponse
#define soap_PUT__turb1__GetRawDensityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensityResponse(soap, data), 0) || soap_put__turb1__GetRawDensityResponse(soap, data, "turb1:GetRawDensityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawDensityResponse
#define soap_PATCH__turb1__GetRawDensityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensityResponse(soap, data), 0) || soap_put__turb1__GetRawDensityResponse(soap, data, "turb1:GetRawDensityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawDensityResponse
#define soap_POST_send__turb1__GetRawDensityResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensityResponse(soap, data), 0) || soap_put__turb1__GetRawDensityResponse(soap, data, "turb1:GetRawDensityResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawDensityResponse * SOAP_FMAC4 soap_get__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawDensityResponse
#define soap_read__turb1__GetRawDensityResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawDensityResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawDensityResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawDensityResponse
#define soap_GET__turb1__GetRawDensityResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawDensityResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawDensityResponse
#define soap_POST_recv__turb1__GetRawDensityResponse(soap, data) ( soap_read__turb1__GetRawDensityResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawDensity_DEFINED
#define SOAP_TYPE__turb1__GetRawDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawDensity(struct soap*, const struct _turb1__GetRawDensity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawDensity(struct soap*, const char*, int, const struct _turb1__GetRawDensity *, const char*);
SOAP_FMAC3 struct _turb1__GetRawDensity * SOAP_FMAC4 soap_in__turb1__GetRawDensity(struct soap*, const char*, struct _turb1__GetRawDensity *, const char*);

SOAP_FMAC3 struct _turb1__GetRawDensity * SOAP_FMAC4 soap_new__turb1__GetRawDensity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawDensity(struct soap*, const struct _turb1__GetRawDensity *, const char*, const char*);

#ifndef soap_write__turb1__GetRawDensity
#define soap_write__turb1__GetRawDensity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawDensity(soap, data), 0) || soap_put__turb1__GetRawDensity(soap, data, "turb1:GetRawDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawDensity
#define soap_PUT__turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensity(soap, data), 0) || soap_put__turb1__GetRawDensity(soap, data, "turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawDensity
#define soap_PATCH__turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensity(soap, data), 0) || soap_put__turb1__GetRawDensity(soap, data, "turb1:GetRawDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawDensity
#define soap_POST_send__turb1__GetRawDensity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawDensity(soap, data), 0) || soap_put__turb1__GetRawDensity(soap, data, "turb1:GetRawDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawDensity * SOAP_FMAC4 soap_get__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity *, const char*, const char*);

#ifndef soap_read__turb1__GetRawDensity
#define soap_read__turb1__GetRawDensity(soap, data) ( ((data) ? (soap_default__turb1__GetRawDensity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawDensity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawDensity
#define soap_GET__turb1__GetRawDensity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawDensity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawDensity
#define soap_POST_recv__turb1__GetRawDensity(soap, data) ( soap_read__turb1__GetRawDensity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawPressureResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawPressureResponse(struct soap*, const struct _turb1__GetRawPressureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawPressureResponse(struct soap*, const char*, int, const struct _turb1__GetRawPressureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawPressureResponse * SOAP_FMAC4 soap_in__turb1__GetRawPressureResponse(struct soap*, const char*, struct _turb1__GetRawPressureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawPressureResponse * SOAP_FMAC4 soap_new__turb1__GetRawPressureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawPressureResponse(struct soap*, const struct _turb1__GetRawPressureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawPressureResponse
#define soap_write__turb1__GetRawPressureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawPressureResponse(soap, data), 0) || soap_put__turb1__GetRawPressureResponse(soap, data, "turb1:GetRawPressureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawPressureResponse
#define soap_PUT__turb1__GetRawPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressureResponse(soap, data), 0) || soap_put__turb1__GetRawPressureResponse(soap, data, "turb1:GetRawPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawPressureResponse
#define soap_PATCH__turb1__GetRawPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressureResponse(soap, data), 0) || soap_put__turb1__GetRawPressureResponse(soap, data, "turb1:GetRawPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawPressureResponse
#define soap_POST_send__turb1__GetRawPressureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressureResponse(soap, data), 0) || soap_put__turb1__GetRawPressureResponse(soap, data, "turb1:GetRawPressureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawPressureResponse * SOAP_FMAC4 soap_get__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawPressureResponse
#define soap_read__turb1__GetRawPressureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawPressureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawPressureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawPressureResponse
#define soap_GET__turb1__GetRawPressureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawPressureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawPressureResponse
#define soap_POST_recv__turb1__GetRawPressureResponse(soap, data) ( soap_read__turb1__GetRawPressureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawPressure_DEFINED
#define SOAP_TYPE__turb1__GetRawPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawPressure(struct soap*, const struct _turb1__GetRawPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawPressure(struct soap*, const char*, int, const struct _turb1__GetRawPressure *, const char*);
SOAP_FMAC3 struct _turb1__GetRawPressure * SOAP_FMAC4 soap_in__turb1__GetRawPressure(struct soap*, const char*, struct _turb1__GetRawPressure *, const char*);

SOAP_FMAC3 struct _turb1__GetRawPressure * SOAP_FMAC4 soap_new__turb1__GetRawPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawPressure(struct soap*, const struct _turb1__GetRawPressure *, const char*, const char*);

#ifndef soap_write__turb1__GetRawPressure
#define soap_write__turb1__GetRawPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawPressure(soap, data), 0) || soap_put__turb1__GetRawPressure(soap, data, "turb1:GetRawPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawPressure
#define soap_PUT__turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressure(soap, data), 0) || soap_put__turb1__GetRawPressure(soap, data, "turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawPressure
#define soap_PATCH__turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressure(soap, data), 0) || soap_put__turb1__GetRawPressure(soap, data, "turb1:GetRawPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawPressure
#define soap_POST_send__turb1__GetRawPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawPressure(soap, data), 0) || soap_put__turb1__GetRawPressure(soap, data, "turb1:GetRawPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawPressure * SOAP_FMAC4 soap_get__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure *, const char*, const char*);

#ifndef soap_read__turb1__GetRawPressure
#define soap_read__turb1__GetRawPressure(soap, data) ( ((data) ? (soap_default__turb1__GetRawPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawPressure
#define soap_GET__turb1__GetRawPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawPressure
#define soap_POST_recv__turb1__GetRawPressure(soap, data) ( soap_read__turb1__GetRawPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawVectorPotentialResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawVectorPotentialResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawVectorPotentialResponse(struct soap*, const struct _turb1__GetRawVectorPotentialResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawVectorPotentialResponse(struct soap*, const char*, int, const struct _turb1__GetRawVectorPotentialResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawVectorPotentialResponse * SOAP_FMAC4 soap_in__turb1__GetRawVectorPotentialResponse(struct soap*, const char*, struct _turb1__GetRawVectorPotentialResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawVectorPotentialResponse * SOAP_FMAC4 soap_new__turb1__GetRawVectorPotentialResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawVectorPotentialResponse(struct soap*, const struct _turb1__GetRawVectorPotentialResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawVectorPotentialResponse
#define soap_write__turb1__GetRawVectorPotentialResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetRawVectorPotentialResponse(soap, data, "turb1:GetRawVectorPotentialResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawVectorPotentialResponse
#define soap_PUT__turb1__GetRawVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetRawVectorPotentialResponse(soap, data, "turb1:GetRawVectorPotentialResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawVectorPotentialResponse
#define soap_PATCH__turb1__GetRawVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetRawVectorPotentialResponse(soap, data, "turb1:GetRawVectorPotentialResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawVectorPotentialResponse
#define soap_POST_send__turb1__GetRawVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetRawVectorPotentialResponse(soap, data, "turb1:GetRawVectorPotentialResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawVectorPotentialResponse * SOAP_FMAC4 soap_get__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawVectorPotentialResponse
#define soap_read__turb1__GetRawVectorPotentialResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawVectorPotentialResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawVectorPotentialResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawVectorPotentialResponse
#define soap_GET__turb1__GetRawVectorPotentialResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawVectorPotentialResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawVectorPotentialResponse
#define soap_POST_recv__turb1__GetRawVectorPotentialResponse(soap, data) ( soap_read__turb1__GetRawVectorPotentialResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawVectorPotential_DEFINED
#define SOAP_TYPE__turb1__GetRawVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawVectorPotential(struct soap*, const struct _turb1__GetRawVectorPotential *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawVectorPotential(struct soap*, const char*, int, const struct _turb1__GetRawVectorPotential *, const char*);
SOAP_FMAC3 struct _turb1__GetRawVectorPotential * SOAP_FMAC4 soap_in__turb1__GetRawVectorPotential(struct soap*, const char*, struct _turb1__GetRawVectorPotential *, const char*);

SOAP_FMAC3 struct _turb1__GetRawVectorPotential * SOAP_FMAC4 soap_new__turb1__GetRawVectorPotential(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawVectorPotential(struct soap*, const struct _turb1__GetRawVectorPotential *, const char*, const char*);

#ifndef soap_write__turb1__GetRawVectorPotential
#define soap_write__turb1__GetRawVectorPotential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawVectorPotential(soap, data), 0) || soap_put__turb1__GetRawVectorPotential(soap, data, "turb1:GetRawVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawVectorPotential
#define soap_PUT__turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotential(soap, data), 0) || soap_put__turb1__GetRawVectorPotential(soap, data, "turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawVectorPotential
#define soap_PATCH__turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotential(soap, data), 0) || soap_put__turb1__GetRawVectorPotential(soap, data, "turb1:GetRawVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawVectorPotential
#define soap_POST_send__turb1__GetRawVectorPotential(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVectorPotential(soap, data), 0) || soap_put__turb1__GetRawVectorPotential(soap, data, "turb1:GetRawVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawVectorPotential * SOAP_FMAC4 soap_get__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential *, const char*, const char*);

#ifndef soap_read__turb1__GetRawVectorPotential
#define soap_read__turb1__GetRawVectorPotential(soap, data) ( ((data) ? (soap_default__turb1__GetRawVectorPotential(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawVectorPotential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawVectorPotential
#define soap_GET__turb1__GetRawVectorPotential(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawVectorPotential(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawVectorPotential
#define soap_POST_recv__turb1__GetRawVectorPotential(soap, data) ( soap_read__turb1__GetRawVectorPotential(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawMagneticFieldResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawMagneticFieldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawMagneticFieldResponse(struct soap*, const struct _turb1__GetRawMagneticFieldResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawMagneticFieldResponse(struct soap*, const char*, int, const struct _turb1__GetRawMagneticFieldResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawMagneticFieldResponse * SOAP_FMAC4 soap_in__turb1__GetRawMagneticFieldResponse(struct soap*, const char*, struct _turb1__GetRawMagneticFieldResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawMagneticFieldResponse * SOAP_FMAC4 soap_new__turb1__GetRawMagneticFieldResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawMagneticFieldResponse(struct soap*, const struct _turb1__GetRawMagneticFieldResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawMagneticFieldResponse
#define soap_write__turb1__GetRawMagneticFieldResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetRawMagneticFieldResponse(soap, data, "turb1:GetRawMagneticFieldResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawMagneticFieldResponse
#define soap_PUT__turb1__GetRawMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetRawMagneticFieldResponse(soap, data, "turb1:GetRawMagneticFieldResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawMagneticFieldResponse
#define soap_PATCH__turb1__GetRawMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetRawMagneticFieldResponse(soap, data, "turb1:GetRawMagneticFieldResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawMagneticFieldResponse
#define soap_POST_send__turb1__GetRawMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetRawMagneticFieldResponse(soap, data, "turb1:GetRawMagneticFieldResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawMagneticFieldResponse * SOAP_FMAC4 soap_get__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawMagneticFieldResponse
#define soap_read__turb1__GetRawMagneticFieldResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawMagneticFieldResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawMagneticFieldResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawMagneticFieldResponse
#define soap_GET__turb1__GetRawMagneticFieldResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawMagneticFieldResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawMagneticFieldResponse
#define soap_POST_recv__turb1__GetRawMagneticFieldResponse(soap, data) ( soap_read__turb1__GetRawMagneticFieldResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawMagneticField_DEFINED
#define SOAP_TYPE__turb1__GetRawMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawMagneticField(struct soap*, const struct _turb1__GetRawMagneticField *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawMagneticField(struct soap*, const char*, int, const struct _turb1__GetRawMagneticField *, const char*);
SOAP_FMAC3 struct _turb1__GetRawMagneticField * SOAP_FMAC4 soap_in__turb1__GetRawMagneticField(struct soap*, const char*, struct _turb1__GetRawMagneticField *, const char*);

SOAP_FMAC3 struct _turb1__GetRawMagneticField * SOAP_FMAC4 soap_new__turb1__GetRawMagneticField(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawMagneticField(struct soap*, const struct _turb1__GetRawMagneticField *, const char*, const char*);

#ifndef soap_write__turb1__GetRawMagneticField
#define soap_write__turb1__GetRawMagneticField(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawMagneticField(soap, data), 0) || soap_put__turb1__GetRawMagneticField(soap, data, "turb1:GetRawMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawMagneticField
#define soap_PUT__turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticField(soap, data), 0) || soap_put__turb1__GetRawMagneticField(soap, data, "turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawMagneticField
#define soap_PATCH__turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticField(soap, data), 0) || soap_put__turb1__GetRawMagneticField(soap, data, "turb1:GetRawMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawMagneticField
#define soap_POST_send__turb1__GetRawMagneticField(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawMagneticField(soap, data), 0) || soap_put__turb1__GetRawMagneticField(soap, data, "turb1:GetRawMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawMagneticField * SOAP_FMAC4 soap_get__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField *, const char*, const char*);

#ifndef soap_read__turb1__GetRawMagneticField
#define soap_read__turb1__GetRawMagneticField(soap, data) ( ((data) ? (soap_default__turb1__GetRawMagneticField(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawMagneticField(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawMagneticField
#define soap_GET__turb1__GetRawMagneticField(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawMagneticField(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawMagneticField
#define soap_POST_recv__turb1__GetRawMagneticField(soap, data) ( soap_read__turb1__GetRawMagneticField(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawVelocityResponse_DEFINED
#define SOAP_TYPE__turb1__GetRawVelocityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawVelocityResponse(struct soap*, const struct _turb1__GetRawVelocityResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawVelocityResponse(struct soap*, const char*, int, const struct _turb1__GetRawVelocityResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetRawVelocityResponse * SOAP_FMAC4 soap_in__turb1__GetRawVelocityResponse(struct soap*, const char*, struct _turb1__GetRawVelocityResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetRawVelocityResponse * SOAP_FMAC4 soap_new__turb1__GetRawVelocityResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawVelocityResponse(struct soap*, const struct _turb1__GetRawVelocityResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetRawVelocityResponse
#define soap_write__turb1__GetRawVelocityResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawVelocityResponse(soap, data), 0) || soap_put__turb1__GetRawVelocityResponse(soap, data, "turb1:GetRawVelocityResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawVelocityResponse
#define soap_PUT__turb1__GetRawVelocityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocityResponse(soap, data), 0) || soap_put__turb1__GetRawVelocityResponse(soap, data, "turb1:GetRawVelocityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawVelocityResponse
#define soap_PATCH__turb1__GetRawVelocityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocityResponse(soap, data), 0) || soap_put__turb1__GetRawVelocityResponse(soap, data, "turb1:GetRawVelocityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawVelocityResponse
#define soap_POST_send__turb1__GetRawVelocityResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocityResponse(soap, data), 0) || soap_put__turb1__GetRawVelocityResponse(soap, data, "turb1:GetRawVelocityResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawVelocityResponse * SOAP_FMAC4 soap_get__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetRawVelocityResponse
#define soap_read__turb1__GetRawVelocityResponse(soap, data) ( ((data) ? (soap_default__turb1__GetRawVelocityResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawVelocityResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawVelocityResponse
#define soap_GET__turb1__GetRawVelocityResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawVelocityResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawVelocityResponse
#define soap_POST_recv__turb1__GetRawVelocityResponse(soap, data) ( soap_read__turb1__GetRawVelocityResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetRawVelocity_DEFINED
#define SOAP_TYPE__turb1__GetRawVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetRawVelocity(struct soap*, const struct _turb1__GetRawVelocity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetRawVelocity(struct soap*, const char*, int, const struct _turb1__GetRawVelocity *, const char*);
SOAP_FMAC3 struct _turb1__GetRawVelocity * SOAP_FMAC4 soap_in__turb1__GetRawVelocity(struct soap*, const char*, struct _turb1__GetRawVelocity *, const char*);

SOAP_FMAC3 struct _turb1__GetRawVelocity * SOAP_FMAC4 soap_new__turb1__GetRawVelocity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetRawVelocity(struct soap*, const struct _turb1__GetRawVelocity *, const char*, const char*);

#ifndef soap_write__turb1__GetRawVelocity
#define soap_write__turb1__GetRawVelocity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetRawVelocity(soap, data), 0) || soap_put__turb1__GetRawVelocity(soap, data, "turb1:GetRawVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetRawVelocity
#define soap_PUT__turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocity(soap, data), 0) || soap_put__turb1__GetRawVelocity(soap, data, "turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetRawVelocity
#define soap_PATCH__turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocity(soap, data), 0) || soap_put__turb1__GetRawVelocity(soap, data, "turb1:GetRawVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetRawVelocity
#define soap_POST_send__turb1__GetRawVelocity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetRawVelocity(soap, data), 0) || soap_put__turb1__GetRawVelocity(soap, data, "turb1:GetRawVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetRawVelocity * SOAP_FMAC4 soap_get__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity *, const char*, const char*);

#ifndef soap_read__turb1__GetRawVelocity
#define soap_read__turb1__GetRawVelocity(soap, data) ( ((data) ? (soap_default__turb1__GetRawVelocity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetRawVelocity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetRawVelocity
#define soap_GET__turb1__GetRawVelocity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetRawVelocity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetRawVelocity
#define soap_POST_recv__turb1__GetRawVelocity(soap, data) ( soap_read__turb1__GetRawVelocity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityBatchResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityBatchResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityBatchResponse(struct soap*, const struct _turb1__GetVelocityBatchResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityBatchResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityBatchResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityBatchResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityBatchResponse(struct soap*, const char*, struct _turb1__GetVelocityBatchResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityBatchResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityBatchResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityBatchResponse(struct soap*, const struct _turb1__GetVelocityBatchResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityBatchResponse
#define soap_write__turb1__GetVelocityBatchResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityBatchResponse(soap, data), 0) || soap_put__turb1__GetVelocityBatchResponse(soap, data, "turb1:GetVelocityBatchResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityBatchResponse
#define soap_PUT__turb1__GetVelocityBatchResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatchResponse(soap, data), 0) || soap_put__turb1__GetVelocityBatchResponse(soap, data, "turb1:GetVelocityBatchResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityBatchResponse
#define soap_PATCH__turb1__GetVelocityBatchResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatchResponse(soap, data), 0) || soap_put__turb1__GetVelocityBatchResponse(soap, data, "turb1:GetVelocityBatchResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityBatchResponse
#define soap_POST_send__turb1__GetVelocityBatchResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatchResponse(soap, data), 0) || soap_put__turb1__GetVelocityBatchResponse(soap, data, "turb1:GetVelocityBatchResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityBatchResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityBatchResponse
#define soap_read__turb1__GetVelocityBatchResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityBatchResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityBatchResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityBatchResponse
#define soap_GET__turb1__GetVelocityBatchResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityBatchResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityBatchResponse
#define soap_POST_recv__turb1__GetVelocityBatchResponse(soap, data) ( soap_read__turb1__GetVelocityBatchResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityBatch_DEFINED
#define SOAP_TYPE__turb1__GetVelocityBatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityBatch(struct soap*, const struct _turb1__GetVelocityBatch *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityBatch(struct soap*, const char*, int, const struct _turb1__GetVelocityBatch *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityBatch * SOAP_FMAC4 soap_in__turb1__GetVelocityBatch(struct soap*, const char*, struct _turb1__GetVelocityBatch *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityBatch * SOAP_FMAC4 soap_new__turb1__GetVelocityBatch(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityBatch(struct soap*, const struct _turb1__GetVelocityBatch *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityBatch
#define soap_write__turb1__GetVelocityBatch(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityBatch(soap, data), 0) || soap_put__turb1__GetVelocityBatch(soap, data, "turb1:GetVelocityBatch", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityBatch
#define soap_PUT__turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatch(soap, data), 0) || soap_put__turb1__GetVelocityBatch(soap, data, "turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityBatch
#define soap_PATCH__turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatch(soap, data), 0) || soap_put__turb1__GetVelocityBatch(soap, data, "turb1:GetVelocityBatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityBatch
#define soap_POST_send__turb1__GetVelocityBatch(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityBatch(soap, data), 0) || soap_put__turb1__GetVelocityBatch(soap, data, "turb1:GetVelocityBatch", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityBatch * SOAP_FMAC4 soap_get__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityBatch
#define soap_read__turb1__GetVelocityBatch(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityBatch(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityBatch(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityBatch
#define soap_GET__turb1__GetVelocityBatch(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityBatch(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityBatch
#define soap_POST_recv__turb1__GetVelocityBatch(soap, data) ( soap_read__turb1__GetVelocityBatch(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetLaplacianOfGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetLaplacianOfGradientResponse(struct soap*, const struct _turb1__GetLaplacianOfGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetLaplacianOfGradientResponse(struct soap*, const char*, int, const struct _turb1__GetLaplacianOfGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradientResponse * SOAP_FMAC4 soap_in__turb1__GetLaplacianOfGradientResponse(struct soap*, const char*, struct _turb1__GetLaplacianOfGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetLaplacianOfGradientResponse * SOAP_FMAC4 soap_new__turb1__GetLaplacianOfGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetLaplacianOfGradientResponse(struct soap*, const struct _turb1__GetLaplacianOfGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetLaplacianOfGradientResponse
#define soap_write__turb1__GetLaplacianOfGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetLaplacianOfGradientResponse(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradientResponse(soap, data, "turb1:GetLaplacianOfGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetLaplacianOfGradientResponse
#define soap_PUT__turb1__GetLaplacianOfGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradientResponse(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradientResponse(soap, data, "turb1:GetLaplacianOfGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetLaplacianOfGradientResponse
#define soap_PATCH__turb1__GetLaplacianOfGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradientResponse(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradientResponse(soap, data, "turb1:GetLaplacianOfGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetLaplacianOfGradientResponse
#define soap_POST_send__turb1__GetLaplacianOfGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradientResponse(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradientResponse(soap, data, "turb1:GetLaplacianOfGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetLaplacianOfGradientResponse * SOAP_FMAC4 soap_get__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetLaplacianOfGradientResponse
#define soap_read__turb1__GetLaplacianOfGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetLaplacianOfGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetLaplacianOfGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetLaplacianOfGradientResponse
#define soap_GET__turb1__GetLaplacianOfGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetLaplacianOfGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetLaplacianOfGradientResponse
#define soap_POST_recv__turb1__GetLaplacianOfGradientResponse(soap, data) ( soap_read__turb1__GetLaplacianOfGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradient_DEFINED
#define SOAP_TYPE__turb1__GetLaplacianOfGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetLaplacianOfGradient(struct soap*, const struct _turb1__GetLaplacianOfGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetLaplacianOfGradient(struct soap*, const char*, int, const struct _turb1__GetLaplacianOfGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_in__turb1__GetLaplacianOfGradient(struct soap*, const char*, struct _turb1__GetLaplacianOfGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_new__turb1__GetLaplacianOfGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetLaplacianOfGradient(struct soap*, const struct _turb1__GetLaplacianOfGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetLaplacianOfGradient
#define soap_write__turb1__GetLaplacianOfGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradient(soap, data, "turb1:GetLaplacianOfGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetLaplacianOfGradient
#define soap_PUT__turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradient(soap, data, "turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetLaplacianOfGradient
#define soap_PATCH__turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradient(soap, data, "turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetLaplacianOfGradient
#define soap_POST_send__turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetLaplacianOfGradient(soap, data), 0) || soap_put__turb1__GetLaplacianOfGradient(soap, data, "turb1:GetLaplacianOfGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetLaplacianOfGradient * SOAP_FMAC4 soap_get__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetLaplacianOfGradient
#define soap_read__turb1__GetLaplacianOfGradient(soap, data) ( ((data) ? (soap_default__turb1__GetLaplacianOfGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetLaplacianOfGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetLaplacianOfGradient
#define soap_GET__turb1__GetLaplacianOfGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetLaplacianOfGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetLaplacianOfGradient
#define soap_POST_recv__turb1__GetLaplacianOfGradient(soap, data) ( soap_read__turb1__GetLaplacianOfGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterGradientResponse(struct soap*, const struct _turb1__GetBoxFilterGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterGradientResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradientResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterGradientResponse(struct soap*, const char*, struct _turb1__GetBoxFilterGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterGradientResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterGradientResponse(struct soap*, const struct _turb1__GetBoxFilterGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterGradientResponse
#define soap_write__turb1__GetBoxFilterGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterGradientResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterGradientResponse(soap, data, "turb1:GetBoxFilterGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterGradientResponse
#define soap_PUT__turb1__GetBoxFilterGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradientResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterGradientResponse(soap, data, "turb1:GetBoxFilterGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterGradientResponse
#define soap_PATCH__turb1__GetBoxFilterGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradientResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterGradientResponse(soap, data, "turb1:GetBoxFilterGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterGradientResponse
#define soap_POST_send__turb1__GetBoxFilterGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradientResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterGradientResponse(soap, data, "turb1:GetBoxFilterGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterGradientResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterGradientResponse
#define soap_read__turb1__GetBoxFilterGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterGradientResponse
#define soap_GET__turb1__GetBoxFilterGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterGradientResponse
#define soap_POST_recv__turb1__GetBoxFilterGradientResponse(soap, data) ( soap_read__turb1__GetBoxFilterGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterGradient_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterGradient(struct soap*, const struct _turb1__GetBoxFilterGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterGradient(struct soap*, const char*, int, const struct _turb1__GetBoxFilterGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_in__turb1__GetBoxFilterGradient(struct soap*, const char*, struct _turb1__GetBoxFilterGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_new__turb1__GetBoxFilterGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterGradient(struct soap*, const struct _turb1__GetBoxFilterGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterGradient
#define soap_write__turb1__GetBoxFilterGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterGradient(soap, data), 0) || soap_put__turb1__GetBoxFilterGradient(soap, data, "turb1:GetBoxFilterGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterGradient
#define soap_PUT__turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradient(soap, data), 0) || soap_put__turb1__GetBoxFilterGradient(soap, data, "turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterGradient
#define soap_PATCH__turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradient(soap, data), 0) || soap_put__turb1__GetBoxFilterGradient(soap, data, "turb1:GetBoxFilterGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterGradient
#define soap_POST_send__turb1__GetBoxFilterGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterGradient(soap, data), 0) || soap_put__turb1__GetBoxFilterGradient(soap, data, "turb1:GetBoxFilterGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterGradient * SOAP_FMAC4 soap_get__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterGradient
#define soap_read__turb1__GetBoxFilterGradient(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterGradient
#define soap_GET__turb1__GetBoxFilterGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterGradient
#define soap_POST_recv__turb1__GetBoxFilterGradient(soap, data) ( soap_read__turb1__GetBoxFilterGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSscalarResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSscalarResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSscalarResponse(struct soap*, const struct _turb1__GetBoxFilterSGSscalarResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSscalarResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSscalarResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalarResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSscalarResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSscalarResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalarResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSscalarResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSscalarResponse(struct soap*, const struct _turb1__GetBoxFilterSGSscalarResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSscalarResponse
#define soap_write__turb1__GetBoxFilterSGSscalarResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSscalarResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalarResponse(soap, data, "turb1:GetBoxFilterSGSscalarResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSscalarResponse
#define soap_PUT__turb1__GetBoxFilterSGSscalarResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalarResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalarResponse(soap, data, "turb1:GetBoxFilterSGSscalarResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSscalarResponse
#define soap_PATCH__turb1__GetBoxFilterSGSscalarResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalarResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalarResponse(soap, data, "turb1:GetBoxFilterSGSscalarResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSscalarResponse
#define soap_POST_send__turb1__GetBoxFilterSGSscalarResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalarResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalarResponse(soap, data, "turb1:GetBoxFilterSGSscalarResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalarResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSscalarResponse
#define soap_read__turb1__GetBoxFilterSGSscalarResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSscalarResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSscalarResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSscalarResponse
#define soap_GET__turb1__GetBoxFilterSGSscalarResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSscalarResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSscalarResponse
#define soap_POST_recv__turb1__GetBoxFilterSGSscalarResponse(soap, data) ( soap_read__turb1__GetBoxFilterSGSscalarResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSscalar_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSscalar_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSscalar(struct soap*, const struct _turb1__GetBoxFilterSGSscalar *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSscalar(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSscalar *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSscalar(struct soap*, const char*, struct _turb1__GetBoxFilterSGSscalar *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSscalar(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSscalar(struct soap*, const struct _turb1__GetBoxFilterSGSscalar *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSscalar
#define soap_write__turb1__GetBoxFilterSGSscalar(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalar(soap, data, "turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSscalar
#define soap_PUT__turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalar(soap, data, "turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSscalar
#define soap_PATCH__turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalar(soap, data, "turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSscalar
#define soap_POST_send__turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSscalar(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSscalar(soap, data, "turb1:GetBoxFilterSGSscalar", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalar * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSscalar
#define soap_read__turb1__GetBoxFilterSGSscalar(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSscalar(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSscalar(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSscalar
#define soap_GET__turb1__GetBoxFilterSGSscalar(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSscalar(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSscalar
#define soap_POST_recv__turb1__GetBoxFilterSGSscalar(soap, data) ( soap_read__turb1__GetBoxFilterSGSscalar(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSvectorResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSvectorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSvectorResponse(struct soap*, const struct _turb1__GetBoxFilterSGSvectorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSvectorResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSvectorResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvectorResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSvectorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSvectorResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvectorResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSvectorResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSvectorResponse(struct soap*, const struct _turb1__GetBoxFilterSGSvectorResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSvectorResponse
#define soap_write__turb1__GetBoxFilterSGSvectorResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSvectorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvectorResponse(soap, data, "turb1:GetBoxFilterSGSvectorResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSvectorResponse
#define soap_PUT__turb1__GetBoxFilterSGSvectorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvectorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvectorResponse(soap, data, "turb1:GetBoxFilterSGSvectorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSvectorResponse
#define soap_PATCH__turb1__GetBoxFilterSGSvectorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvectorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvectorResponse(soap, data, "turb1:GetBoxFilterSGSvectorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSvectorResponse
#define soap_POST_send__turb1__GetBoxFilterSGSvectorResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvectorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvectorResponse(soap, data, "turb1:GetBoxFilterSGSvectorResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvectorResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSvectorResponse
#define soap_read__turb1__GetBoxFilterSGSvectorResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSvectorResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSvectorResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSvectorResponse
#define soap_GET__turb1__GetBoxFilterSGSvectorResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSvectorResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSvectorResponse
#define soap_POST_recv__turb1__GetBoxFilterSGSvectorResponse(soap, data) ( soap_read__turb1__GetBoxFilterSGSvectorResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSvector_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSvector_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSvector(struct soap*, const struct _turb1__GetBoxFilterSGSvector *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSvector(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSvector *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSvector(struct soap*, const char*, struct _turb1__GetBoxFilterSGSvector *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSvector(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSvector(struct soap*, const struct _turb1__GetBoxFilterSGSvector *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSvector
#define soap_write__turb1__GetBoxFilterSGSvector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvector(soap, data, "turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSvector
#define soap_PUT__turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvector(soap, data, "turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSvector
#define soap_PATCH__turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvector(soap, data, "turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSvector
#define soap_POST_send__turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSvector(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSvector(soap, data, "turb1:GetBoxFilterSGSvector", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvector * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSvector
#define soap_read__turb1__GetBoxFilterSGSvector(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSvector(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSvector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSvector
#define soap_GET__turb1__GetBoxFilterSGSvector(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSvector(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSvector
#define soap_POST_recv__turb1__GetBoxFilterSGSvector(soap, data) ( soap_read__turb1__GetBoxFilterSGSvector(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGStensorResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGStensorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGStensorResponse(struct soap*, const struct _turb1__GetBoxFilterSGStensorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGStensorResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGStensorResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensorResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGStensorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGStensorResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensorResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGStensorResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGStensorResponse(struct soap*, const struct _turb1__GetBoxFilterSGStensorResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGStensorResponse
#define soap_write__turb1__GetBoxFilterSGStensorResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGStensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensorResponse(soap, data, "turb1:GetBoxFilterSGStensorResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGStensorResponse
#define soap_PUT__turb1__GetBoxFilterSGStensorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensorResponse(soap, data, "turb1:GetBoxFilterSGStensorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGStensorResponse
#define soap_PATCH__turb1__GetBoxFilterSGStensorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensorResponse(soap, data, "turb1:GetBoxFilterSGStensorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGStensorResponse
#define soap_POST_send__turb1__GetBoxFilterSGStensorResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensorResponse(soap, data, "turb1:GetBoxFilterSGStensorResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensorResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGStensorResponse
#define soap_read__turb1__GetBoxFilterSGStensorResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGStensorResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGStensorResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGStensorResponse
#define soap_GET__turb1__GetBoxFilterSGStensorResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGStensorResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGStensorResponse
#define soap_POST_recv__turb1__GetBoxFilterSGStensorResponse(soap, data) ( soap_read__turb1__GetBoxFilterSGStensorResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGStensor_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGStensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGStensor(struct soap*, const struct _turb1__GetBoxFilterSGStensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGStensor(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGStensor *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGStensor(struct soap*, const char*, struct _turb1__GetBoxFilterSGStensor *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGStensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGStensor(struct soap*, const struct _turb1__GetBoxFilterSGStensor *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGStensor
#define soap_write__turb1__GetBoxFilterSGStensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensor(soap, data, "turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGStensor
#define soap_PUT__turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensor(soap, data, "turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGStensor
#define soap_PATCH__turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensor(soap, data, "turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGStensor
#define soap_POST_send__turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGStensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGStensor(soap, data, "turb1:GetBoxFilterSGStensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensor * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGStensor
#define soap_read__turb1__GetBoxFilterSGStensor(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGStensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGStensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGStensor
#define soap_GET__turb1__GetBoxFilterSGStensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGStensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGStensor
#define soap_POST_recv__turb1__GetBoxFilterSGStensor(soap, data) ( soap_read__turb1__GetBoxFilterSGStensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSsymtensorResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSsymtensorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const struct _turb1__GetBoxFilterSGSsymtensorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSsymtensorResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensorResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSsymtensorResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensorResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSsymtensorResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const struct _turb1__GetBoxFilterSGSsymtensorResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_write__turb1__GetBoxFilterSGSsymtensorResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSsymtensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensorResponse(soap, data, "turb1:GetBoxFilterSGSsymtensorResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_PUT__turb1__GetBoxFilterSGSsymtensorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensorResponse(soap, data, "turb1:GetBoxFilterSGSsymtensorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_PATCH__turb1__GetBoxFilterSGSsymtensorResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensorResponse(soap, data, "turb1:GetBoxFilterSGSsymtensorResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_POST_send__turb1__GetBoxFilterSGSsymtensorResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensorResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensorResponse(soap, data, "turb1:GetBoxFilterSGSsymtensorResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensorResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_read__turb1__GetBoxFilterSGSsymtensorResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSsymtensorResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSsymtensorResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_GET__turb1__GetBoxFilterSGSsymtensorResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSsymtensorResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSsymtensorResponse
#define soap_POST_recv__turb1__GetBoxFilterSGSsymtensorResponse(soap, data) ( soap_read__turb1__GetBoxFilterSGSsymtensorResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSsymtensor_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSsymtensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSsymtensor(struct soap*, const struct _turb1__GetBoxFilterSGSsymtensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSsymtensor(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSsymtensor *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSsymtensor(struct soap*, const char*, struct _turb1__GetBoxFilterSGSsymtensor *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSsymtensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSsymtensor(struct soap*, const struct _turb1__GetBoxFilterSGSsymtensor *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSsymtensor
#define soap_write__turb1__GetBoxFilterSGSsymtensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensor(soap, data, "turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSsymtensor
#define soap_PUT__turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensor(soap, data, "turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSsymtensor
#define soap_PATCH__turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensor(soap, data, "turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSsymtensor
#define soap_POST_send__turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSsymtensor(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSsymtensor(soap, data, "turb1:GetBoxFilterSGSsymtensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensor * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSsymtensor
#define soap_read__turb1__GetBoxFilterSGSsymtensor(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSsymtensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSsymtensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSsymtensor
#define soap_GET__turb1__GetBoxFilterSGSsymtensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSsymtensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSsymtensor
#define soap_POST_recv__turb1__GetBoxFilterSGSsymtensor(soap, data) ( soap_read__turb1__GetBoxFilterSGSsymtensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGSResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGSResponse(struct soap*, const struct _turb1__GetBoxFilterSGSResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGSResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGSResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGSResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGSResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGSResponse(struct soap*, const struct _turb1__GetBoxFilterSGSResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGSResponse
#define soap_write__turb1__GetBoxFilterSGSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGSResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSResponse(soap, data, "turb1:GetBoxFilterSGSResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGSResponse
#define soap_PUT__turb1__GetBoxFilterSGSResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSResponse(soap, data, "turb1:GetBoxFilterSGSResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGSResponse
#define soap_PATCH__turb1__GetBoxFilterSGSResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSResponse(soap, data, "turb1:GetBoxFilterSGSResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGSResponse
#define soap_POST_send__turb1__GetBoxFilterSGSResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGSResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterSGSResponse(soap, data, "turb1:GetBoxFilterSGSResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGSResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGSResponse
#define soap_read__turb1__GetBoxFilterSGSResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGSResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGSResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGSResponse
#define soap_GET__turb1__GetBoxFilterSGSResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGSResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGSResponse
#define soap_POST_recv__turb1__GetBoxFilterSGSResponse(soap, data) ( soap_read__turb1__GetBoxFilterSGSResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGS_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterSGS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterSGS(struct soap*, const struct _turb1__GetBoxFilterSGS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterSGS(struct soap*, const char*, int, const struct _turb1__GetBoxFilterSGS *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_in__turb1__GetBoxFilterSGS(struct soap*, const char*, struct _turb1__GetBoxFilterSGS *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_new__turb1__GetBoxFilterSGS(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterSGS(struct soap*, const struct _turb1__GetBoxFilterSGS *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterSGS
#define soap_write__turb1__GetBoxFilterSGS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterSGS(soap, data), 0) || soap_put__turb1__GetBoxFilterSGS(soap, data, "turb1:GetBoxFilterSGS", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterSGS
#define soap_PUT__turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGS(soap, data), 0) || soap_put__turb1__GetBoxFilterSGS(soap, data, "turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterSGS
#define soap_PATCH__turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGS(soap, data), 0) || soap_put__turb1__GetBoxFilterSGS(soap, data, "turb1:GetBoxFilterSGS", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterSGS
#define soap_POST_send__turb1__GetBoxFilterSGS(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterSGS(soap, data), 0) || soap_put__turb1__GetBoxFilterSGS(soap, data, "turb1:GetBoxFilterSGS", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterSGS * SOAP_FMAC4 soap_get__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterSGS
#define soap_read__turb1__GetBoxFilterSGS(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterSGS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterSGS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterSGS
#define soap_GET__turb1__GetBoxFilterSGS(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterSGS(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterSGS
#define soap_POST_recv__turb1__GetBoxFilterSGS(soap, data) ( soap_read__turb1__GetBoxFilterSGS(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterResponse_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilterResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilterResponse(struct soap*, const struct _turb1__GetBoxFilterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilterResponse(struct soap*, const char*, int, const struct _turb1__GetBoxFilterResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterResponse * SOAP_FMAC4 soap_in__turb1__GetBoxFilterResponse(struct soap*, const char*, struct _turb1__GetBoxFilterResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilterResponse * SOAP_FMAC4 soap_new__turb1__GetBoxFilterResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilterResponse(struct soap*, const struct _turb1__GetBoxFilterResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilterResponse
#define soap_write__turb1__GetBoxFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilterResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterResponse(soap, data, "turb1:GetBoxFilterResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilterResponse
#define soap_PUT__turb1__GetBoxFilterResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterResponse(soap, data, "turb1:GetBoxFilterResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilterResponse
#define soap_PATCH__turb1__GetBoxFilterResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterResponse(soap, data, "turb1:GetBoxFilterResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilterResponse
#define soap_POST_send__turb1__GetBoxFilterResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilterResponse(soap, data), 0) || soap_put__turb1__GetBoxFilterResponse(soap, data, "turb1:GetBoxFilterResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilterResponse * SOAP_FMAC4 soap_get__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilterResponse
#define soap_read__turb1__GetBoxFilterResponse(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilterResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilterResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilterResponse
#define soap_GET__turb1__GetBoxFilterResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilterResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilterResponse
#define soap_POST_recv__turb1__GetBoxFilterResponse(soap, data) ( soap_read__turb1__GetBoxFilterResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilter_DEFINED
#define SOAP_TYPE__turb1__GetBoxFilter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetBoxFilter(struct soap*, const struct _turb1__GetBoxFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetBoxFilter(struct soap*, const char*, int, const struct _turb1__GetBoxFilter *, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilter * SOAP_FMAC4 soap_in__turb1__GetBoxFilter(struct soap*, const char*, struct _turb1__GetBoxFilter *, const char*);

SOAP_FMAC3 struct _turb1__GetBoxFilter * SOAP_FMAC4 soap_new__turb1__GetBoxFilter(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetBoxFilter(struct soap*, const struct _turb1__GetBoxFilter *, const char*, const char*);

#ifndef soap_write__turb1__GetBoxFilter
#define soap_write__turb1__GetBoxFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetBoxFilter(soap, data), 0) || soap_put__turb1__GetBoxFilter(soap, data, "turb1:GetBoxFilter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetBoxFilter
#define soap_PUT__turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilter(soap, data), 0) || soap_put__turb1__GetBoxFilter(soap, data, "turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetBoxFilter
#define soap_PATCH__turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilter(soap, data), 0) || soap_put__turb1__GetBoxFilter(soap, data, "turb1:GetBoxFilter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetBoxFilter
#define soap_POST_send__turb1__GetBoxFilter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetBoxFilter(soap, data), 0) || soap_put__turb1__GetBoxFilter(soap, data, "turb1:GetBoxFilter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetBoxFilter * SOAP_FMAC4 soap_get__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter *, const char*, const char*);

#ifndef soap_read__turb1__GetBoxFilter
#define soap_read__turb1__GetBoxFilter(soap, data) ( ((data) ? (soap_default__turb1__GetBoxFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetBoxFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetBoxFilter
#define soap_GET__turb1__GetBoxFilter(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetBoxFilter(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetBoxFilter
#define soap_POST_recv__turb1__GetBoxFilter(soap, data) ( soap_read__turb1__GetBoxFilter(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetInvariantResponse_DEFINED
#define SOAP_TYPE__turb1__GetInvariantResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetInvariantResponse(struct soap*, const struct _turb1__GetInvariantResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetInvariantResponse(struct soap*, const char*, int, const struct _turb1__GetInvariantResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetInvariantResponse * SOAP_FMAC4 soap_in__turb1__GetInvariantResponse(struct soap*, const char*, struct _turb1__GetInvariantResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetInvariantResponse * SOAP_FMAC4 soap_new__turb1__GetInvariantResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetInvariantResponse(struct soap*, const struct _turb1__GetInvariantResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetInvariantResponse
#define soap_write__turb1__GetInvariantResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetInvariantResponse(soap, data), 0) || soap_put__turb1__GetInvariantResponse(soap, data, "turb1:GetInvariantResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetInvariantResponse
#define soap_PUT__turb1__GetInvariantResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariantResponse(soap, data), 0) || soap_put__turb1__GetInvariantResponse(soap, data, "turb1:GetInvariantResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetInvariantResponse
#define soap_PATCH__turb1__GetInvariantResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariantResponse(soap, data), 0) || soap_put__turb1__GetInvariantResponse(soap, data, "turb1:GetInvariantResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetInvariantResponse
#define soap_POST_send__turb1__GetInvariantResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariantResponse(soap, data), 0) || soap_put__turb1__GetInvariantResponse(soap, data, "turb1:GetInvariantResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetInvariantResponse * SOAP_FMAC4 soap_get__turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetInvariantResponse
#define soap_read__turb1__GetInvariantResponse(soap, data) ( ((data) ? (soap_default__turb1__GetInvariantResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetInvariantResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetInvariantResponse
#define soap_GET__turb1__GetInvariantResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetInvariantResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetInvariantResponse
#define soap_POST_recv__turb1__GetInvariantResponse(soap, data) ( soap_read__turb1__GetInvariantResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetInvariant_DEFINED
#define SOAP_TYPE__turb1__GetInvariant_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetInvariant(struct soap*, const struct _turb1__GetInvariant *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetInvariant(struct soap*, const char*, int, const struct _turb1__GetInvariant *, const char*);
SOAP_FMAC3 struct _turb1__GetInvariant * SOAP_FMAC4 soap_in__turb1__GetInvariant(struct soap*, const char*, struct _turb1__GetInvariant *, const char*);

SOAP_FMAC3 struct _turb1__GetInvariant * SOAP_FMAC4 soap_new__turb1__GetInvariant(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetInvariant(struct soap*, const struct _turb1__GetInvariant *, const char*, const char*);

#ifndef soap_write__turb1__GetInvariant
#define soap_write__turb1__GetInvariant(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetInvariant(soap, data), 0) || soap_put__turb1__GetInvariant(soap, data, "turb1:GetInvariant", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetInvariant
#define soap_PUT__turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariant(soap, data), 0) || soap_put__turb1__GetInvariant(soap, data, "turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetInvariant
#define soap_PATCH__turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariant(soap, data), 0) || soap_put__turb1__GetInvariant(soap, data, "turb1:GetInvariant", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetInvariant
#define soap_POST_send__turb1__GetInvariant(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetInvariant(soap, data), 0) || soap_put__turb1__GetInvariant(soap, data, "turb1:GetInvariant", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetInvariant * SOAP_FMAC4 soap_get__turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant *, const char*, const char*);

#ifndef soap_read__turb1__GetInvariant
#define soap_read__turb1__GetInvariant(soap, data) ( ((data) ? (soap_default__turb1__GetInvariant(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetInvariant(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetInvariant
#define soap_GET__turb1__GetInvariant(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetInvariant(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetInvariant
#define soap_POST_recv__turb1__GetInvariant(soap, data) ( soap_read__turb1__GetInvariant(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetForceResponse_DEFINED
#define SOAP_TYPE__turb1__GetForceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetForceResponse(struct soap*, const struct _turb1__GetForceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetForceResponse(struct soap*, const char*, int, const struct _turb1__GetForceResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetForceResponse * SOAP_FMAC4 soap_in__turb1__GetForceResponse(struct soap*, const char*, struct _turb1__GetForceResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetForceResponse * SOAP_FMAC4 soap_new__turb1__GetForceResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetForceResponse(struct soap*, const struct _turb1__GetForceResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetForceResponse
#define soap_write__turb1__GetForceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetForceResponse(soap, data), 0) || soap_put__turb1__GetForceResponse(soap, data, "turb1:GetForceResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetForceResponse
#define soap_PUT__turb1__GetForceResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForceResponse(soap, data), 0) || soap_put__turb1__GetForceResponse(soap, data, "turb1:GetForceResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetForceResponse
#define soap_PATCH__turb1__GetForceResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForceResponse(soap, data), 0) || soap_put__turb1__GetForceResponse(soap, data, "turb1:GetForceResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetForceResponse
#define soap_POST_send__turb1__GetForceResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForceResponse(soap, data), 0) || soap_put__turb1__GetForceResponse(soap, data, "turb1:GetForceResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetForceResponse * SOAP_FMAC4 soap_get__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetForceResponse
#define soap_read__turb1__GetForceResponse(soap, data) ( ((data) ? (soap_default__turb1__GetForceResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetForceResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetForceResponse
#define soap_GET__turb1__GetForceResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetForceResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetForceResponse
#define soap_POST_recv__turb1__GetForceResponse(soap, data) ( soap_read__turb1__GetForceResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetForce_DEFINED
#define SOAP_TYPE__turb1__GetForce_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetForce(struct soap*, struct _turb1__GetForce *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetForce(struct soap*, const struct _turb1__GetForce *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetForce(struct soap*, const char*, int, const struct _turb1__GetForce *, const char*);
SOAP_FMAC3 struct _turb1__GetForce * SOAP_FMAC4 soap_in__turb1__GetForce(struct soap*, const char*, struct _turb1__GetForce *, const char*);

SOAP_FMAC3 struct _turb1__GetForce * SOAP_FMAC4 soap_new__turb1__GetForce(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetForce(struct soap*, const struct _turb1__GetForce *, const char*, const char*);

#ifndef soap_write__turb1__GetForce
#define soap_write__turb1__GetForce(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetForce(soap, data), 0) || soap_put__turb1__GetForce(soap, data, "turb1:GetForce", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetForce
#define soap_PUT__turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForce(soap, data), 0) || soap_put__turb1__GetForce(soap, data, "turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetForce
#define soap_PATCH__turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForce(soap, data), 0) || soap_put__turb1__GetForce(soap, data, "turb1:GetForce", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetForce
#define soap_POST_send__turb1__GetForce(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetForce(soap, data), 0) || soap_put__turb1__GetForce(soap, data, "turb1:GetForce", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetForce * SOAP_FMAC4 soap_get__turb1__GetForce(struct soap*, struct _turb1__GetForce *, const char*, const char*);

#ifndef soap_read__turb1__GetForce
#define soap_read__turb1__GetForce(soap, data) ( ((data) ? (soap_default__turb1__GetForce(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetForce(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetForce
#define soap_GET__turb1__GetForce(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetForce(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetForce
#define soap_POST_recv__turb1__GetForce(soap, data) ( soap_read__turb1__GetForce(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetThresholdResponse_DEFINED
#define SOAP_TYPE__turb1__GetThresholdResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetThresholdResponse(struct soap*, const struct _turb1__GetThresholdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetThresholdResponse(struct soap*, const char*, int, const struct _turb1__GetThresholdResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetThresholdResponse * SOAP_FMAC4 soap_in__turb1__GetThresholdResponse(struct soap*, const char*, struct _turb1__GetThresholdResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetThresholdResponse * SOAP_FMAC4 soap_new__turb1__GetThresholdResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetThresholdResponse(struct soap*, const struct _turb1__GetThresholdResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetThresholdResponse
#define soap_write__turb1__GetThresholdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetThresholdResponse(soap, data), 0) || soap_put__turb1__GetThresholdResponse(soap, data, "turb1:GetThresholdResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetThresholdResponse
#define soap_PUT__turb1__GetThresholdResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThresholdResponse(soap, data), 0) || soap_put__turb1__GetThresholdResponse(soap, data, "turb1:GetThresholdResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetThresholdResponse
#define soap_PATCH__turb1__GetThresholdResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThresholdResponse(soap, data), 0) || soap_put__turb1__GetThresholdResponse(soap, data, "turb1:GetThresholdResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetThresholdResponse
#define soap_POST_send__turb1__GetThresholdResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThresholdResponse(soap, data), 0) || soap_put__turb1__GetThresholdResponse(soap, data, "turb1:GetThresholdResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetThresholdResponse * SOAP_FMAC4 soap_get__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetThresholdResponse
#define soap_read__turb1__GetThresholdResponse(soap, data) ( ((data) ? (soap_default__turb1__GetThresholdResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetThresholdResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetThresholdResponse
#define soap_GET__turb1__GetThresholdResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetThresholdResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetThresholdResponse
#define soap_POST_recv__turb1__GetThresholdResponse(soap, data) ( soap_read__turb1__GetThresholdResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetThreshold_DEFINED
#define SOAP_TYPE__turb1__GetThreshold_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetThreshold(struct soap*, const struct _turb1__GetThreshold *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetThreshold(struct soap*, const char*, int, const struct _turb1__GetThreshold *, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold * SOAP_FMAC4 soap_in__turb1__GetThreshold(struct soap*, const char*, struct _turb1__GetThreshold *, const char*);

SOAP_FMAC3 struct _turb1__GetThreshold * SOAP_FMAC4 soap_new__turb1__GetThreshold(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetThreshold(struct soap*, const struct _turb1__GetThreshold *, const char*, const char*);

#ifndef soap_write__turb1__GetThreshold
#define soap_write__turb1__GetThreshold(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetThreshold(soap, data), 0) || soap_put__turb1__GetThreshold(soap, data, "turb1:GetThreshold", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetThreshold
#define soap_PUT__turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold(soap, data), 0) || soap_put__turb1__GetThreshold(soap, data, "turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetThreshold
#define soap_PATCH__turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold(soap, data), 0) || soap_put__turb1__GetThreshold(soap, data, "turb1:GetThreshold", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetThreshold
#define soap_POST_send__turb1__GetThreshold(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetThreshold(soap, data), 0) || soap_put__turb1__GetThreshold(soap, data, "turb1:GetThreshold", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetThreshold * SOAP_FMAC4 soap_get__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold *, const char*, const char*);

#ifndef soap_read__turb1__GetThreshold
#define soap_read__turb1__GetThreshold(soap, data) ( ((data) ? (soap_default__turb1__GetThreshold(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetThreshold(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetThreshold
#define soap_GET__turb1__GetThreshold(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetThreshold(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetThreshold
#define soap_POST_recv__turb1__GetThreshold(soap, data) ( soap_read__turb1__GetThreshold(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPositionResponse_DEFINED
#define SOAP_TYPE__turb1__GetPositionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPositionResponse(struct soap*, const struct _turb1__GetPositionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPositionResponse(struct soap*, const char*, int, const struct _turb1__GetPositionResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetPositionResponse * SOAP_FMAC4 soap_in__turb1__GetPositionResponse(struct soap*, const char*, struct _turb1__GetPositionResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetPositionResponse * SOAP_FMAC4 soap_new__turb1__GetPositionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPositionResponse(struct soap*, const struct _turb1__GetPositionResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetPositionResponse
#define soap_write__turb1__GetPositionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPositionResponse(soap, data), 0) || soap_put__turb1__GetPositionResponse(soap, data, "turb1:GetPositionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPositionResponse
#define soap_PUT__turb1__GetPositionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPositionResponse(soap, data), 0) || soap_put__turb1__GetPositionResponse(soap, data, "turb1:GetPositionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPositionResponse
#define soap_PATCH__turb1__GetPositionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPositionResponse(soap, data), 0) || soap_put__turb1__GetPositionResponse(soap, data, "turb1:GetPositionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPositionResponse
#define soap_POST_send__turb1__GetPositionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPositionResponse(soap, data), 0) || soap_put__turb1__GetPositionResponse(soap, data, "turb1:GetPositionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPositionResponse * SOAP_FMAC4 soap_get__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetPositionResponse
#define soap_read__turb1__GetPositionResponse(soap, data) ( ((data) ? (soap_default__turb1__GetPositionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPositionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPositionResponse
#define soap_GET__turb1__GetPositionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPositionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPositionResponse
#define soap_POST_recv__turb1__GetPositionResponse(soap, data) ( soap_read__turb1__GetPositionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPosition_DEFINED
#define SOAP_TYPE__turb1__GetPosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPosition(struct soap*, struct _turb1__GetPosition *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPosition(struct soap*, const struct _turb1__GetPosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPosition(struct soap*, const char*, int, const struct _turb1__GetPosition *, const char*);
SOAP_FMAC3 struct _turb1__GetPosition * SOAP_FMAC4 soap_in__turb1__GetPosition(struct soap*, const char*, struct _turb1__GetPosition *, const char*);

SOAP_FMAC3 struct _turb1__GetPosition * SOAP_FMAC4 soap_new__turb1__GetPosition(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPosition(struct soap*, const struct _turb1__GetPosition *, const char*, const char*);

#ifndef soap_write__turb1__GetPosition
#define soap_write__turb1__GetPosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPosition(soap, data), 0) || soap_put__turb1__GetPosition(soap, data, "turb1:GetPosition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPosition
#define soap_PUT__turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition(soap, data), 0) || soap_put__turb1__GetPosition(soap, data, "turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPosition
#define soap_PATCH__turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition(soap, data), 0) || soap_put__turb1__GetPosition(soap, data, "turb1:GetPosition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPosition
#define soap_POST_send__turb1__GetPosition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPosition(soap, data), 0) || soap_put__turb1__GetPosition(soap, data, "turb1:GetPosition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPosition * SOAP_FMAC4 soap_get__turb1__GetPosition(struct soap*, struct _turb1__GetPosition *, const char*, const char*);

#ifndef soap_read__turb1__GetPosition
#define soap_read__turb1__GetPosition(soap, data) ( ((data) ? (soap_default__turb1__GetPosition(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPosition(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPosition
#define soap_GET__turb1__GetPosition(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPosition(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPosition
#define soap_POST_recv__turb1__GetPosition(soap, data) ( soap_read__turb1__GetPosition(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialLaplacianResponse(struct soap*, const struct _turb1__GetVectorPotentialLaplacianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialLaplacianResponse(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialLaplacianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacianResponse * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialLaplacianResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialLaplacianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacianResponse * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialLaplacianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialLaplacianResponse(struct soap*, const struct _turb1__GetVectorPotentialLaplacianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialLaplacianResponse
#define soap_write__turb1__GetVectorPotentialLaplacianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacianResponse(soap, data, "turb1:GetVectorPotentialLaplacianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialLaplacianResponse
#define soap_PUT__turb1__GetVectorPotentialLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacianResponse(soap, data, "turb1:GetVectorPotentialLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialLaplacianResponse
#define soap_PATCH__turb1__GetVectorPotentialLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacianResponse(soap, data, "turb1:GetVectorPotentialLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialLaplacianResponse
#define soap_POST_send__turb1__GetVectorPotentialLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacianResponse(soap, data, "turb1:GetVectorPotentialLaplacianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacianResponse * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialLaplacianResponse
#define soap_read__turb1__GetVectorPotentialLaplacianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialLaplacianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialLaplacianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialLaplacianResponse
#define soap_GET__turb1__GetVectorPotentialLaplacianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialLaplacianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialLaplacianResponse
#define soap_POST_recv__turb1__GetVectorPotentialLaplacianResponse(soap, data) ( soap_read__turb1__GetVectorPotentialLaplacianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacian_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialLaplacian(struct soap*, const struct _turb1__GetVectorPotentialLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialLaplacian(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialLaplacian *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialLaplacian(struct soap*, const char*, struct _turb1__GetVectorPotentialLaplacian *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialLaplacian(struct soap*, const struct _turb1__GetVectorPotentialLaplacian *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialLaplacian
#define soap_write__turb1__GetVectorPotentialLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacian(soap, data, "turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialLaplacian
#define soap_PUT__turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacian(soap, data, "turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialLaplacian
#define soap_PATCH__turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacian(soap, data, "turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialLaplacian
#define soap_POST_send__turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialLaplacian(soap, data), 0) || soap_put__turb1__GetVectorPotentialLaplacian(soap, data, "turb1:GetVectorPotentialLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacian * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialLaplacian
#define soap_read__turb1__GetVectorPotentialLaplacian(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialLaplacian
#define soap_GET__turb1__GetVectorPotentialLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialLaplacian
#define soap_POST_recv__turb1__GetVectorPotentialLaplacian(soap, data) ( soap_read__turb1__GetVectorPotentialLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse_DEFINED
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticFieldLaplacianResponse(struct soap*, const struct _turb1__GetMagneticFieldLaplacianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticFieldLaplacianResponse(struct soap*, const char*, int, const struct _turb1__GetMagneticFieldLaplacianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacianResponse * SOAP_FMAC4 soap_in__turb1__GetMagneticFieldLaplacianResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldLaplacianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacianResponse * SOAP_FMAC4 soap_new__turb1__GetMagneticFieldLaplacianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticFieldLaplacianResponse(struct soap*, const struct _turb1__GetMagneticFieldLaplacianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticFieldLaplacianResponse
#define soap_write__turb1__GetMagneticFieldLaplacianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticFieldLaplacianResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacianResponse(soap, data, "turb1:GetMagneticFieldLaplacianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticFieldLaplacianResponse
#define soap_PUT__turb1__GetMagneticFieldLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacianResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacianResponse(soap, data, "turb1:GetMagneticFieldLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticFieldLaplacianResponse
#define soap_PATCH__turb1__GetMagneticFieldLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacianResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacianResponse(soap, data, "turb1:GetMagneticFieldLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticFieldLaplacianResponse
#define soap_POST_send__turb1__GetMagneticFieldLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacianResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacianResponse(soap, data, "turb1:GetMagneticFieldLaplacianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacianResponse * SOAP_FMAC4 soap_get__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticFieldLaplacianResponse
#define soap_read__turb1__GetMagneticFieldLaplacianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticFieldLaplacianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticFieldLaplacianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticFieldLaplacianResponse
#define soap_GET__turb1__GetMagneticFieldLaplacianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticFieldLaplacianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticFieldLaplacianResponse
#define soap_POST_recv__turb1__GetMagneticFieldLaplacianResponse(soap, data) ( soap_read__turb1__GetMagneticFieldLaplacianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacian_DEFINED
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticFieldLaplacian(struct soap*, const struct _turb1__GetMagneticFieldLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticFieldLaplacian(struct soap*, const char*, int, const struct _turb1__GetMagneticFieldLaplacian *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_in__turb1__GetMagneticFieldLaplacian(struct soap*, const char*, struct _turb1__GetMagneticFieldLaplacian *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_new__turb1__GetMagneticFieldLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticFieldLaplacian(struct soap*, const struct _turb1__GetMagneticFieldLaplacian *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticFieldLaplacian
#define soap_write__turb1__GetMagneticFieldLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacian(soap, data, "turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticFieldLaplacian
#define soap_PUT__turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacian(soap, data, "turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticFieldLaplacian
#define soap_PATCH__turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacian(soap, data, "turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticFieldLaplacian
#define soap_POST_send__turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldLaplacian(soap, data), 0) || soap_put__turb1__GetMagneticFieldLaplacian(soap, data, "turb1:GetMagneticFieldLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacian * SOAP_FMAC4 soap_get__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticFieldLaplacian
#define soap_read__turb1__GetMagneticFieldLaplacian(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticFieldLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticFieldLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticFieldLaplacian
#define soap_GET__turb1__GetMagneticFieldLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticFieldLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticFieldLaplacian
#define soap_POST_recv__turb1__GetMagneticFieldLaplacian(soap, data) ( soap_read__turb1__GetMagneticFieldLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityLaplacianResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityLaplacianResponse(struct soap*, const struct _turb1__GetVelocityLaplacianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityLaplacianResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityLaplacianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacianResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityLaplacianResponse(struct soap*, const char*, struct _turb1__GetVelocityLaplacianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityLaplacianResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityLaplacianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityLaplacianResponse(struct soap*, const struct _turb1__GetVelocityLaplacianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityLaplacianResponse
#define soap_write__turb1__GetVelocityLaplacianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVelocityLaplacianResponse(soap, data, "turb1:GetVelocityLaplacianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityLaplacianResponse
#define soap_PUT__turb1__GetVelocityLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVelocityLaplacianResponse(soap, data, "turb1:GetVelocityLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityLaplacianResponse
#define soap_PATCH__turb1__GetVelocityLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVelocityLaplacianResponse(soap, data, "turb1:GetVelocityLaplacianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityLaplacianResponse
#define soap_POST_send__turb1__GetVelocityLaplacianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacianResponse(soap, data), 0) || soap_put__turb1__GetVelocityLaplacianResponse(soap, data, "turb1:GetVelocityLaplacianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityLaplacianResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityLaplacianResponse
#define soap_read__turb1__GetVelocityLaplacianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityLaplacianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityLaplacianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityLaplacianResponse
#define soap_GET__turb1__GetVelocityLaplacianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityLaplacianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityLaplacianResponse
#define soap_POST_recv__turb1__GetVelocityLaplacianResponse(soap, data) ( soap_read__turb1__GetVelocityLaplacianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityLaplacian_DEFINED
#define SOAP_TYPE__turb1__GetVelocityLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityLaplacian(struct soap*, const struct _turb1__GetVelocityLaplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityLaplacian(struct soap*, const char*, int, const struct _turb1__GetVelocityLaplacian *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_in__turb1__GetVelocityLaplacian(struct soap*, const char*, struct _turb1__GetVelocityLaplacian *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_new__turb1__GetVelocityLaplacian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityLaplacian(struct soap*, const struct _turb1__GetVelocityLaplacian *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityLaplacian
#define soap_write__turb1__GetVelocityLaplacian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityLaplacian(soap, data), 0) || soap_put__turb1__GetVelocityLaplacian(soap, data, "turb1:GetVelocityLaplacian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityLaplacian
#define soap_PUT__turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacian(soap, data), 0) || soap_put__turb1__GetVelocityLaplacian(soap, data, "turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityLaplacian
#define soap_PATCH__turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacian(soap, data), 0) || soap_put__turb1__GetVelocityLaplacian(soap, data, "turb1:GetVelocityLaplacian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityLaplacian
#define soap_POST_send__turb1__GetVelocityLaplacian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityLaplacian(soap, data), 0) || soap_put__turb1__GetVelocityLaplacian(soap, data, "turb1:GetVelocityLaplacian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityLaplacian * SOAP_FMAC4 soap_get__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityLaplacian
#define soap_read__turb1__GetVelocityLaplacian(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityLaplacian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityLaplacian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityLaplacian
#define soap_GET__turb1__GetVelocityLaplacian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityLaplacian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityLaplacian
#define soap_POST_recv__turb1__GetVelocityLaplacian(soap, data) ( soap_read__turb1__GetVelocityLaplacian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperatureHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetTemperatureHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperatureHessianResponse(struct soap*, const struct _turb1__GetTemperatureHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperatureHessianResponse(struct soap*, const char*, int, const struct _turb1__GetTemperatureHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureHessianResponse * SOAP_FMAC4 soap_in__turb1__GetTemperatureHessianResponse(struct soap*, const char*, struct _turb1__GetTemperatureHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperatureHessianResponse * SOAP_FMAC4 soap_new__turb1__GetTemperatureHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperatureHessianResponse(struct soap*, const struct _turb1__GetTemperatureHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperatureHessianResponse
#define soap_write__turb1__GetTemperatureHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperatureHessianResponse(soap, data), 0) || soap_put__turb1__GetTemperatureHessianResponse(soap, data, "turb1:GetTemperatureHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperatureHessianResponse
#define soap_PUT__turb1__GetTemperatureHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessianResponse(soap, data), 0) || soap_put__turb1__GetTemperatureHessianResponse(soap, data, "turb1:GetTemperatureHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperatureHessianResponse
#define soap_PATCH__turb1__GetTemperatureHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessianResponse(soap, data), 0) || soap_put__turb1__GetTemperatureHessianResponse(soap, data, "turb1:GetTemperatureHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperatureHessianResponse
#define soap_POST_send__turb1__GetTemperatureHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessianResponse(soap, data), 0) || soap_put__turb1__GetTemperatureHessianResponse(soap, data, "turb1:GetTemperatureHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperatureHessianResponse * SOAP_FMAC4 soap_get__turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperatureHessianResponse
#define soap_read__turb1__GetTemperatureHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetTemperatureHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperatureHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperatureHessianResponse
#define soap_GET__turb1__GetTemperatureHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperatureHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperatureHessianResponse
#define soap_POST_recv__turb1__GetTemperatureHessianResponse(soap, data) ( soap_read__turb1__GetTemperatureHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperatureHessian_DEFINED
#define SOAP_TYPE__turb1__GetTemperatureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperatureHessian(struct soap*, const struct _turb1__GetTemperatureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperatureHessian(struct soap*, const char*, int, const struct _turb1__GetTemperatureHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureHessian * SOAP_FMAC4 soap_in__turb1__GetTemperatureHessian(struct soap*, const char*, struct _turb1__GetTemperatureHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperatureHessian * SOAP_FMAC4 soap_new__turb1__GetTemperatureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperatureHessian(struct soap*, const struct _turb1__GetTemperatureHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperatureHessian
#define soap_write__turb1__GetTemperatureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperatureHessian(soap, data), 0) || soap_put__turb1__GetTemperatureHessian(soap, data, "turb1:GetTemperatureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperatureHessian
#define soap_PUT__turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessian(soap, data), 0) || soap_put__turb1__GetTemperatureHessian(soap, data, "turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperatureHessian
#define soap_PATCH__turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessian(soap, data), 0) || soap_put__turb1__GetTemperatureHessian(soap, data, "turb1:GetTemperatureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperatureHessian
#define soap_POST_send__turb1__GetTemperatureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureHessian(soap, data), 0) || soap_put__turb1__GetTemperatureHessian(soap, data, "turb1:GetTemperatureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperatureHessian * SOAP_FMAC4 soap_get__turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperatureHessian
#define soap_read__turb1__GetTemperatureHessian(soap, data) ( ((data) ? (soap_default__turb1__GetTemperatureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperatureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperatureHessian
#define soap_GET__turb1__GetTemperatureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperatureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperatureHessian
#define soap_POST_recv__turb1__GetTemperatureHessian(soap, data) ( soap_read__turb1__GetTemperatureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensityHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetDensityHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensityHessianResponse(struct soap*, const struct _turb1__GetDensityHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensityHessianResponse(struct soap*, const char*, int, const struct _turb1__GetDensityHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetDensityHessianResponse * SOAP_FMAC4 soap_in__turb1__GetDensityHessianResponse(struct soap*, const char*, struct _turb1__GetDensityHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetDensityHessianResponse * SOAP_FMAC4 soap_new__turb1__GetDensityHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensityHessianResponse(struct soap*, const struct _turb1__GetDensityHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetDensityHessianResponse
#define soap_write__turb1__GetDensityHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensityHessianResponse(soap, data), 0) || soap_put__turb1__GetDensityHessianResponse(soap, data, "turb1:GetDensityHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensityHessianResponse
#define soap_PUT__turb1__GetDensityHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessianResponse(soap, data), 0) || soap_put__turb1__GetDensityHessianResponse(soap, data, "turb1:GetDensityHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensityHessianResponse
#define soap_PATCH__turb1__GetDensityHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessianResponse(soap, data), 0) || soap_put__turb1__GetDensityHessianResponse(soap, data, "turb1:GetDensityHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensityHessianResponse
#define soap_POST_send__turb1__GetDensityHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessianResponse(soap, data), 0) || soap_put__turb1__GetDensityHessianResponse(soap, data, "turb1:GetDensityHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensityHessianResponse * SOAP_FMAC4 soap_get__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetDensityHessianResponse
#define soap_read__turb1__GetDensityHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetDensityHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensityHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensityHessianResponse
#define soap_GET__turb1__GetDensityHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensityHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensityHessianResponse
#define soap_POST_recv__turb1__GetDensityHessianResponse(soap, data) ( soap_read__turb1__GetDensityHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensityHessian_DEFINED
#define SOAP_TYPE__turb1__GetDensityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensityHessian(struct soap*, const struct _turb1__GetDensityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensityHessian(struct soap*, const char*, int, const struct _turb1__GetDensityHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetDensityHessian * SOAP_FMAC4 soap_in__turb1__GetDensityHessian(struct soap*, const char*, struct _turb1__GetDensityHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetDensityHessian * SOAP_FMAC4 soap_new__turb1__GetDensityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensityHessian(struct soap*, const struct _turb1__GetDensityHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetDensityHessian
#define soap_write__turb1__GetDensityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensityHessian(soap, data), 0) || soap_put__turb1__GetDensityHessian(soap, data, "turb1:GetDensityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensityHessian
#define soap_PUT__turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessian(soap, data), 0) || soap_put__turb1__GetDensityHessian(soap, data, "turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensityHessian
#define soap_PATCH__turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessian(soap, data), 0) || soap_put__turb1__GetDensityHessian(soap, data, "turb1:GetDensityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensityHessian
#define soap_POST_send__turb1__GetDensityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityHessian(soap, data), 0) || soap_put__turb1__GetDensityHessian(soap, data, "turb1:GetDensityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensityHessian * SOAP_FMAC4 soap_get__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetDensityHessian
#define soap_read__turb1__GetDensityHessian(soap, data) ( ((data) ? (soap_default__turb1__GetDensityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensityHessian
#define soap_GET__turb1__GetDensityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensityHessian
#define soap_POST_recv__turb1__GetDensityHessian(soap, data) ( soap_read__turb1__GetDensityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressureHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetPressureHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressureHessianResponse(struct soap*, const struct _turb1__GetPressureHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressureHessianResponse(struct soap*, const char*, int, const struct _turb1__GetPressureHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetPressureHessianResponse * SOAP_FMAC4 soap_in__turb1__GetPressureHessianResponse(struct soap*, const char*, struct _turb1__GetPressureHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetPressureHessianResponse * SOAP_FMAC4 soap_new__turb1__GetPressureHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressureHessianResponse(struct soap*, const struct _turb1__GetPressureHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetPressureHessianResponse
#define soap_write__turb1__GetPressureHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressureHessianResponse(soap, data), 0) || soap_put__turb1__GetPressureHessianResponse(soap, data, "turb1:GetPressureHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressureHessianResponse
#define soap_PUT__turb1__GetPressureHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessianResponse(soap, data), 0) || soap_put__turb1__GetPressureHessianResponse(soap, data, "turb1:GetPressureHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressureHessianResponse
#define soap_PATCH__turb1__GetPressureHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessianResponse(soap, data), 0) || soap_put__turb1__GetPressureHessianResponse(soap, data, "turb1:GetPressureHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressureHessianResponse
#define soap_POST_send__turb1__GetPressureHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessianResponse(soap, data), 0) || soap_put__turb1__GetPressureHessianResponse(soap, data, "turb1:GetPressureHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressureHessianResponse * SOAP_FMAC4 soap_get__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetPressureHessianResponse
#define soap_read__turb1__GetPressureHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetPressureHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressureHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressureHessianResponse
#define soap_GET__turb1__GetPressureHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressureHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressureHessianResponse
#define soap_POST_recv__turb1__GetPressureHessianResponse(soap, data) ( soap_read__turb1__GetPressureHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressureHessian_DEFINED
#define SOAP_TYPE__turb1__GetPressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressureHessian(struct soap*, const struct _turb1__GetPressureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressureHessian(struct soap*, const char*, int, const struct _turb1__GetPressureHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetPressureHessian * SOAP_FMAC4 soap_in__turb1__GetPressureHessian(struct soap*, const char*, struct _turb1__GetPressureHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetPressureHessian * SOAP_FMAC4 soap_new__turb1__GetPressureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressureHessian(struct soap*, const struct _turb1__GetPressureHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetPressureHessian
#define soap_write__turb1__GetPressureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressureHessian(soap, data), 0) || soap_put__turb1__GetPressureHessian(soap, data, "turb1:GetPressureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressureHessian
#define soap_PUT__turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessian(soap, data), 0) || soap_put__turb1__GetPressureHessian(soap, data, "turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressureHessian
#define soap_PATCH__turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessian(soap, data), 0) || soap_put__turb1__GetPressureHessian(soap, data, "turb1:GetPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressureHessian
#define soap_POST_send__turb1__GetPressureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureHessian(soap, data), 0) || soap_put__turb1__GetPressureHessian(soap, data, "turb1:GetPressureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressureHessian * SOAP_FMAC4 soap_get__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetPressureHessian
#define soap_read__turb1__GetPressureHessian(soap, data) ( ((data) ? (soap_default__turb1__GetPressureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressureHessian
#define soap_GET__turb1__GetPressureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressureHessian
#define soap_POST_recv__turb1__GetPressureHessian(soap, data) ( soap_read__turb1__GetPressureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialHessianResponse(struct soap*, const struct _turb1__GetVectorPotentialHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialHessianResponse(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessianResponse * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialHessianResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialHessianResponse * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialHessianResponse(struct soap*, const struct _turb1__GetVectorPotentialHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialHessianResponse
#define soap_write__turb1__GetVectorPotentialHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialHessianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessianResponse(soap, data, "turb1:GetVectorPotentialHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialHessianResponse
#define soap_PUT__turb1__GetVectorPotentialHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessianResponse(soap, data, "turb1:GetVectorPotentialHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialHessianResponse
#define soap_PATCH__turb1__GetVectorPotentialHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessianResponse(soap, data, "turb1:GetVectorPotentialHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialHessianResponse
#define soap_POST_send__turb1__GetVectorPotentialHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessianResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessianResponse(soap, data, "turb1:GetVectorPotentialHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialHessianResponse * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialHessianResponse
#define soap_read__turb1__GetVectorPotentialHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialHessianResponse
#define soap_GET__turb1__GetVectorPotentialHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialHessianResponse
#define soap_POST_recv__turb1__GetVectorPotentialHessianResponse(soap, data) ( soap_read__turb1__GetVectorPotentialHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessian_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialHessian(struct soap*, const struct _turb1__GetVectorPotentialHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialHessian(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialHessian(struct soap*, const char*, struct _turb1__GetVectorPotentialHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialHessian(struct soap*, const struct _turb1__GetVectorPotentialHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialHessian
#define soap_write__turb1__GetVectorPotentialHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessian(soap, data, "turb1:GetVectorPotentialHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialHessian
#define soap_PUT__turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessian(soap, data, "turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialHessian
#define soap_PATCH__turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessian(soap, data, "turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialHessian
#define soap_POST_send__turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialHessian(soap, data), 0) || soap_put__turb1__GetVectorPotentialHessian(soap, data, "turb1:GetVectorPotentialHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialHessian * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialHessian
#define soap_read__turb1__GetVectorPotentialHessian(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialHessian
#define soap_GET__turb1__GetVectorPotentialHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialHessian
#define soap_POST_recv__turb1__GetVectorPotentialHessian(soap, data) ( soap_read__turb1__GetVectorPotentialHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetMagneticHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticHessianResponse(struct soap*, const struct _turb1__GetMagneticHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticHessianResponse(struct soap*, const char*, int, const struct _turb1__GetMagneticHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticHessianResponse * SOAP_FMAC4 soap_in__turb1__GetMagneticHessianResponse(struct soap*, const char*, struct _turb1__GetMagneticHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticHessianResponse * SOAP_FMAC4 soap_new__turb1__GetMagneticHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticHessianResponse(struct soap*, const struct _turb1__GetMagneticHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticHessianResponse
#define soap_write__turb1__GetMagneticHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticHessianResponse(soap, data), 0) || soap_put__turb1__GetMagneticHessianResponse(soap, data, "turb1:GetMagneticHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticHessianResponse
#define soap_PUT__turb1__GetMagneticHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessianResponse(soap, data), 0) || soap_put__turb1__GetMagneticHessianResponse(soap, data, "turb1:GetMagneticHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticHessianResponse
#define soap_PATCH__turb1__GetMagneticHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessianResponse(soap, data), 0) || soap_put__turb1__GetMagneticHessianResponse(soap, data, "turb1:GetMagneticHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticHessianResponse
#define soap_POST_send__turb1__GetMagneticHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessianResponse(soap, data), 0) || soap_put__turb1__GetMagneticHessianResponse(soap, data, "turb1:GetMagneticHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticHessianResponse * SOAP_FMAC4 soap_get__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticHessianResponse
#define soap_read__turb1__GetMagneticHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticHessianResponse
#define soap_GET__turb1__GetMagneticHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticHessianResponse
#define soap_POST_recv__turb1__GetMagneticHessianResponse(soap, data) ( soap_read__turb1__GetMagneticHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticHessian_DEFINED
#define SOAP_TYPE__turb1__GetMagneticHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticHessian(struct soap*, const struct _turb1__GetMagneticHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticHessian(struct soap*, const char*, int, const struct _turb1__GetMagneticHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticHessian * SOAP_FMAC4 soap_in__turb1__GetMagneticHessian(struct soap*, const char*, struct _turb1__GetMagneticHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticHessian * SOAP_FMAC4 soap_new__turb1__GetMagneticHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticHessian(struct soap*, const struct _turb1__GetMagneticHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticHessian
#define soap_write__turb1__GetMagneticHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticHessian(soap, data), 0) || soap_put__turb1__GetMagneticHessian(soap, data, "turb1:GetMagneticHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticHessian
#define soap_PUT__turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessian(soap, data), 0) || soap_put__turb1__GetMagneticHessian(soap, data, "turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticHessian
#define soap_PATCH__turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessian(soap, data), 0) || soap_put__turb1__GetMagneticHessian(soap, data, "turb1:GetMagneticHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticHessian
#define soap_POST_send__turb1__GetMagneticHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticHessian(soap, data), 0) || soap_put__turb1__GetMagneticHessian(soap, data, "turb1:GetMagneticHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticHessian * SOAP_FMAC4 soap_get__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticHessian
#define soap_read__turb1__GetMagneticHessian(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticHessian
#define soap_GET__turb1__GetMagneticHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticHessian
#define soap_POST_recv__turb1__GetMagneticHessian(soap, data) ( soap_read__turb1__GetMagneticHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityHessianResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityHessianResponse(struct soap*, const struct _turb1__GetVelocityHessianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityHessianResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityHessianResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityHessianResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityHessianResponse(struct soap*, const char*, struct _turb1__GetVelocityHessianResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityHessianResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityHessianResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityHessianResponse(struct soap*, const struct _turb1__GetVelocityHessianResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityHessianResponse
#define soap_write__turb1__GetVelocityHessianResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityHessianResponse(soap, data), 0) || soap_put__turb1__GetVelocityHessianResponse(soap, data, "turb1:GetVelocityHessianResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityHessianResponse
#define soap_PUT__turb1__GetVelocityHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessianResponse(soap, data), 0) || soap_put__turb1__GetVelocityHessianResponse(soap, data, "turb1:GetVelocityHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityHessianResponse
#define soap_PATCH__turb1__GetVelocityHessianResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessianResponse(soap, data), 0) || soap_put__turb1__GetVelocityHessianResponse(soap, data, "turb1:GetVelocityHessianResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityHessianResponse
#define soap_POST_send__turb1__GetVelocityHessianResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessianResponse(soap, data), 0) || soap_put__turb1__GetVelocityHessianResponse(soap, data, "turb1:GetVelocityHessianResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityHessianResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityHessianResponse
#define soap_read__turb1__GetVelocityHessianResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityHessianResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityHessianResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityHessianResponse
#define soap_GET__turb1__GetVelocityHessianResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityHessianResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityHessianResponse
#define soap_POST_recv__turb1__GetVelocityHessianResponse(soap, data) ( soap_read__turb1__GetVelocityHessianResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityHessian_DEFINED
#define SOAP_TYPE__turb1__GetVelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityHessian(struct soap*, const struct _turb1__GetVelocityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityHessian(struct soap*, const char*, int, const struct _turb1__GetVelocityHessian *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityHessian * SOAP_FMAC4 soap_in__turb1__GetVelocityHessian(struct soap*, const char*, struct _turb1__GetVelocityHessian *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityHessian * SOAP_FMAC4 soap_new__turb1__GetVelocityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityHessian(struct soap*, const struct _turb1__GetVelocityHessian *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityHessian
#define soap_write__turb1__GetVelocityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityHessian(soap, data), 0) || soap_put__turb1__GetVelocityHessian(soap, data, "turb1:GetVelocityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityHessian
#define soap_PUT__turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessian(soap, data), 0) || soap_put__turb1__GetVelocityHessian(soap, data, "turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityHessian
#define soap_PATCH__turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessian(soap, data), 0) || soap_put__turb1__GetVelocityHessian(soap, data, "turb1:GetVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityHessian
#define soap_POST_send__turb1__GetVelocityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityHessian(soap, data), 0) || soap_put__turb1__GetVelocityHessian(soap, data, "turb1:GetVelocityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityHessian * SOAP_FMAC4 soap_get__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityHessian
#define soap_read__turb1__GetVelocityHessian(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityHessian
#define soap_GET__turb1__GetVelocityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityHessian
#define soap_POST_recv__turb1__GetVelocityHessian(soap, data) ( soap_read__turb1__GetVelocityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperatureGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetTemperatureGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperatureGradientResponse(struct soap*, const struct _turb1__GetTemperatureGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperatureGradientResponse(struct soap*, const char*, int, const struct _turb1__GetTemperatureGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureGradientResponse * SOAP_FMAC4 soap_in__turb1__GetTemperatureGradientResponse(struct soap*, const char*, struct _turb1__GetTemperatureGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperatureGradientResponse * SOAP_FMAC4 soap_new__turb1__GetTemperatureGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperatureGradientResponse(struct soap*, const struct _turb1__GetTemperatureGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperatureGradientResponse
#define soap_write__turb1__GetTemperatureGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperatureGradientResponse(soap, data), 0) || soap_put__turb1__GetTemperatureGradientResponse(soap, data, "turb1:GetTemperatureGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperatureGradientResponse
#define soap_PUT__turb1__GetTemperatureGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradientResponse(soap, data), 0) || soap_put__turb1__GetTemperatureGradientResponse(soap, data, "turb1:GetTemperatureGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperatureGradientResponse
#define soap_PATCH__turb1__GetTemperatureGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradientResponse(soap, data), 0) || soap_put__turb1__GetTemperatureGradientResponse(soap, data, "turb1:GetTemperatureGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperatureGradientResponse
#define soap_POST_send__turb1__GetTemperatureGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradientResponse(soap, data), 0) || soap_put__turb1__GetTemperatureGradientResponse(soap, data, "turb1:GetTemperatureGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperatureGradientResponse * SOAP_FMAC4 soap_get__turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperatureGradientResponse
#define soap_read__turb1__GetTemperatureGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetTemperatureGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperatureGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperatureGradientResponse
#define soap_GET__turb1__GetTemperatureGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperatureGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperatureGradientResponse
#define soap_POST_recv__turb1__GetTemperatureGradientResponse(soap, data) ( soap_read__turb1__GetTemperatureGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperatureGradient_DEFINED
#define SOAP_TYPE__turb1__GetTemperatureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperatureGradient(struct soap*, const struct _turb1__GetTemperatureGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperatureGradient(struct soap*, const char*, int, const struct _turb1__GetTemperatureGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureGradient * SOAP_FMAC4 soap_in__turb1__GetTemperatureGradient(struct soap*, const char*, struct _turb1__GetTemperatureGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperatureGradient * SOAP_FMAC4 soap_new__turb1__GetTemperatureGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperatureGradient(struct soap*, const struct _turb1__GetTemperatureGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperatureGradient
#define soap_write__turb1__GetTemperatureGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperatureGradient(soap, data), 0) || soap_put__turb1__GetTemperatureGradient(soap, data, "turb1:GetTemperatureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperatureGradient
#define soap_PUT__turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradient(soap, data), 0) || soap_put__turb1__GetTemperatureGradient(soap, data, "turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperatureGradient
#define soap_PATCH__turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradient(soap, data), 0) || soap_put__turb1__GetTemperatureGradient(soap, data, "turb1:GetTemperatureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperatureGradient
#define soap_POST_send__turb1__GetTemperatureGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureGradient(soap, data), 0) || soap_put__turb1__GetTemperatureGradient(soap, data, "turb1:GetTemperatureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperatureGradient * SOAP_FMAC4 soap_get__turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperatureGradient
#define soap_read__turb1__GetTemperatureGradient(soap, data) ( ((data) ? (soap_default__turb1__GetTemperatureGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperatureGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperatureGradient
#define soap_GET__turb1__GetTemperatureGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperatureGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperatureGradient
#define soap_POST_recv__turb1__GetTemperatureGradient(soap, data) ( soap_read__turb1__GetTemperatureGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensityGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetDensityGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensityGradientResponse(struct soap*, const struct _turb1__GetDensityGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensityGradientResponse(struct soap*, const char*, int, const struct _turb1__GetDensityGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetDensityGradientResponse * SOAP_FMAC4 soap_in__turb1__GetDensityGradientResponse(struct soap*, const char*, struct _turb1__GetDensityGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetDensityGradientResponse * SOAP_FMAC4 soap_new__turb1__GetDensityGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensityGradientResponse(struct soap*, const struct _turb1__GetDensityGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetDensityGradientResponse
#define soap_write__turb1__GetDensityGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensityGradientResponse(soap, data), 0) || soap_put__turb1__GetDensityGradientResponse(soap, data, "turb1:GetDensityGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensityGradientResponse
#define soap_PUT__turb1__GetDensityGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradientResponse(soap, data), 0) || soap_put__turb1__GetDensityGradientResponse(soap, data, "turb1:GetDensityGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensityGradientResponse
#define soap_PATCH__turb1__GetDensityGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradientResponse(soap, data), 0) || soap_put__turb1__GetDensityGradientResponse(soap, data, "turb1:GetDensityGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensityGradientResponse
#define soap_POST_send__turb1__GetDensityGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradientResponse(soap, data), 0) || soap_put__turb1__GetDensityGradientResponse(soap, data, "turb1:GetDensityGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensityGradientResponse * SOAP_FMAC4 soap_get__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetDensityGradientResponse
#define soap_read__turb1__GetDensityGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetDensityGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensityGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensityGradientResponse
#define soap_GET__turb1__GetDensityGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensityGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensityGradientResponse
#define soap_POST_recv__turb1__GetDensityGradientResponse(soap, data) ( soap_read__turb1__GetDensityGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensityGradient_DEFINED
#define SOAP_TYPE__turb1__GetDensityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensityGradient(struct soap*, const struct _turb1__GetDensityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensityGradient(struct soap*, const char*, int, const struct _turb1__GetDensityGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetDensityGradient * SOAP_FMAC4 soap_in__turb1__GetDensityGradient(struct soap*, const char*, struct _turb1__GetDensityGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetDensityGradient * SOAP_FMAC4 soap_new__turb1__GetDensityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensityGradient(struct soap*, const struct _turb1__GetDensityGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetDensityGradient
#define soap_write__turb1__GetDensityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensityGradient(soap, data), 0) || soap_put__turb1__GetDensityGradient(soap, data, "turb1:GetDensityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensityGradient
#define soap_PUT__turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradient(soap, data), 0) || soap_put__turb1__GetDensityGradient(soap, data, "turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensityGradient
#define soap_PATCH__turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradient(soap, data), 0) || soap_put__turb1__GetDensityGradient(soap, data, "turb1:GetDensityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensityGradient
#define soap_POST_send__turb1__GetDensityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityGradient(soap, data), 0) || soap_put__turb1__GetDensityGradient(soap, data, "turb1:GetDensityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensityGradient * SOAP_FMAC4 soap_get__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetDensityGradient
#define soap_read__turb1__GetDensityGradient(soap, data) ( ((data) ? (soap_default__turb1__GetDensityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensityGradient
#define soap_GET__turb1__GetDensityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensityGradient
#define soap_POST_recv__turb1__GetDensityGradient(soap, data) ( soap_read__turb1__GetDensityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressureGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetPressureGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressureGradientResponse(struct soap*, const struct _turb1__GetPressureGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressureGradientResponse(struct soap*, const char*, int, const struct _turb1__GetPressureGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetPressureGradientResponse * SOAP_FMAC4 soap_in__turb1__GetPressureGradientResponse(struct soap*, const char*, struct _turb1__GetPressureGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetPressureGradientResponse * SOAP_FMAC4 soap_new__turb1__GetPressureGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressureGradientResponse(struct soap*, const struct _turb1__GetPressureGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetPressureGradientResponse
#define soap_write__turb1__GetPressureGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressureGradientResponse(soap, data), 0) || soap_put__turb1__GetPressureGradientResponse(soap, data, "turb1:GetPressureGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressureGradientResponse
#define soap_PUT__turb1__GetPressureGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradientResponse(soap, data), 0) || soap_put__turb1__GetPressureGradientResponse(soap, data, "turb1:GetPressureGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressureGradientResponse
#define soap_PATCH__turb1__GetPressureGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradientResponse(soap, data), 0) || soap_put__turb1__GetPressureGradientResponse(soap, data, "turb1:GetPressureGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressureGradientResponse
#define soap_POST_send__turb1__GetPressureGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradientResponse(soap, data), 0) || soap_put__turb1__GetPressureGradientResponse(soap, data, "turb1:GetPressureGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressureGradientResponse * SOAP_FMAC4 soap_get__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetPressureGradientResponse
#define soap_read__turb1__GetPressureGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetPressureGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressureGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressureGradientResponse
#define soap_GET__turb1__GetPressureGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressureGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressureGradientResponse
#define soap_POST_recv__turb1__GetPressureGradientResponse(soap, data) ( soap_read__turb1__GetPressureGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressureGradient_DEFINED
#define SOAP_TYPE__turb1__GetPressureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressureGradient(struct soap*, const struct _turb1__GetPressureGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressureGradient(struct soap*, const char*, int, const struct _turb1__GetPressureGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetPressureGradient * SOAP_FMAC4 soap_in__turb1__GetPressureGradient(struct soap*, const char*, struct _turb1__GetPressureGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetPressureGradient * SOAP_FMAC4 soap_new__turb1__GetPressureGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressureGradient(struct soap*, const struct _turb1__GetPressureGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetPressureGradient
#define soap_write__turb1__GetPressureGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressureGradient(soap, data), 0) || soap_put__turb1__GetPressureGradient(soap, data, "turb1:GetPressureGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressureGradient
#define soap_PUT__turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradient(soap, data), 0) || soap_put__turb1__GetPressureGradient(soap, data, "turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressureGradient
#define soap_PATCH__turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradient(soap, data), 0) || soap_put__turb1__GetPressureGradient(soap, data, "turb1:GetPressureGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressureGradient
#define soap_POST_send__turb1__GetPressureGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureGradient(soap, data), 0) || soap_put__turb1__GetPressureGradient(soap, data, "turb1:GetPressureGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressureGradient * SOAP_FMAC4 soap_get__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetPressureGradient
#define soap_read__turb1__GetPressureGradient(soap, data) ( ((data) ? (soap_default__turb1__GetPressureGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressureGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressureGradient
#define soap_GET__turb1__GetPressureGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressureGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressureGradient
#define soap_POST_recv__turb1__GetPressureGradient(soap, data) ( soap_read__turb1__GetPressureGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialGradientResponse(struct soap*, const struct _turb1__GetVectorPotentialGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialGradientResponse(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradientResponse * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialGradientResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialGradientResponse * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialGradientResponse(struct soap*, const struct _turb1__GetVectorPotentialGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialGradientResponse
#define soap_write__turb1__GetVectorPotentialGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialGradientResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradientResponse(soap, data, "turb1:GetVectorPotentialGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialGradientResponse
#define soap_PUT__turb1__GetVectorPotentialGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradientResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradientResponse(soap, data, "turb1:GetVectorPotentialGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialGradientResponse
#define soap_PATCH__turb1__GetVectorPotentialGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradientResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradientResponse(soap, data, "turb1:GetVectorPotentialGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialGradientResponse
#define soap_POST_send__turb1__GetVectorPotentialGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradientResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradientResponse(soap, data, "turb1:GetVectorPotentialGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialGradientResponse * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialGradientResponse
#define soap_read__turb1__GetVectorPotentialGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialGradientResponse
#define soap_GET__turb1__GetVectorPotentialGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialGradientResponse
#define soap_POST_recv__turb1__GetVectorPotentialGradientResponse(soap, data) ( soap_read__turb1__GetVectorPotentialGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradient_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialGradient(struct soap*, const struct _turb1__GetVectorPotentialGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialGradient(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialGradient(struct soap*, const char*, struct _turb1__GetVectorPotentialGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialGradient(struct soap*, const struct _turb1__GetVectorPotentialGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialGradient
#define soap_write__turb1__GetVectorPotentialGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradient(soap, data, "turb1:GetVectorPotentialGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialGradient
#define soap_PUT__turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradient(soap, data, "turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialGradient
#define soap_PATCH__turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradient(soap, data, "turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialGradient
#define soap_POST_send__turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialGradient(soap, data), 0) || soap_put__turb1__GetVectorPotentialGradient(soap, data, "turb1:GetVectorPotentialGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialGradient * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialGradient
#define soap_read__turb1__GetVectorPotentialGradient(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialGradient
#define soap_GET__turb1__GetVectorPotentialGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialGradient
#define soap_POST_recv__turb1__GetVectorPotentialGradient(soap, data) ( soap_read__turb1__GetVectorPotentialGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetMagneticFieldGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticFieldGradientResponse(struct soap*, const struct _turb1__GetMagneticFieldGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticFieldGradientResponse(struct soap*, const char*, int, const struct _turb1__GetMagneticFieldGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradientResponse * SOAP_FMAC4 soap_in__turb1__GetMagneticFieldGradientResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticFieldGradientResponse * SOAP_FMAC4 soap_new__turb1__GetMagneticFieldGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticFieldGradientResponse(struct soap*, const struct _turb1__GetMagneticFieldGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticFieldGradientResponse
#define soap_write__turb1__GetMagneticFieldGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticFieldGradientResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradientResponse(soap, data, "turb1:GetMagneticFieldGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticFieldGradientResponse
#define soap_PUT__turb1__GetMagneticFieldGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradientResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradientResponse(soap, data, "turb1:GetMagneticFieldGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticFieldGradientResponse
#define soap_PATCH__turb1__GetMagneticFieldGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradientResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradientResponse(soap, data, "turb1:GetMagneticFieldGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticFieldGradientResponse
#define soap_POST_send__turb1__GetMagneticFieldGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradientResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradientResponse(soap, data, "turb1:GetMagneticFieldGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticFieldGradientResponse * SOAP_FMAC4 soap_get__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticFieldGradientResponse
#define soap_read__turb1__GetMagneticFieldGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticFieldGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticFieldGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticFieldGradientResponse
#define soap_GET__turb1__GetMagneticFieldGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticFieldGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticFieldGradientResponse
#define soap_POST_recv__turb1__GetMagneticFieldGradientResponse(soap, data) ( soap_read__turb1__GetMagneticFieldGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradient_DEFINED
#define SOAP_TYPE__turb1__GetMagneticFieldGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticFieldGradient(struct soap*, const struct _turb1__GetMagneticFieldGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticFieldGradient(struct soap*, const char*, int, const struct _turb1__GetMagneticFieldGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_in__turb1__GetMagneticFieldGradient(struct soap*, const char*, struct _turb1__GetMagneticFieldGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_new__turb1__GetMagneticFieldGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticFieldGradient(struct soap*, const struct _turb1__GetMagneticFieldGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticFieldGradient
#define soap_write__turb1__GetMagneticFieldGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradient(soap, data, "turb1:GetMagneticFieldGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticFieldGradient
#define soap_PUT__turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradient(soap, data, "turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticFieldGradient
#define soap_PATCH__turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradient(soap, data, "turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticFieldGradient
#define soap_POST_send__turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldGradient(soap, data), 0) || soap_put__turb1__GetMagneticFieldGradient(soap, data, "turb1:GetMagneticFieldGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticFieldGradient * SOAP_FMAC4 soap_get__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticFieldGradient
#define soap_read__turb1__GetMagneticFieldGradient(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticFieldGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticFieldGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticFieldGradient
#define soap_GET__turb1__GetMagneticFieldGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticFieldGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticFieldGradient
#define soap_POST_recv__turb1__GetMagneticFieldGradient(soap, data) ( soap_read__turb1__GetMagneticFieldGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityGradientResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityGradientResponse(struct soap*, const struct _turb1__GetVelocityGradientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityGradientResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityGradientResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityGradientResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityGradientResponse(struct soap*, const char*, struct _turb1__GetVelocityGradientResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityGradientResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityGradientResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityGradientResponse(struct soap*, const struct _turb1__GetVelocityGradientResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityGradientResponse
#define soap_write__turb1__GetVelocityGradientResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityGradientResponse(soap, data), 0) || soap_put__turb1__GetVelocityGradientResponse(soap, data, "turb1:GetVelocityGradientResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityGradientResponse
#define soap_PUT__turb1__GetVelocityGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradientResponse(soap, data), 0) || soap_put__turb1__GetVelocityGradientResponse(soap, data, "turb1:GetVelocityGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityGradientResponse
#define soap_PATCH__turb1__GetVelocityGradientResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradientResponse(soap, data), 0) || soap_put__turb1__GetVelocityGradientResponse(soap, data, "turb1:GetVelocityGradientResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityGradientResponse
#define soap_POST_send__turb1__GetVelocityGradientResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradientResponse(soap, data), 0) || soap_put__turb1__GetVelocityGradientResponse(soap, data, "turb1:GetVelocityGradientResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityGradientResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityGradientResponse
#define soap_read__turb1__GetVelocityGradientResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityGradientResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityGradientResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityGradientResponse
#define soap_GET__turb1__GetVelocityGradientResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityGradientResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityGradientResponse
#define soap_POST_recv__turb1__GetVelocityGradientResponse(soap, data) ( soap_read__turb1__GetVelocityGradientResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityGradient_DEFINED
#define SOAP_TYPE__turb1__GetVelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityGradient(struct soap*, const struct _turb1__GetVelocityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityGradient(struct soap*, const char*, int, const struct _turb1__GetVelocityGradient *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityGradient * SOAP_FMAC4 soap_in__turb1__GetVelocityGradient(struct soap*, const char*, struct _turb1__GetVelocityGradient *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityGradient * SOAP_FMAC4 soap_new__turb1__GetVelocityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityGradient(struct soap*, const struct _turb1__GetVelocityGradient *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityGradient
#define soap_write__turb1__GetVelocityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityGradient(soap, data), 0) || soap_put__turb1__GetVelocityGradient(soap, data, "turb1:GetVelocityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityGradient
#define soap_PUT__turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradient(soap, data), 0) || soap_put__turb1__GetVelocityGradient(soap, data, "turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityGradient
#define soap_PATCH__turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradient(soap, data), 0) || soap_put__turb1__GetVelocityGradient(soap, data, "turb1:GetVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityGradient
#define soap_POST_send__turb1__GetVelocityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityGradient(soap, data), 0) || soap_put__turb1__GetVelocityGradient(soap, data, "turb1:GetVelocityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityGradient * SOAP_FMAC4 soap_get__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityGradient
#define soap_read__turb1__GetVelocityGradient(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityGradient
#define soap_GET__turb1__GetVelocityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityGradient
#define soap_POST_recv__turb1__GetVelocityGradient(soap, data) ( soap_read__turb1__GetVelocityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndTemperatureResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityAndTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityAndTemperatureResponse(struct soap*, const struct _turb1__GetVelocityAndTemperatureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityAndTemperatureResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityAndTemperatureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperatureResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityAndTemperatureResponse(struct soap*, const char*, struct _turb1__GetVelocityAndTemperatureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityAndTemperatureResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityAndTemperatureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityAndTemperatureResponse(struct soap*, const struct _turb1__GetVelocityAndTemperatureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityAndTemperatureResponse
#define soap_write__turb1__GetVelocityAndTemperatureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityAndTemperatureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperatureResponse(soap, data, "turb1:GetVelocityAndTemperatureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityAndTemperatureResponse
#define soap_PUT__turb1__GetVelocityAndTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperatureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperatureResponse(soap, data, "turb1:GetVelocityAndTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityAndTemperatureResponse
#define soap_PATCH__turb1__GetVelocityAndTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperatureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperatureResponse(soap, data, "turb1:GetVelocityAndTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityAndTemperatureResponse
#define soap_POST_send__turb1__GetVelocityAndTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperatureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperatureResponse(soap, data, "turb1:GetVelocityAndTemperatureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityAndTemperatureResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityAndTemperatureResponse
#define soap_read__turb1__GetVelocityAndTemperatureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityAndTemperatureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityAndTemperatureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityAndTemperatureResponse
#define soap_GET__turb1__GetVelocityAndTemperatureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityAndTemperatureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityAndTemperatureResponse
#define soap_POST_recv__turb1__GetVelocityAndTemperatureResponse(soap, data) ( soap_read__turb1__GetVelocityAndTemperatureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndTemperature_DEFINED
#define SOAP_TYPE__turb1__GetVelocityAndTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityAndTemperature(struct soap*, const struct _turb1__GetVelocityAndTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityAndTemperature(struct soap*, const char*, int, const struct _turb1__GetVelocityAndTemperature *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_in__turb1__GetVelocityAndTemperature(struct soap*, const char*, struct _turb1__GetVelocityAndTemperature *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_new__turb1__GetVelocityAndTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityAndTemperature(struct soap*, const struct _turb1__GetVelocityAndTemperature *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityAndTemperature
#define soap_write__turb1__GetVelocityAndTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperature(soap, data, "turb1:GetVelocityAndTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityAndTemperature
#define soap_PUT__turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperature(soap, data, "turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityAndTemperature
#define soap_PATCH__turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperature(soap, data, "turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityAndTemperature
#define soap_POST_send__turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndTemperature(soap, data), 0) || soap_put__turb1__GetVelocityAndTemperature(soap, data, "turb1:GetVelocityAndTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityAndTemperature * SOAP_FMAC4 soap_get__turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityAndTemperature
#define soap_read__turb1__GetVelocityAndTemperature(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityAndTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityAndTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityAndTemperature
#define soap_GET__turb1__GetVelocityAndTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityAndTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityAndTemperature
#define soap_POST_recv__turb1__GetVelocityAndTemperature(soap, data) ( soap_read__turb1__GetVelocityAndTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndPressureResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityAndPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityAndPressureResponse(struct soap*, const struct _turb1__GetVelocityAndPressureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityAndPressureResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityAndPressureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressureResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityAndPressureResponse(struct soap*, const char*, struct _turb1__GetVelocityAndPressureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityAndPressureResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityAndPressureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityAndPressureResponse(struct soap*, const struct _turb1__GetVelocityAndPressureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityAndPressureResponse
#define soap_write__turb1__GetVelocityAndPressureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityAndPressureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndPressureResponse(soap, data, "turb1:GetVelocityAndPressureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityAndPressureResponse
#define soap_PUT__turb1__GetVelocityAndPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndPressureResponse(soap, data, "turb1:GetVelocityAndPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityAndPressureResponse
#define soap_PATCH__turb1__GetVelocityAndPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndPressureResponse(soap, data, "turb1:GetVelocityAndPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityAndPressureResponse
#define soap_POST_send__turb1__GetVelocityAndPressureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressureResponse(soap, data), 0) || soap_put__turb1__GetVelocityAndPressureResponse(soap, data, "turb1:GetVelocityAndPressureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityAndPressureResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityAndPressureResponse
#define soap_read__turb1__GetVelocityAndPressureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityAndPressureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityAndPressureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityAndPressureResponse
#define soap_GET__turb1__GetVelocityAndPressureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityAndPressureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityAndPressureResponse
#define soap_POST_recv__turb1__GetVelocityAndPressureResponse(soap, data) ( soap_read__turb1__GetVelocityAndPressureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndPressure_DEFINED
#define SOAP_TYPE__turb1__GetVelocityAndPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityAndPressure(struct soap*, const struct _turb1__GetVelocityAndPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityAndPressure(struct soap*, const char*, int, const struct _turb1__GetVelocityAndPressure *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_in__turb1__GetVelocityAndPressure(struct soap*, const char*, struct _turb1__GetVelocityAndPressure *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_new__turb1__GetVelocityAndPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityAndPressure(struct soap*, const struct _turb1__GetVelocityAndPressure *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityAndPressure
#define soap_write__turb1__GetVelocityAndPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityAndPressure(soap, data), 0) || soap_put__turb1__GetVelocityAndPressure(soap, data, "turb1:GetVelocityAndPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityAndPressure
#define soap_PUT__turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressure(soap, data), 0) || soap_put__turb1__GetVelocityAndPressure(soap, data, "turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityAndPressure
#define soap_PATCH__turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressure(soap, data), 0) || soap_put__turb1__GetVelocityAndPressure(soap, data, "turb1:GetVelocityAndPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityAndPressure
#define soap_POST_send__turb1__GetVelocityAndPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityAndPressure(soap, data), 0) || soap_put__turb1__GetVelocityAndPressure(soap, data, "turb1:GetVelocityAndPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityAndPressure * SOAP_FMAC4 soap_get__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityAndPressure
#define soap_read__turb1__GetVelocityAndPressure(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityAndPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityAndPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityAndPressure
#define soap_GET__turb1__GetVelocityAndPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityAndPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityAndPressure
#define soap_POST_recv__turb1__GetVelocityAndPressure(soap, data) ( soap_read__turb1__GetVelocityAndPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperatureResponse_DEFINED
#define SOAP_TYPE__turb1__GetTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperatureResponse(struct soap*, const struct _turb1__GetTemperatureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperatureResponse(struct soap*, const char*, int, const struct _turb1__GetTemperatureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureResponse * SOAP_FMAC4 soap_in__turb1__GetTemperatureResponse(struct soap*, const char*, struct _turb1__GetTemperatureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperatureResponse * SOAP_FMAC4 soap_new__turb1__GetTemperatureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperatureResponse(struct soap*, const struct _turb1__GetTemperatureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperatureResponse
#define soap_write__turb1__GetTemperatureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperatureResponse(soap, data), 0) || soap_put__turb1__GetTemperatureResponse(soap, data, "turb1:GetTemperatureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperatureResponse
#define soap_PUT__turb1__GetTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureResponse(soap, data), 0) || soap_put__turb1__GetTemperatureResponse(soap, data, "turb1:GetTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperatureResponse
#define soap_PATCH__turb1__GetTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureResponse(soap, data), 0) || soap_put__turb1__GetTemperatureResponse(soap, data, "turb1:GetTemperatureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperatureResponse
#define soap_POST_send__turb1__GetTemperatureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperatureResponse(soap, data), 0) || soap_put__turb1__GetTemperatureResponse(soap, data, "turb1:GetTemperatureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperatureResponse * SOAP_FMAC4 soap_get__turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperatureResponse
#define soap_read__turb1__GetTemperatureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetTemperatureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperatureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperatureResponse
#define soap_GET__turb1__GetTemperatureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperatureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperatureResponse
#define soap_POST_recv__turb1__GetTemperatureResponse(soap, data) ( soap_read__turb1__GetTemperatureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetTemperature_DEFINED
#define SOAP_TYPE__turb1__GetTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetTemperature(struct soap*, const struct _turb1__GetTemperature *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetTemperature(struct soap*, const char*, int, const struct _turb1__GetTemperature *, const char*);
SOAP_FMAC3 struct _turb1__GetTemperature * SOAP_FMAC4 soap_in__turb1__GetTemperature(struct soap*, const char*, struct _turb1__GetTemperature *, const char*);

SOAP_FMAC3 struct _turb1__GetTemperature * SOAP_FMAC4 soap_new__turb1__GetTemperature(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetTemperature(struct soap*, const struct _turb1__GetTemperature *, const char*, const char*);

#ifndef soap_write__turb1__GetTemperature
#define soap_write__turb1__GetTemperature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetTemperature(soap, data), 0) || soap_put__turb1__GetTemperature(soap, data, "turb1:GetTemperature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetTemperature
#define soap_PUT__turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperature(soap, data), 0) || soap_put__turb1__GetTemperature(soap, data, "turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetTemperature
#define soap_PATCH__turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperature(soap, data), 0) || soap_put__turb1__GetTemperature(soap, data, "turb1:GetTemperature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetTemperature
#define soap_POST_send__turb1__GetTemperature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetTemperature(soap, data), 0) || soap_put__turb1__GetTemperature(soap, data, "turb1:GetTemperature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetTemperature * SOAP_FMAC4 soap_get__turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature *, const char*, const char*);

#ifndef soap_read__turb1__GetTemperature
#define soap_read__turb1__GetTemperature(soap, data) ( ((data) ? (soap_default__turb1__GetTemperature(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetTemperature(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetTemperature
#define soap_GET__turb1__GetTemperature(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetTemperature(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetTemperature
#define soap_POST_recv__turb1__GetTemperature(soap, data) ( soap_read__turb1__GetTemperature(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensityResponse_DEFINED
#define SOAP_TYPE__turb1__GetDensityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensityResponse(struct soap*, const struct _turb1__GetDensityResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensityResponse(struct soap*, const char*, int, const struct _turb1__GetDensityResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetDensityResponse * SOAP_FMAC4 soap_in__turb1__GetDensityResponse(struct soap*, const char*, struct _turb1__GetDensityResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetDensityResponse * SOAP_FMAC4 soap_new__turb1__GetDensityResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensityResponse(struct soap*, const struct _turb1__GetDensityResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetDensityResponse
#define soap_write__turb1__GetDensityResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensityResponse(soap, data), 0) || soap_put__turb1__GetDensityResponse(soap, data, "turb1:GetDensityResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensityResponse
#define soap_PUT__turb1__GetDensityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityResponse(soap, data), 0) || soap_put__turb1__GetDensityResponse(soap, data, "turb1:GetDensityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensityResponse
#define soap_PATCH__turb1__GetDensityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityResponse(soap, data), 0) || soap_put__turb1__GetDensityResponse(soap, data, "turb1:GetDensityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensityResponse
#define soap_POST_send__turb1__GetDensityResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensityResponse(soap, data), 0) || soap_put__turb1__GetDensityResponse(soap, data, "turb1:GetDensityResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensityResponse * SOAP_FMAC4 soap_get__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetDensityResponse
#define soap_read__turb1__GetDensityResponse(soap, data) ( ((data) ? (soap_default__turb1__GetDensityResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensityResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensityResponse
#define soap_GET__turb1__GetDensityResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensityResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensityResponse
#define soap_POST_recv__turb1__GetDensityResponse(soap, data) ( soap_read__turb1__GetDensityResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetDensity_DEFINED
#define SOAP_TYPE__turb1__GetDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetDensity(struct soap*, struct _turb1__GetDensity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetDensity(struct soap*, const struct _turb1__GetDensity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetDensity(struct soap*, const char*, int, const struct _turb1__GetDensity *, const char*);
SOAP_FMAC3 struct _turb1__GetDensity * SOAP_FMAC4 soap_in__turb1__GetDensity(struct soap*, const char*, struct _turb1__GetDensity *, const char*);

SOAP_FMAC3 struct _turb1__GetDensity * SOAP_FMAC4 soap_new__turb1__GetDensity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetDensity(struct soap*, const struct _turb1__GetDensity *, const char*, const char*);

#ifndef soap_write__turb1__GetDensity
#define soap_write__turb1__GetDensity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetDensity(soap, data), 0) || soap_put__turb1__GetDensity(soap, data, "turb1:GetDensity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetDensity
#define soap_PUT__turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensity(soap, data), 0) || soap_put__turb1__GetDensity(soap, data, "turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetDensity
#define soap_PATCH__turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensity(soap, data), 0) || soap_put__turb1__GetDensity(soap, data, "turb1:GetDensity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetDensity
#define soap_POST_send__turb1__GetDensity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetDensity(soap, data), 0) || soap_put__turb1__GetDensity(soap, data, "turb1:GetDensity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetDensity * SOAP_FMAC4 soap_get__turb1__GetDensity(struct soap*, struct _turb1__GetDensity *, const char*, const char*);

#ifndef soap_read__turb1__GetDensity
#define soap_read__turb1__GetDensity(soap, data) ( ((data) ? (soap_default__turb1__GetDensity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetDensity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetDensity
#define soap_GET__turb1__GetDensity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetDensity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetDensity
#define soap_POST_recv__turb1__GetDensity(soap, data) ( soap_read__turb1__GetDensity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressureResponse_DEFINED
#define SOAP_TYPE__turb1__GetPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressureResponse(struct soap*, const struct _turb1__GetPressureResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressureResponse(struct soap*, const char*, int, const struct _turb1__GetPressureResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetPressureResponse * SOAP_FMAC4 soap_in__turb1__GetPressureResponse(struct soap*, const char*, struct _turb1__GetPressureResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetPressureResponse * SOAP_FMAC4 soap_new__turb1__GetPressureResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressureResponse(struct soap*, const struct _turb1__GetPressureResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetPressureResponse
#define soap_write__turb1__GetPressureResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressureResponse(soap, data), 0) || soap_put__turb1__GetPressureResponse(soap, data, "turb1:GetPressureResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressureResponse
#define soap_PUT__turb1__GetPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureResponse(soap, data), 0) || soap_put__turb1__GetPressureResponse(soap, data, "turb1:GetPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressureResponse
#define soap_PATCH__turb1__GetPressureResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureResponse(soap, data), 0) || soap_put__turb1__GetPressureResponse(soap, data, "turb1:GetPressureResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressureResponse
#define soap_POST_send__turb1__GetPressureResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressureResponse(soap, data), 0) || soap_put__turb1__GetPressureResponse(soap, data, "turb1:GetPressureResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressureResponse * SOAP_FMAC4 soap_get__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetPressureResponse
#define soap_read__turb1__GetPressureResponse(soap, data) ( ((data) ? (soap_default__turb1__GetPressureResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressureResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressureResponse
#define soap_GET__turb1__GetPressureResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressureResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressureResponse
#define soap_POST_recv__turb1__GetPressureResponse(soap, data) ( soap_read__turb1__GetPressureResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetPressure_DEFINED
#define SOAP_TYPE__turb1__GetPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetPressure(struct soap*, struct _turb1__GetPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetPressure(struct soap*, const struct _turb1__GetPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetPressure(struct soap*, const char*, int, const struct _turb1__GetPressure *, const char*);
SOAP_FMAC3 struct _turb1__GetPressure * SOAP_FMAC4 soap_in__turb1__GetPressure(struct soap*, const char*, struct _turb1__GetPressure *, const char*);

SOAP_FMAC3 struct _turb1__GetPressure * SOAP_FMAC4 soap_new__turb1__GetPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetPressure(struct soap*, const struct _turb1__GetPressure *, const char*, const char*);

#ifndef soap_write__turb1__GetPressure
#define soap_write__turb1__GetPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetPressure(soap, data), 0) || soap_put__turb1__GetPressure(soap, data, "turb1:GetPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetPressure
#define soap_PUT__turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressure(soap, data), 0) || soap_put__turb1__GetPressure(soap, data, "turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetPressure
#define soap_PATCH__turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressure(soap, data), 0) || soap_put__turb1__GetPressure(soap, data, "turb1:GetPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetPressure
#define soap_POST_send__turb1__GetPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetPressure(soap, data), 0) || soap_put__turb1__GetPressure(soap, data, "turb1:GetPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetPressure * SOAP_FMAC4 soap_get__turb1__GetPressure(struct soap*, struct _turb1__GetPressure *, const char*, const char*);

#ifndef soap_read__turb1__GetPressure
#define soap_read__turb1__GetPressure(soap, data) ( ((data) ? (soap_default__turb1__GetPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetPressure
#define soap_GET__turb1__GetPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetPressure
#define soap_POST_recv__turb1__GetPressure(soap, data) ( soap_read__turb1__GetPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialResponse_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotentialResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotentialResponse(struct soap*, const struct _turb1__GetVectorPotentialResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotentialResponse(struct soap*, const char*, int, const struct _turb1__GetVectorPotentialResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialResponse * SOAP_FMAC4 soap_in__turb1__GetVectorPotentialResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotentialResponse * SOAP_FMAC4 soap_new__turb1__GetVectorPotentialResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotentialResponse(struct soap*, const struct _turb1__GetVectorPotentialResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotentialResponse
#define soap_write__turb1__GetVectorPotentialResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialResponse(soap, data, "turb1:GetVectorPotentialResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotentialResponse
#define soap_PUT__turb1__GetVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialResponse(soap, data, "turb1:GetVectorPotentialResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotentialResponse
#define soap_PATCH__turb1__GetVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialResponse(soap, data, "turb1:GetVectorPotentialResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotentialResponse
#define soap_POST_send__turb1__GetVectorPotentialResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotentialResponse(soap, data), 0) || soap_put__turb1__GetVectorPotentialResponse(soap, data, "turb1:GetVectorPotentialResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotentialResponse * SOAP_FMAC4 soap_get__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotentialResponse
#define soap_read__turb1__GetVectorPotentialResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotentialResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotentialResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotentialResponse
#define soap_GET__turb1__GetVectorPotentialResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotentialResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotentialResponse
#define soap_POST_recv__turb1__GetVectorPotentialResponse(soap, data) ( soap_read__turb1__GetVectorPotentialResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotential_DEFINED
#define SOAP_TYPE__turb1__GetVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVectorPotential(struct soap*, const struct _turb1__GetVectorPotential *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVectorPotential(struct soap*, const char*, int, const struct _turb1__GetVectorPotential *, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotential * SOAP_FMAC4 soap_in__turb1__GetVectorPotential(struct soap*, const char*, struct _turb1__GetVectorPotential *, const char*);

SOAP_FMAC3 struct _turb1__GetVectorPotential * SOAP_FMAC4 soap_new__turb1__GetVectorPotential(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVectorPotential(struct soap*, const struct _turb1__GetVectorPotential *, const char*, const char*);

#ifndef soap_write__turb1__GetVectorPotential
#define soap_write__turb1__GetVectorPotential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVectorPotential(soap, data), 0) || soap_put__turb1__GetVectorPotential(soap, data, "turb1:GetVectorPotential", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVectorPotential
#define soap_PUT__turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotential(soap, data), 0) || soap_put__turb1__GetVectorPotential(soap, data, "turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVectorPotential
#define soap_PATCH__turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotential(soap, data), 0) || soap_put__turb1__GetVectorPotential(soap, data, "turb1:GetVectorPotential", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVectorPotential
#define soap_POST_send__turb1__GetVectorPotential(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVectorPotential(soap, data), 0) || soap_put__turb1__GetVectorPotential(soap, data, "turb1:GetVectorPotential", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVectorPotential * SOAP_FMAC4 soap_get__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential *, const char*, const char*);

#ifndef soap_read__turb1__GetVectorPotential
#define soap_read__turb1__GetVectorPotential(soap, data) ( ((data) ? (soap_default__turb1__GetVectorPotential(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVectorPotential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVectorPotential
#define soap_GET__turb1__GetVectorPotential(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVectorPotential(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVectorPotential
#define soap_POST_recv__turb1__GetVectorPotential(soap, data) ( soap_read__turb1__GetVectorPotential(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldResponse_DEFINED
#define SOAP_TYPE__turb1__GetMagneticFieldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticFieldResponse(struct soap*, const struct _turb1__GetMagneticFieldResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticFieldResponse(struct soap*, const char*, int, const struct _turb1__GetMagneticFieldResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldResponse * SOAP_FMAC4 soap_in__turb1__GetMagneticFieldResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticFieldResponse * SOAP_FMAC4 soap_new__turb1__GetMagneticFieldResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticFieldResponse(struct soap*, const struct _turb1__GetMagneticFieldResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticFieldResponse
#define soap_write__turb1__GetMagneticFieldResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldResponse(soap, data, "turb1:GetMagneticFieldResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticFieldResponse
#define soap_PUT__turb1__GetMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldResponse(soap, data, "turb1:GetMagneticFieldResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticFieldResponse
#define soap_PATCH__turb1__GetMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldResponse(soap, data, "turb1:GetMagneticFieldResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticFieldResponse
#define soap_POST_send__turb1__GetMagneticFieldResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticFieldResponse(soap, data), 0) || soap_put__turb1__GetMagneticFieldResponse(soap, data, "turb1:GetMagneticFieldResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticFieldResponse * SOAP_FMAC4 soap_get__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticFieldResponse
#define soap_read__turb1__GetMagneticFieldResponse(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticFieldResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticFieldResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticFieldResponse
#define soap_GET__turb1__GetMagneticFieldResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticFieldResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticFieldResponse
#define soap_POST_recv__turb1__GetMagneticFieldResponse(soap, data) ( soap_read__turb1__GetMagneticFieldResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetMagneticField_DEFINED
#define SOAP_TYPE__turb1__GetMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetMagneticField(struct soap*, const struct _turb1__GetMagneticField *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetMagneticField(struct soap*, const char*, int, const struct _turb1__GetMagneticField *, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticField * SOAP_FMAC4 soap_in__turb1__GetMagneticField(struct soap*, const char*, struct _turb1__GetMagneticField *, const char*);

SOAP_FMAC3 struct _turb1__GetMagneticField * SOAP_FMAC4 soap_new__turb1__GetMagneticField(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetMagneticField(struct soap*, const struct _turb1__GetMagneticField *, const char*, const char*);

#ifndef soap_write__turb1__GetMagneticField
#define soap_write__turb1__GetMagneticField(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetMagneticField(soap, data), 0) || soap_put__turb1__GetMagneticField(soap, data, "turb1:GetMagneticField", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetMagneticField
#define soap_PUT__turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticField(soap, data), 0) || soap_put__turb1__GetMagneticField(soap, data, "turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetMagneticField
#define soap_PATCH__turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticField(soap, data), 0) || soap_put__turb1__GetMagneticField(soap, data, "turb1:GetMagneticField", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetMagneticField
#define soap_POST_send__turb1__GetMagneticField(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetMagneticField(soap, data), 0) || soap_put__turb1__GetMagneticField(soap, data, "turb1:GetMagneticField", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetMagneticField * SOAP_FMAC4 soap_get__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField *, const char*, const char*);

#ifndef soap_read__turb1__GetMagneticField
#define soap_read__turb1__GetMagneticField(soap, data) ( ((data) ? (soap_default__turb1__GetMagneticField(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetMagneticField(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetMagneticField
#define soap_GET__turb1__GetMagneticField(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetMagneticField(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetMagneticField
#define soap_POST_recv__turb1__GetMagneticField(soap, data) ( soap_read__turb1__GetMagneticField(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocityResponse_DEFINED
#define SOAP_TYPE__turb1__GetVelocityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocityResponse(struct soap*, const struct _turb1__GetVelocityResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocityResponse(struct soap*, const char*, int, const struct _turb1__GetVelocityResponse *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityResponse * SOAP_FMAC4 soap_in__turb1__GetVelocityResponse(struct soap*, const char*, struct _turb1__GetVelocityResponse *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocityResponse * SOAP_FMAC4 soap_new__turb1__GetVelocityResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocityResponse(struct soap*, const struct _turb1__GetVelocityResponse *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocityResponse
#define soap_write__turb1__GetVelocityResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocityResponse(soap, data), 0) || soap_put__turb1__GetVelocityResponse(soap, data, "turb1:GetVelocityResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocityResponse
#define soap_PUT__turb1__GetVelocityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityResponse(soap, data), 0) || soap_put__turb1__GetVelocityResponse(soap, data, "turb1:GetVelocityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocityResponse
#define soap_PATCH__turb1__GetVelocityResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityResponse(soap, data), 0) || soap_put__turb1__GetVelocityResponse(soap, data, "turb1:GetVelocityResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocityResponse
#define soap_POST_send__turb1__GetVelocityResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocityResponse(soap, data), 0) || soap_put__turb1__GetVelocityResponse(soap, data, "turb1:GetVelocityResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocityResponse * SOAP_FMAC4 soap_get__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocityResponse
#define soap_read__turb1__GetVelocityResponse(soap, data) ( ((data) ? (soap_default__turb1__GetVelocityResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocityResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocityResponse
#define soap_GET__turb1__GetVelocityResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocityResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocityResponse
#define soap_POST_recv__turb1__GetVelocityResponse(soap, data) ( soap_read__turb1__GetVelocityResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__GetVelocity_DEFINED
#define SOAP_TYPE__turb1__GetVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__GetVelocity(struct soap*, const struct _turb1__GetVelocity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__GetVelocity(struct soap*, const char*, int, const struct _turb1__GetVelocity *, const char*);
SOAP_FMAC3 struct _turb1__GetVelocity * SOAP_FMAC4 soap_in__turb1__GetVelocity(struct soap*, const char*, struct _turb1__GetVelocity *, const char*);

SOAP_FMAC3 struct _turb1__GetVelocity * SOAP_FMAC4 soap_new__turb1__GetVelocity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__GetVelocity(struct soap*, const struct _turb1__GetVelocity *, const char*, const char*);

#ifndef soap_write__turb1__GetVelocity
#define soap_write__turb1__GetVelocity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__GetVelocity(soap, data), 0) || soap_put__turb1__GetVelocity(soap, data, "turb1:GetVelocity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__GetVelocity
#define soap_PUT__turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocity(soap, data), 0) || soap_put__turb1__GetVelocity(soap, data, "turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__GetVelocity
#define soap_PATCH__turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocity(soap, data), 0) || soap_put__turb1__GetVelocity(soap, data, "turb1:GetVelocity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__GetVelocity
#define soap_POST_send__turb1__GetVelocity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__GetVelocity(soap, data), 0) || soap_put__turb1__GetVelocity(soap, data, "turb1:GetVelocity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__GetVelocity * SOAP_FMAC4 soap_get__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity *, const char*, const char*);

#ifndef soap_read__turb1__GetVelocity
#define soap_read__turb1__GetVelocity(soap, data) ( ((data) ? (soap_default__turb1__GetVelocity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__GetVelocity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__GetVelocity
#define soap_GET__turb1__GetVelocity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__GetVelocity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__GetVelocity
#define soap_POST_recv__turb1__GetVelocity(soap, data) ( soap_read__turb1__GetVelocity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__NullOpResponse_DEFINED
#define SOAP_TYPE__turb1__NullOpResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__NullOpResponse(struct soap*, const struct _turb1__NullOpResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__NullOpResponse(struct soap*, const char*, int, const struct _turb1__NullOpResponse *, const char*);
SOAP_FMAC3 struct _turb1__NullOpResponse * SOAP_FMAC4 soap_in__turb1__NullOpResponse(struct soap*, const char*, struct _turb1__NullOpResponse *, const char*);

SOAP_FMAC3 struct _turb1__NullOpResponse * SOAP_FMAC4 soap_new__turb1__NullOpResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__NullOpResponse(struct soap*, const struct _turb1__NullOpResponse *, const char*, const char*);

#ifndef soap_write__turb1__NullOpResponse
#define soap_write__turb1__NullOpResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__NullOpResponse(soap, data), 0) || soap_put__turb1__NullOpResponse(soap, data, "turb1:NullOpResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__NullOpResponse
#define soap_PUT__turb1__NullOpResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOpResponse(soap, data), 0) || soap_put__turb1__NullOpResponse(soap, data, "turb1:NullOpResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__NullOpResponse
#define soap_PATCH__turb1__NullOpResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOpResponse(soap, data), 0) || soap_put__turb1__NullOpResponse(soap, data, "turb1:NullOpResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__NullOpResponse
#define soap_POST_send__turb1__NullOpResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOpResponse(soap, data), 0) || soap_put__turb1__NullOpResponse(soap, data, "turb1:NullOpResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__NullOpResponse * SOAP_FMAC4 soap_get__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse *, const char*, const char*);

#ifndef soap_read__turb1__NullOpResponse
#define soap_read__turb1__NullOpResponse(soap, data) ( ((data) ? (soap_default__turb1__NullOpResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__NullOpResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__NullOpResponse
#define soap_GET__turb1__NullOpResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__NullOpResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__NullOpResponse
#define soap_POST_recv__turb1__NullOpResponse(soap, data) ( soap_read__turb1__NullOpResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__turb1__NullOp_DEFINED
#define SOAP_TYPE__turb1__NullOp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__turb1__NullOp(struct soap*, struct _turb1__NullOp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__turb1__NullOp(struct soap*, const struct _turb1__NullOp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__turb1__NullOp(struct soap*, const char*, int, const struct _turb1__NullOp *, const char*);
SOAP_FMAC3 struct _turb1__NullOp * SOAP_FMAC4 soap_in__turb1__NullOp(struct soap*, const char*, struct _turb1__NullOp *, const char*);

SOAP_FMAC3 struct _turb1__NullOp * SOAP_FMAC4 soap_new__turb1__NullOp(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__turb1__NullOp(struct soap*, const struct _turb1__NullOp *, const char*, const char*);

#ifndef soap_write__turb1__NullOp
#define soap_write__turb1__NullOp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__turb1__NullOp(soap, data), 0) || soap_put__turb1__NullOp(soap, data, "turb1:NullOp", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__turb1__NullOp
#define soap_PUT__turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOp(soap, data), 0) || soap_put__turb1__NullOp(soap, data, "turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__turb1__NullOp
#define soap_PATCH__turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOp(soap, data), 0) || soap_put__turb1__NullOp(soap, data, "turb1:NullOp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__turb1__NullOp
#define soap_POST_send__turb1__NullOp(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__turb1__NullOp(soap, data), 0) || soap_put__turb1__NullOp(soap, data, "turb1:NullOp", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _turb1__NullOp * SOAP_FMAC4 soap_get__turb1__NullOp(struct soap*, struct _turb1__NullOp *, const char*, const char*);

#ifndef soap_read__turb1__NullOp
#define soap_read__turb1__NullOp(soap, data) ( ((data) ? (soap_default__turb1__NullOp(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__turb1__NullOp(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__turb1__NullOp
#define soap_GET__turb1__NullOp(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__turb1__NullOp(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__turb1__NullOp
#define soap_POST_recv__turb1__NullOp(soap, data) ( soap_read__turb1__NullOp(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfArrayOfFloat_DEFINED
#define SOAP_TYPE_turb1__ArrayOfArrayOfFloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfArrayOfFloat(struct soap*, struct turb1__ArrayOfArrayOfFloat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfArrayOfFloat(struct soap*, const struct turb1__ArrayOfArrayOfFloat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfArrayOfFloat(struct soap*, const char*, int, const struct turb1__ArrayOfArrayOfFloat *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfArrayOfFloat * SOAP_FMAC4 soap_in_turb1__ArrayOfArrayOfFloat(struct soap*, const char*, struct turb1__ArrayOfArrayOfFloat *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfArrayOfFloat * SOAP_FMAC4 soap_new_turb1__ArrayOfArrayOfFloat(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfArrayOfFloat(struct soap*, const struct turb1__ArrayOfArrayOfFloat *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfArrayOfFloat
#define soap_write_turb1__ArrayOfArrayOfFloat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfArrayOfFloat(soap, data, "turb1:ArrayOfArrayOfFloat", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfArrayOfFloat
#define soap_PUT_turb1__ArrayOfArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfArrayOfFloat(soap, data, "turb1:ArrayOfArrayOfFloat", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfArrayOfFloat
#define soap_PATCH_turb1__ArrayOfArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfArrayOfFloat(soap, data, "turb1:ArrayOfArrayOfFloat", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfArrayOfFloat
#define soap_POST_send_turb1__ArrayOfArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfArrayOfFloat(soap, data, "turb1:ArrayOfArrayOfFloat", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfArrayOfFloat * SOAP_FMAC4 soap_get_turb1__ArrayOfArrayOfFloat(struct soap*, struct turb1__ArrayOfArrayOfFloat *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfArrayOfFloat
#define soap_read_turb1__ArrayOfArrayOfFloat(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfArrayOfFloat(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfArrayOfFloat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfArrayOfFloat
#define soap_GET_turb1__ArrayOfArrayOfFloat(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfArrayOfFloat(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfArrayOfFloat
#define soap_POST_recv_turb1__ArrayOfArrayOfFloat(soap, data) ( soap_read_turb1__ArrayOfArrayOfFloat(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfFloat_DEFINED
#define SOAP_TYPE_turb1__ArrayOfFloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfFloat(struct soap*, struct turb1__ArrayOfFloat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfFloat(struct soap*, const struct turb1__ArrayOfFloat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfFloat(struct soap*, const char*, int, const struct turb1__ArrayOfFloat *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfFloat * SOAP_FMAC4 soap_in_turb1__ArrayOfFloat(struct soap*, const char*, struct turb1__ArrayOfFloat *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfFloat * SOAP_FMAC4 soap_new_turb1__ArrayOfFloat(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfFloat(struct soap*, const struct turb1__ArrayOfFloat *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfFloat
#define soap_write_turb1__ArrayOfFloat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfFloat(soap, data, "turb1:ArrayOfFloat", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfFloat
#define soap_PUT_turb1__ArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfFloat(soap, data, "turb1:ArrayOfFloat", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfFloat
#define soap_PATCH_turb1__ArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfFloat(soap, data, "turb1:ArrayOfFloat", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfFloat
#define soap_POST_send_turb1__ArrayOfFloat(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfFloat(soap, data), 0) || soap_put_turb1__ArrayOfFloat(soap, data, "turb1:ArrayOfFloat", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfFloat * SOAP_FMAC4 soap_get_turb1__ArrayOfFloat(struct soap*, struct turb1__ArrayOfFloat *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfFloat
#define soap_read_turb1__ArrayOfFloat(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfFloat(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfFloat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfFloat
#define soap_GET_turb1__ArrayOfFloat(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfFloat(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfFloat
#define soap_POST_recv_turb1__ArrayOfFloat(soap, data) ( soap_read_turb1__ArrayOfFloat(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__SGSTensor_DEFINED
#define SOAP_TYPE_turb1__SGSTensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__SGSTensor(struct soap*, struct turb1__SGSTensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__SGSTensor(struct soap*, const struct turb1__SGSTensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__SGSTensor(struct soap*, const char*, int, const struct turb1__SGSTensor *, const char*);
SOAP_FMAC3 struct turb1__SGSTensor * SOAP_FMAC4 soap_in_turb1__SGSTensor(struct soap*, const char*, struct turb1__SGSTensor *, const char*);

SOAP_FMAC3 struct turb1__SGSTensor * SOAP_FMAC4 soap_new_turb1__SGSTensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__SGSTensor(struct soap*, const struct turb1__SGSTensor *, const char*, const char*);

#ifndef soap_write_turb1__SGSTensor
#define soap_write_turb1__SGSTensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__SGSTensor(soap, data), 0) || soap_put_turb1__SGSTensor(soap, data, "turb1:SGSTensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__SGSTensor
#define soap_PUT_turb1__SGSTensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__SGSTensor(soap, data), 0) || soap_put_turb1__SGSTensor(soap, data, "turb1:SGSTensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__SGSTensor
#define soap_PATCH_turb1__SGSTensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__SGSTensor(soap, data), 0) || soap_put_turb1__SGSTensor(soap, data, "turb1:SGSTensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__SGSTensor
#define soap_POST_send_turb1__SGSTensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__SGSTensor(soap, data), 0) || soap_put_turb1__SGSTensor(soap, data, "turb1:SGSTensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__SGSTensor * SOAP_FMAC4 soap_get_turb1__SGSTensor(struct soap*, struct turb1__SGSTensor *, const char*, const char*);

#ifndef soap_read_turb1__SGSTensor
#define soap_read_turb1__SGSTensor(soap, data) ( ((data) ? (soap_default_turb1__SGSTensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__SGSTensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__SGSTensor
#define soap_GET_turb1__SGSTensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__SGSTensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__SGSTensor
#define soap_POST_recv_turb1__SGSTensor(soap, data) ( soap_read_turb1__SGSTensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfSGSTensor_DEFINED
#define SOAP_TYPE_turb1__ArrayOfSGSTensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfSGSTensor(struct soap*, struct turb1__ArrayOfSGSTensor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfSGSTensor(struct soap*, const struct turb1__ArrayOfSGSTensor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfSGSTensor(struct soap*, const char*, int, const struct turb1__ArrayOfSGSTensor *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfSGSTensor * SOAP_FMAC4 soap_in_turb1__ArrayOfSGSTensor(struct soap*, const char*, struct turb1__ArrayOfSGSTensor *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfSGSTensor * SOAP_FMAC4 soap_new_turb1__ArrayOfSGSTensor(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfSGSTensor(struct soap*, const struct turb1__ArrayOfSGSTensor *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfSGSTensor
#define soap_write_turb1__ArrayOfSGSTensor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfSGSTensor(soap, data), 0) || soap_put_turb1__ArrayOfSGSTensor(soap, data, "turb1:ArrayOfSGSTensor", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfSGSTensor
#define soap_PUT_turb1__ArrayOfSGSTensor(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfSGSTensor(soap, data), 0) || soap_put_turb1__ArrayOfSGSTensor(soap, data, "turb1:ArrayOfSGSTensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfSGSTensor
#define soap_PATCH_turb1__ArrayOfSGSTensor(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfSGSTensor(soap, data), 0) || soap_put_turb1__ArrayOfSGSTensor(soap, data, "turb1:ArrayOfSGSTensor", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfSGSTensor
#define soap_POST_send_turb1__ArrayOfSGSTensor(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfSGSTensor(soap, data), 0) || soap_put_turb1__ArrayOfSGSTensor(soap, data, "turb1:ArrayOfSGSTensor", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfSGSTensor * SOAP_FMAC4 soap_get_turb1__ArrayOfSGSTensor(struct soap*, struct turb1__ArrayOfSGSTensor *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfSGSTensor
#define soap_read_turb1__ArrayOfSGSTensor(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfSGSTensor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfSGSTensor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfSGSTensor
#define soap_GET_turb1__ArrayOfSGSTensor(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfSGSTensor(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfSGSTensor
#define soap_POST_recv_turb1__ArrayOfSGSTensor(soap, data) ( soap_read_turb1__ArrayOfSGSTensor(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ThresholdInfo_DEFINED
#define SOAP_TYPE_turb1__ThresholdInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ThresholdInfo(struct soap*, struct turb1__ThresholdInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ThresholdInfo(struct soap*, const struct turb1__ThresholdInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ThresholdInfo(struct soap*, const char*, int, const struct turb1__ThresholdInfo *, const char*);
SOAP_FMAC3 struct turb1__ThresholdInfo * SOAP_FMAC4 soap_in_turb1__ThresholdInfo(struct soap*, const char*, struct turb1__ThresholdInfo *, const char*);

SOAP_FMAC3 struct turb1__ThresholdInfo * SOAP_FMAC4 soap_new_turb1__ThresholdInfo(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ThresholdInfo(struct soap*, const struct turb1__ThresholdInfo *, const char*, const char*);

#ifndef soap_write_turb1__ThresholdInfo
#define soap_write_turb1__ThresholdInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ThresholdInfo(soap, data), 0) || soap_put_turb1__ThresholdInfo(soap, data, "turb1:ThresholdInfo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ThresholdInfo
#define soap_PUT_turb1__ThresholdInfo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ThresholdInfo(soap, data), 0) || soap_put_turb1__ThresholdInfo(soap, data, "turb1:ThresholdInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ThresholdInfo
#define soap_PATCH_turb1__ThresholdInfo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ThresholdInfo(soap, data), 0) || soap_put_turb1__ThresholdInfo(soap, data, "turb1:ThresholdInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ThresholdInfo
#define soap_POST_send_turb1__ThresholdInfo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ThresholdInfo(soap, data), 0) || soap_put_turb1__ThresholdInfo(soap, data, "turb1:ThresholdInfo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ThresholdInfo * SOAP_FMAC4 soap_get_turb1__ThresholdInfo(struct soap*, struct turb1__ThresholdInfo *, const char*, const char*);

#ifndef soap_read_turb1__ThresholdInfo
#define soap_read_turb1__ThresholdInfo(soap, data) ( ((data) ? (soap_default_turb1__ThresholdInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ThresholdInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ThresholdInfo
#define soap_GET_turb1__ThresholdInfo(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ThresholdInfo(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ThresholdInfo
#define soap_POST_recv_turb1__ThresholdInfo(soap, data) ( soap_read_turb1__ThresholdInfo(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfThresholdInfo_DEFINED
#define SOAP_TYPE_turb1__ArrayOfThresholdInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfThresholdInfo(struct soap*, struct turb1__ArrayOfThresholdInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfThresholdInfo(struct soap*, const struct turb1__ArrayOfThresholdInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfThresholdInfo(struct soap*, const char*, int, const struct turb1__ArrayOfThresholdInfo *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfThresholdInfo * SOAP_FMAC4 soap_in_turb1__ArrayOfThresholdInfo(struct soap*, const char*, struct turb1__ArrayOfThresholdInfo *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfThresholdInfo * SOAP_FMAC4 soap_new_turb1__ArrayOfThresholdInfo(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfThresholdInfo(struct soap*, const struct turb1__ArrayOfThresholdInfo *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfThresholdInfo
#define soap_write_turb1__ArrayOfThresholdInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfThresholdInfo(soap, data), 0) || soap_put_turb1__ArrayOfThresholdInfo(soap, data, "turb1:ArrayOfThresholdInfo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfThresholdInfo
#define soap_PUT_turb1__ArrayOfThresholdInfo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfThresholdInfo(soap, data), 0) || soap_put_turb1__ArrayOfThresholdInfo(soap, data, "turb1:ArrayOfThresholdInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfThresholdInfo
#define soap_PATCH_turb1__ArrayOfThresholdInfo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfThresholdInfo(soap, data), 0) || soap_put_turb1__ArrayOfThresholdInfo(soap, data, "turb1:ArrayOfThresholdInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfThresholdInfo
#define soap_POST_send_turb1__ArrayOfThresholdInfo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfThresholdInfo(soap, data), 0) || soap_put_turb1__ArrayOfThresholdInfo(soap, data, "turb1:ArrayOfThresholdInfo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfThresholdInfo * SOAP_FMAC4 soap_get_turb1__ArrayOfThresholdInfo(struct soap*, struct turb1__ArrayOfThresholdInfo *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfThresholdInfo
#define soap_read_turb1__ArrayOfThresholdInfo(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfThresholdInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfThresholdInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfThresholdInfo
#define soap_GET_turb1__ArrayOfThresholdInfo(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfThresholdInfo(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfThresholdInfo
#define soap_POST_recv_turb1__ArrayOfThresholdInfo(soap, data) ( soap_read_turb1__ArrayOfThresholdInfo(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__PressureHessian_DEFINED
#define SOAP_TYPE_turb1__PressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__PressureHessian(struct soap*, struct turb1__PressureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__PressureHessian(struct soap*, const struct turb1__PressureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__PressureHessian(struct soap*, const char*, int, const struct turb1__PressureHessian *, const char*);
SOAP_FMAC3 struct turb1__PressureHessian * SOAP_FMAC4 soap_in_turb1__PressureHessian(struct soap*, const char*, struct turb1__PressureHessian *, const char*);

SOAP_FMAC3 struct turb1__PressureHessian * SOAP_FMAC4 soap_new_turb1__PressureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__PressureHessian(struct soap*, const struct turb1__PressureHessian *, const char*, const char*);

#ifndef soap_write_turb1__PressureHessian
#define soap_write_turb1__PressureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__PressureHessian(soap, data), 0) || soap_put_turb1__PressureHessian(soap, data, "turb1:PressureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__PressureHessian
#define soap_PUT_turb1__PressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__PressureHessian(soap, data), 0) || soap_put_turb1__PressureHessian(soap, data, "turb1:PressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__PressureHessian
#define soap_PATCH_turb1__PressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__PressureHessian(soap, data), 0) || soap_put_turb1__PressureHessian(soap, data, "turb1:PressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__PressureHessian
#define soap_POST_send_turb1__PressureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__PressureHessian(soap, data), 0) || soap_put_turb1__PressureHessian(soap, data, "turb1:PressureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__PressureHessian * SOAP_FMAC4 soap_get_turb1__PressureHessian(struct soap*, struct turb1__PressureHessian *, const char*, const char*);

#ifndef soap_read_turb1__PressureHessian
#define soap_read_turb1__PressureHessian(soap, data) ( ((data) ? (soap_default_turb1__PressureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__PressureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__PressureHessian
#define soap_GET_turb1__PressureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__PressureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__PressureHessian
#define soap_POST_recv_turb1__PressureHessian(soap, data) ( soap_read_turb1__PressureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPressureHessian_DEFINED
#define SOAP_TYPE_turb1__ArrayOfPressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfPressureHessian(struct soap*, struct turb1__ArrayOfPressureHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfPressureHessian(struct soap*, const struct turb1__ArrayOfPressureHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfPressureHessian(struct soap*, const char*, int, const struct turb1__ArrayOfPressureHessian *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPressureHessian * SOAP_FMAC4 soap_in_turb1__ArrayOfPressureHessian(struct soap*, const char*, struct turb1__ArrayOfPressureHessian *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfPressureHessian * SOAP_FMAC4 soap_new_turb1__ArrayOfPressureHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfPressureHessian(struct soap*, const struct turb1__ArrayOfPressureHessian *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfPressureHessian
#define soap_write_turb1__ArrayOfPressureHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfPressureHessian(soap, data), 0) || soap_put_turb1__ArrayOfPressureHessian(soap, data, "turb1:ArrayOfPressureHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfPressureHessian
#define soap_PUT_turb1__ArrayOfPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressureHessian(soap, data), 0) || soap_put_turb1__ArrayOfPressureHessian(soap, data, "turb1:ArrayOfPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfPressureHessian
#define soap_PATCH_turb1__ArrayOfPressureHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressureHessian(soap, data), 0) || soap_put_turb1__ArrayOfPressureHessian(soap, data, "turb1:ArrayOfPressureHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfPressureHessian
#define soap_POST_send_turb1__ArrayOfPressureHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressureHessian(soap, data), 0) || soap_put_turb1__ArrayOfPressureHessian(soap, data, "turb1:ArrayOfPressureHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfPressureHessian * SOAP_FMAC4 soap_get_turb1__ArrayOfPressureHessian(struct soap*, struct turb1__ArrayOfPressureHessian *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfPressureHessian
#define soap_read_turb1__ArrayOfPressureHessian(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfPressureHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfPressureHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfPressureHessian
#define soap_GET_turb1__ArrayOfPressureHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfPressureHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfPressureHessian
#define soap_POST_recv_turb1__ArrayOfPressureHessian(soap, data) ( soap_read_turb1__ArrayOfPressureHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__VelocityHessian_DEFINED
#define SOAP_TYPE_turb1__VelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__VelocityHessian(struct soap*, struct turb1__VelocityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__VelocityHessian(struct soap*, const struct turb1__VelocityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__VelocityHessian(struct soap*, const char*, int, const struct turb1__VelocityHessian *, const char*);
SOAP_FMAC3 struct turb1__VelocityHessian * SOAP_FMAC4 soap_in_turb1__VelocityHessian(struct soap*, const char*, struct turb1__VelocityHessian *, const char*);

SOAP_FMAC3 struct turb1__VelocityHessian * SOAP_FMAC4 soap_new_turb1__VelocityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__VelocityHessian(struct soap*, const struct turb1__VelocityHessian *, const char*, const char*);

#ifndef soap_write_turb1__VelocityHessian
#define soap_write_turb1__VelocityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__VelocityHessian(soap, data), 0) || soap_put_turb1__VelocityHessian(soap, data, "turb1:VelocityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__VelocityHessian
#define soap_PUT_turb1__VelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityHessian(soap, data), 0) || soap_put_turb1__VelocityHessian(soap, data, "turb1:VelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__VelocityHessian
#define soap_PATCH_turb1__VelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityHessian(soap, data), 0) || soap_put_turb1__VelocityHessian(soap, data, "turb1:VelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__VelocityHessian
#define soap_POST_send_turb1__VelocityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityHessian(soap, data), 0) || soap_put_turb1__VelocityHessian(soap, data, "turb1:VelocityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__VelocityHessian * SOAP_FMAC4 soap_get_turb1__VelocityHessian(struct soap*, struct turb1__VelocityHessian *, const char*, const char*);

#ifndef soap_read_turb1__VelocityHessian
#define soap_read_turb1__VelocityHessian(soap, data) ( ((data) ? (soap_default_turb1__VelocityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__VelocityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__VelocityHessian
#define soap_GET_turb1__VelocityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__VelocityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__VelocityHessian
#define soap_POST_recv_turb1__VelocityHessian(soap, data) ( soap_read_turb1__VelocityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVelocityHessian_DEFINED
#define SOAP_TYPE_turb1__ArrayOfVelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfVelocityHessian(struct soap*, struct turb1__ArrayOfVelocityHessian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfVelocityHessian(struct soap*, const struct turb1__ArrayOfVelocityHessian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfVelocityHessian(struct soap*, const char*, int, const struct turb1__ArrayOfVelocityHessian *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVelocityHessian * SOAP_FMAC4 soap_in_turb1__ArrayOfVelocityHessian(struct soap*, const char*, struct turb1__ArrayOfVelocityHessian *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfVelocityHessian * SOAP_FMAC4 soap_new_turb1__ArrayOfVelocityHessian(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfVelocityHessian(struct soap*, const struct turb1__ArrayOfVelocityHessian *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfVelocityHessian
#define soap_write_turb1__ArrayOfVelocityHessian(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfVelocityHessian(soap, data), 0) || soap_put_turb1__ArrayOfVelocityHessian(soap, data, "turb1:ArrayOfVelocityHessian", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfVelocityHessian
#define soap_PUT_turb1__ArrayOfVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityHessian(soap, data), 0) || soap_put_turb1__ArrayOfVelocityHessian(soap, data, "turb1:ArrayOfVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfVelocityHessian
#define soap_PATCH_turb1__ArrayOfVelocityHessian(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityHessian(soap, data), 0) || soap_put_turb1__ArrayOfVelocityHessian(soap, data, "turb1:ArrayOfVelocityHessian", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfVelocityHessian
#define soap_POST_send_turb1__ArrayOfVelocityHessian(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityHessian(soap, data), 0) || soap_put_turb1__ArrayOfVelocityHessian(soap, data, "turb1:ArrayOfVelocityHessian", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfVelocityHessian * SOAP_FMAC4 soap_get_turb1__ArrayOfVelocityHessian(struct soap*, struct turb1__ArrayOfVelocityHessian *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfVelocityHessian
#define soap_read_turb1__ArrayOfVelocityHessian(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfVelocityHessian(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfVelocityHessian(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfVelocityHessian
#define soap_GET_turb1__ArrayOfVelocityHessian(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfVelocityHessian(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfVelocityHessian
#define soap_POST_recv_turb1__ArrayOfVelocityHessian(soap, data) ( soap_read_turb1__ArrayOfVelocityHessian(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__VelocityGradient_DEFINED
#define SOAP_TYPE_turb1__VelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__VelocityGradient(struct soap*, struct turb1__VelocityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__VelocityGradient(struct soap*, const struct turb1__VelocityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__VelocityGradient(struct soap*, const char*, int, const struct turb1__VelocityGradient *, const char*);
SOAP_FMAC3 struct turb1__VelocityGradient * SOAP_FMAC4 soap_in_turb1__VelocityGradient(struct soap*, const char*, struct turb1__VelocityGradient *, const char*);

SOAP_FMAC3 struct turb1__VelocityGradient * SOAP_FMAC4 soap_new_turb1__VelocityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__VelocityGradient(struct soap*, const struct turb1__VelocityGradient *, const char*, const char*);

#ifndef soap_write_turb1__VelocityGradient
#define soap_write_turb1__VelocityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__VelocityGradient(soap, data), 0) || soap_put_turb1__VelocityGradient(soap, data, "turb1:VelocityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__VelocityGradient
#define soap_PUT_turb1__VelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityGradient(soap, data), 0) || soap_put_turb1__VelocityGradient(soap, data, "turb1:VelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__VelocityGradient
#define soap_PATCH_turb1__VelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityGradient(soap, data), 0) || soap_put_turb1__VelocityGradient(soap, data, "turb1:VelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__VelocityGradient
#define soap_POST_send_turb1__VelocityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__VelocityGradient(soap, data), 0) || soap_put_turb1__VelocityGradient(soap, data, "turb1:VelocityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__VelocityGradient * SOAP_FMAC4 soap_get_turb1__VelocityGradient(struct soap*, struct turb1__VelocityGradient *, const char*, const char*);

#ifndef soap_read_turb1__VelocityGradient
#define soap_read_turb1__VelocityGradient(soap, data) ( ((data) ? (soap_default_turb1__VelocityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__VelocityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__VelocityGradient
#define soap_GET_turb1__VelocityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__VelocityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__VelocityGradient
#define soap_POST_recv_turb1__VelocityGradient(soap, data) ( soap_read_turb1__VelocityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVelocityGradient_DEFINED
#define SOAP_TYPE_turb1__ArrayOfVelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfVelocityGradient(struct soap*, struct turb1__ArrayOfVelocityGradient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfVelocityGradient(struct soap*, const struct turb1__ArrayOfVelocityGradient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfVelocityGradient(struct soap*, const char*, int, const struct turb1__ArrayOfVelocityGradient *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVelocityGradient * SOAP_FMAC4 soap_in_turb1__ArrayOfVelocityGradient(struct soap*, const char*, struct turb1__ArrayOfVelocityGradient *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfVelocityGradient * SOAP_FMAC4 soap_new_turb1__ArrayOfVelocityGradient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfVelocityGradient(struct soap*, const struct turb1__ArrayOfVelocityGradient *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfVelocityGradient
#define soap_write_turb1__ArrayOfVelocityGradient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfVelocityGradient(soap, data), 0) || soap_put_turb1__ArrayOfVelocityGradient(soap, data, "turb1:ArrayOfVelocityGradient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfVelocityGradient
#define soap_PUT_turb1__ArrayOfVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityGradient(soap, data), 0) || soap_put_turb1__ArrayOfVelocityGradient(soap, data, "turb1:ArrayOfVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfVelocityGradient
#define soap_PATCH_turb1__ArrayOfVelocityGradient(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityGradient(soap, data), 0) || soap_put_turb1__ArrayOfVelocityGradient(soap, data, "turb1:ArrayOfVelocityGradient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfVelocityGradient
#define soap_POST_send_turb1__ArrayOfVelocityGradient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVelocityGradient(soap, data), 0) || soap_put_turb1__ArrayOfVelocityGradient(soap, data, "turb1:ArrayOfVelocityGradient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfVelocityGradient * SOAP_FMAC4 soap_get_turb1__ArrayOfVelocityGradient(struct soap*, struct turb1__ArrayOfVelocityGradient *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfVelocityGradient
#define soap_read_turb1__ArrayOfVelocityGradient(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfVelocityGradient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfVelocityGradient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfVelocityGradient
#define soap_GET_turb1__ArrayOfVelocityGradient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfVelocityGradient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfVelocityGradient
#define soap_POST_recv_turb1__ArrayOfVelocityGradient(soap, data) ( soap_read_turb1__ArrayOfVelocityGradient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__Vector3P_DEFINED
#define SOAP_TYPE_turb1__Vector3P_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__Vector3P(struct soap*, struct turb1__Vector3P *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__Vector3P(struct soap*, const struct turb1__Vector3P *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__Vector3P(struct soap*, const char*, int, const struct turb1__Vector3P *, const char*);
SOAP_FMAC3 struct turb1__Vector3P * SOAP_FMAC4 soap_in_turb1__Vector3P(struct soap*, const char*, struct turb1__Vector3P *, const char*);

SOAP_FMAC3 struct turb1__Vector3P * SOAP_FMAC4 soap_new_turb1__Vector3P(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__Vector3P(struct soap*, const struct turb1__Vector3P *, const char*, const char*);

#ifndef soap_write_turb1__Vector3P
#define soap_write_turb1__Vector3P(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__Vector3P(soap, data), 0) || soap_put_turb1__Vector3P(soap, data, "turb1:Vector3P", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__Vector3P
#define soap_PUT_turb1__Vector3P(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3P(soap, data), 0) || soap_put_turb1__Vector3P(soap, data, "turb1:Vector3P", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__Vector3P
#define soap_PATCH_turb1__Vector3P(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3P(soap, data), 0) || soap_put_turb1__Vector3P(soap, data, "turb1:Vector3P", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__Vector3P
#define soap_POST_send_turb1__Vector3P(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3P(soap, data), 0) || soap_put_turb1__Vector3P(soap, data, "turb1:Vector3P", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__Vector3P * SOAP_FMAC4 soap_get_turb1__Vector3P(struct soap*, struct turb1__Vector3P *, const char*, const char*);

#ifndef soap_read_turb1__Vector3P
#define soap_read_turb1__Vector3P(soap, data) ( ((data) ? (soap_default_turb1__Vector3P(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__Vector3P(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__Vector3P
#define soap_GET_turb1__Vector3P(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__Vector3P(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__Vector3P
#define soap_POST_recv_turb1__Vector3P(soap, data) ( soap_read_turb1__Vector3P(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVector3P_DEFINED
#define SOAP_TYPE_turb1__ArrayOfVector3P_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfVector3P(struct soap*, struct turb1__ArrayOfVector3P *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfVector3P(struct soap*, const struct turb1__ArrayOfVector3P *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfVector3P(struct soap*, const char*, int, const struct turb1__ArrayOfVector3P *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVector3P * SOAP_FMAC4 soap_in_turb1__ArrayOfVector3P(struct soap*, const char*, struct turb1__ArrayOfVector3P *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfVector3P * SOAP_FMAC4 soap_new_turb1__ArrayOfVector3P(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfVector3P(struct soap*, const struct turb1__ArrayOfVector3P *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfVector3P
#define soap_write_turb1__ArrayOfVector3P(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfVector3P(soap, data), 0) || soap_put_turb1__ArrayOfVector3P(soap, data, "turb1:ArrayOfVector3P", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfVector3P
#define soap_PUT_turb1__ArrayOfVector3P(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3P(soap, data), 0) || soap_put_turb1__ArrayOfVector3P(soap, data, "turb1:ArrayOfVector3P", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfVector3P
#define soap_PATCH_turb1__ArrayOfVector3P(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3P(soap, data), 0) || soap_put_turb1__ArrayOfVector3P(soap, data, "turb1:ArrayOfVector3P", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfVector3P
#define soap_POST_send_turb1__ArrayOfVector3P(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3P(soap, data), 0) || soap_put_turb1__ArrayOfVector3P(soap, data, "turb1:ArrayOfVector3P", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfVector3P * SOAP_FMAC4 soap_get_turb1__ArrayOfVector3P(struct soap*, struct turb1__ArrayOfVector3P *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfVector3P
#define soap_read_turb1__ArrayOfVector3P(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfVector3P(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfVector3P(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfVector3P
#define soap_GET_turb1__ArrayOfVector3P(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfVector3P(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfVector3P
#define soap_POST_recv_turb1__ArrayOfVector3P(soap, data) ( soap_read_turb1__ArrayOfVector3P(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__Pressure_DEFINED
#define SOAP_TYPE_turb1__Pressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__Pressure(struct soap*, struct turb1__Pressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__Pressure(struct soap*, const struct turb1__Pressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__Pressure(struct soap*, const char*, int, const struct turb1__Pressure *, const char*);
SOAP_FMAC3 struct turb1__Pressure * SOAP_FMAC4 soap_in_turb1__Pressure(struct soap*, const char*, struct turb1__Pressure *, const char*);

SOAP_FMAC3 struct turb1__Pressure * SOAP_FMAC4 soap_new_turb1__Pressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__Pressure(struct soap*, const struct turb1__Pressure *, const char*, const char*);

#ifndef soap_write_turb1__Pressure
#define soap_write_turb1__Pressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__Pressure(soap, data), 0) || soap_put_turb1__Pressure(soap, data, "turb1:Pressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__Pressure
#define soap_PUT_turb1__Pressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Pressure(soap, data), 0) || soap_put_turb1__Pressure(soap, data, "turb1:Pressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__Pressure
#define soap_PATCH_turb1__Pressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Pressure(soap, data), 0) || soap_put_turb1__Pressure(soap, data, "turb1:Pressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__Pressure
#define soap_POST_send_turb1__Pressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Pressure(soap, data), 0) || soap_put_turb1__Pressure(soap, data, "turb1:Pressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__Pressure * SOAP_FMAC4 soap_get_turb1__Pressure(struct soap*, struct turb1__Pressure *, const char*, const char*);

#ifndef soap_read_turb1__Pressure
#define soap_read_turb1__Pressure(soap, data) ( ((data) ? (soap_default_turb1__Pressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__Pressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__Pressure
#define soap_GET_turb1__Pressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__Pressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__Pressure
#define soap_POST_recv_turb1__Pressure(soap, data) ( soap_read_turb1__Pressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPressure_DEFINED
#define SOAP_TYPE_turb1__ArrayOfPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfPressure(struct soap*, struct turb1__ArrayOfPressure *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfPressure(struct soap*, const struct turb1__ArrayOfPressure *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfPressure(struct soap*, const char*, int, const struct turb1__ArrayOfPressure *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPressure * SOAP_FMAC4 soap_in_turb1__ArrayOfPressure(struct soap*, const char*, struct turb1__ArrayOfPressure *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfPressure * SOAP_FMAC4 soap_new_turb1__ArrayOfPressure(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfPressure(struct soap*, const struct turb1__ArrayOfPressure *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfPressure
#define soap_write_turb1__ArrayOfPressure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfPressure(soap, data), 0) || soap_put_turb1__ArrayOfPressure(soap, data, "turb1:ArrayOfPressure", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfPressure
#define soap_PUT_turb1__ArrayOfPressure(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressure(soap, data), 0) || soap_put_turb1__ArrayOfPressure(soap, data, "turb1:ArrayOfPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfPressure
#define soap_PATCH_turb1__ArrayOfPressure(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressure(soap, data), 0) || soap_put_turb1__ArrayOfPressure(soap, data, "turb1:ArrayOfPressure", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfPressure
#define soap_POST_send_turb1__ArrayOfPressure(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPressure(soap, data), 0) || soap_put_turb1__ArrayOfPressure(soap, data, "turb1:ArrayOfPressure", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfPressure * SOAP_FMAC4 soap_get_turb1__ArrayOfPressure(struct soap*, struct turb1__ArrayOfPressure *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfPressure
#define soap_read_turb1__ArrayOfPressure(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfPressure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfPressure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfPressure
#define soap_GET_turb1__ArrayOfPressure(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfPressure(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfPressure
#define soap_POST_recv_turb1__ArrayOfPressure(soap, data) ( soap_read_turb1__ArrayOfPressure(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__Vector3_DEFINED
#define SOAP_TYPE_turb1__Vector3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__Vector3(struct soap*, struct turb1__Vector3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__Vector3(struct soap*, const struct turb1__Vector3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__Vector3(struct soap*, const char*, int, const struct turb1__Vector3 *, const char*);
SOAP_FMAC3 struct turb1__Vector3 * SOAP_FMAC4 soap_in_turb1__Vector3(struct soap*, const char*, struct turb1__Vector3 *, const char*);

SOAP_FMAC3 struct turb1__Vector3 * SOAP_FMAC4 soap_new_turb1__Vector3(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__Vector3(struct soap*, const struct turb1__Vector3 *, const char*, const char*);

#ifndef soap_write_turb1__Vector3
#define soap_write_turb1__Vector3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__Vector3(soap, data), 0) || soap_put_turb1__Vector3(soap, data, "turb1:Vector3", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__Vector3
#define soap_PUT_turb1__Vector3(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3(soap, data), 0) || soap_put_turb1__Vector3(soap, data, "turb1:Vector3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__Vector3
#define soap_PATCH_turb1__Vector3(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3(soap, data), 0) || soap_put_turb1__Vector3(soap, data, "turb1:Vector3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__Vector3
#define soap_POST_send_turb1__Vector3(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Vector3(soap, data), 0) || soap_put_turb1__Vector3(soap, data, "turb1:Vector3", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__Vector3 * SOAP_FMAC4 soap_get_turb1__Vector3(struct soap*, struct turb1__Vector3 *, const char*, const char*);

#ifndef soap_read_turb1__Vector3
#define soap_read_turb1__Vector3(soap, data) ( ((data) ? (soap_default_turb1__Vector3(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__Vector3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__Vector3
#define soap_GET_turb1__Vector3(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__Vector3(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__Vector3
#define soap_POST_recv_turb1__Vector3(soap, data) ( soap_read_turb1__Vector3(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVector3_DEFINED
#define SOAP_TYPE_turb1__ArrayOfVector3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfVector3(struct soap*, struct turb1__ArrayOfVector3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfVector3(struct soap*, const struct turb1__ArrayOfVector3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfVector3(struct soap*, const char*, int, const struct turb1__ArrayOfVector3 *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVector3 * SOAP_FMAC4 soap_in_turb1__ArrayOfVector3(struct soap*, const char*, struct turb1__ArrayOfVector3 *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfVector3 * SOAP_FMAC4 soap_new_turb1__ArrayOfVector3(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfVector3(struct soap*, const struct turb1__ArrayOfVector3 *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfVector3
#define soap_write_turb1__ArrayOfVector3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfVector3(soap, data), 0) || soap_put_turb1__ArrayOfVector3(soap, data, "turb1:ArrayOfVector3", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfVector3
#define soap_PUT_turb1__ArrayOfVector3(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3(soap, data), 0) || soap_put_turb1__ArrayOfVector3(soap, data, "turb1:ArrayOfVector3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfVector3
#define soap_PATCH_turb1__ArrayOfVector3(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3(soap, data), 0) || soap_put_turb1__ArrayOfVector3(soap, data, "turb1:ArrayOfVector3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfVector3
#define soap_POST_send_turb1__ArrayOfVector3(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfVector3(soap, data), 0) || soap_put_turb1__ArrayOfVector3(soap, data, "turb1:ArrayOfVector3", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfVector3 * SOAP_FMAC4 soap_get_turb1__ArrayOfVector3(struct soap*, struct turb1__ArrayOfVector3 *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfVector3
#define soap_read_turb1__ArrayOfVector3(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfVector3(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfVector3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfVector3
#define soap_GET_turb1__ArrayOfVector3(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfVector3(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfVector3
#define soap_POST_recv_turb1__ArrayOfVector3(soap, data) ( soap_read_turb1__ArrayOfVector3(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__Point3_DEFINED
#define SOAP_TYPE_turb1__Point3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__Point3(struct soap*, struct turb1__Point3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__Point3(struct soap*, const struct turb1__Point3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__Point3(struct soap*, const char*, int, const struct turb1__Point3 *, const char*);
SOAP_FMAC3 struct turb1__Point3 * SOAP_FMAC4 soap_in_turb1__Point3(struct soap*, const char*, struct turb1__Point3 *, const char*);

SOAP_FMAC3 struct turb1__Point3 * SOAP_FMAC4 soap_new_turb1__Point3(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__Point3(struct soap*, const struct turb1__Point3 *, const char*, const char*);

#ifndef soap_write_turb1__Point3
#define soap_write_turb1__Point3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__Point3(soap, data), 0) || soap_put_turb1__Point3(soap, data, "turb1:Point3", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__Point3
#define soap_PUT_turb1__Point3(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Point3(soap, data), 0) || soap_put_turb1__Point3(soap, data, "turb1:Point3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__Point3
#define soap_PATCH_turb1__Point3(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Point3(soap, data), 0) || soap_put_turb1__Point3(soap, data, "turb1:Point3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__Point3
#define soap_POST_send_turb1__Point3(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__Point3(soap, data), 0) || soap_put_turb1__Point3(soap, data, "turb1:Point3", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__Point3 * SOAP_FMAC4 soap_get_turb1__Point3(struct soap*, struct turb1__Point3 *, const char*, const char*);

#ifndef soap_read_turb1__Point3
#define soap_read_turb1__Point3(soap, data) ( ((data) ? (soap_default_turb1__Point3(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__Point3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__Point3
#define soap_GET_turb1__Point3(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__Point3(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__Point3
#define soap_POST_recv_turb1__Point3(soap, data) ( soap_read_turb1__Point3(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPoint3_DEFINED
#define SOAP_TYPE_turb1__ArrayOfPoint3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_turb1__ArrayOfPoint3(struct soap*, struct turb1__ArrayOfPoint3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_turb1__ArrayOfPoint3(struct soap*, const struct turb1__ArrayOfPoint3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_turb1__ArrayOfPoint3(struct soap*, const char*, int, const struct turb1__ArrayOfPoint3 *, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPoint3 * SOAP_FMAC4 soap_in_turb1__ArrayOfPoint3(struct soap*, const char*, struct turb1__ArrayOfPoint3 *, const char*);

SOAP_FMAC3 struct turb1__ArrayOfPoint3 * SOAP_FMAC4 soap_new_turb1__ArrayOfPoint3(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_turb1__ArrayOfPoint3(struct soap*, const struct turb1__ArrayOfPoint3 *, const char*, const char*);

#ifndef soap_write_turb1__ArrayOfPoint3
#define soap_write_turb1__ArrayOfPoint3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_turb1__ArrayOfPoint3(soap, data), 0) || soap_put_turb1__ArrayOfPoint3(soap, data, "turb1:ArrayOfPoint3", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_turb1__ArrayOfPoint3
#define soap_PUT_turb1__ArrayOfPoint3(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPoint3(soap, data), 0) || soap_put_turb1__ArrayOfPoint3(soap, data, "turb1:ArrayOfPoint3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_turb1__ArrayOfPoint3
#define soap_PATCH_turb1__ArrayOfPoint3(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPoint3(soap, data), 0) || soap_put_turb1__ArrayOfPoint3(soap, data, "turb1:ArrayOfPoint3", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_turb1__ArrayOfPoint3
#define soap_POST_send_turb1__ArrayOfPoint3(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_turb1__ArrayOfPoint3(soap, data), 0) || soap_put_turb1__ArrayOfPoint3(soap, data, "turb1:ArrayOfPoint3", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct turb1__ArrayOfPoint3 * SOAP_FMAC4 soap_get_turb1__ArrayOfPoint3(struct soap*, struct turb1__ArrayOfPoint3 *, const char*, const char*);

#ifndef soap_read_turb1__ArrayOfPoint3
#define soap_read_turb1__ArrayOfPoint3(soap, data) ( ((data) ? (soap_default_turb1__ArrayOfPoint3(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_turb1__ArrayOfPoint3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_turb1__ArrayOfPoint3
#define soap_GET_turb1__ArrayOfPoint3(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_turb1__ArrayOfPoint3(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_turb1__ArrayOfPoint3
#define soap_POST_recv_turb1__ArrayOfPoint3(soap, data) ( soap_read_turb1__ArrayOfPoint3(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__base64Binary_DEFINED
#define SOAP_TYPE_xsd__base64Binary_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__base64Binary(struct soap*, struct xsd__base64Binary *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__base64Binary(struct soap*, const struct xsd__base64Binary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const struct xsd__base64Binary *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__base64Binary2s(struct soap*, struct xsd__base64Binary);
SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, struct xsd__base64Binary *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__base64Binary(struct soap*, const char*, struct xsd__base64Binary *);

SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_new_xsd__base64Binary(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__base64Binary(struct soap*, const struct xsd__base64Binary *, const char*, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__base64Binary
#define soap_PUT_xsd__base64Binary(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__base64Binary
#define soap_PATCH_xsd__base64Binary(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__base64Binary
#define soap_POST_send_xsd__base64Binary(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, struct xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( ((data) ? (soap_default_xsd__base64Binary(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__base64Binary
#define soap_GET_xsd__base64Binary(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__base64Binary(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__base64Binary
#define soap_POST_recv_xsd__base64Binary(soap, data) ( soap_read_xsd__base64Binary(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetThreshold_USCOREPythonResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetThreshold_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetThreshold_USCOREPythonResponse(struct soap*, struct _turb1__GetThreshold_USCOREPythonResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetThreshold_USCOREPythonResponse(struct soap*, const char *, int, struct _turb1__GetThreshold_USCOREPythonResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPythonResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetThreshold_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetThreshold_USCOREPythonResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetThreshold_USCOREPythonResponse(struct soap*, struct _turb1__GetThreshold_USCOREPythonResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPythonResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetThreshold_USCOREPythonResponse(struct soap*, struct _turb1__GetThreshold_USCOREPythonResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetThreshold_USCOREPython_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetThreshold_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetThreshold_USCOREPython(struct soap*, struct _turb1__GetThreshold_USCOREPython *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetThreshold_USCOREPython(struct soap*, const char *, int, struct _turb1__GetThreshold_USCOREPython *const*, const char *);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPython ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetThreshold_USCOREPython(struct soap*, const char*, struct _turb1__GetThreshold_USCOREPython **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetThreshold_USCOREPython(struct soap*, struct _turb1__GetThreshold_USCOREPython *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold_USCOREPython ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetThreshold_USCOREPython(struct soap*, struct _turb1__GetThreshold_USCOREPython **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPosition_USCOREPythonResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPosition_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPosition_USCOREPythonResponse(struct soap*, struct _turb1__GetPosition_USCOREPythonResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPosition_USCOREPythonResponse(struct soap*, const char *, int, struct _turb1__GetPosition_USCOREPythonResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPythonResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPosition_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetPosition_USCOREPythonResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPosition_USCOREPythonResponse(struct soap*, struct _turb1__GetPosition_USCOREPythonResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPythonResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPosition_USCOREPythonResponse(struct soap*, struct _turb1__GetPosition_USCOREPythonResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPosition_USCOREPython_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPosition_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPosition_USCOREPython(struct soap*, struct _turb1__GetPosition_USCOREPython *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPosition_USCOREPython(struct soap*, const char *, int, struct _turb1__GetPosition_USCOREPython *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPython ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPosition_USCOREPython(struct soap*, const char*, struct _turb1__GetPosition_USCOREPython **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPosition_USCOREPython(struct soap*, struct _turb1__GetPosition_USCOREPython *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPosition_USCOREPython ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPosition_USCOREPython(struct soap*, struct _turb1__GetPosition_USCOREPython **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetFilter_USCOREPythonResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetFilter_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetFilter_USCOREPythonResponse(struct soap*, struct _turb1__GetFilter_USCOREPythonResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetFilter_USCOREPythonResponse(struct soap*, const char *, int, struct _turb1__GetFilter_USCOREPythonResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPythonResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetFilter_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetFilter_USCOREPythonResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetFilter_USCOREPythonResponse(struct soap*, struct _turb1__GetFilter_USCOREPythonResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPythonResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetFilter_USCOREPythonResponse(struct soap*, struct _turb1__GetFilter_USCOREPythonResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetFilter_USCOREPython_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetFilter_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetFilter_USCOREPython(struct soap*, struct _turb1__GetFilter_USCOREPython *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetFilter_USCOREPython(struct soap*, const char *, int, struct _turb1__GetFilter_USCOREPython *const*, const char *);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPython ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetFilter_USCOREPython(struct soap*, const char*, struct _turb1__GetFilter_USCOREPython **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetFilter_USCOREPython(struct soap*, struct _turb1__GetFilter_USCOREPython *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetFilter_USCOREPython ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetFilter_USCOREPython(struct soap*, struct _turb1__GetFilter_USCOREPython **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetData_USCOREPythonResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetData_USCOREPythonResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetData_USCOREPythonResponse(struct soap*, struct _turb1__GetData_USCOREPythonResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetData_USCOREPythonResponse(struct soap*, const char *, int, struct _turb1__GetData_USCOREPythonResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetData_USCOREPythonResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetData_USCOREPythonResponse(struct soap*, const char*, struct _turb1__GetData_USCOREPythonResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetData_USCOREPythonResponse(struct soap*, struct _turb1__GetData_USCOREPythonResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetData_USCOREPythonResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetData_USCOREPythonResponse(struct soap*, struct _turb1__GetData_USCOREPythonResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetData_USCOREPython_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetData_USCOREPython_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetData_USCOREPython(struct soap*, struct _turb1__GetData_USCOREPython *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetData_USCOREPython(struct soap*, const char *, int, struct _turb1__GetData_USCOREPython *const*, const char *);
SOAP_FMAC3 struct _turb1__GetData_USCOREPython ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetData_USCOREPython(struct soap*, const char*, struct _turb1__GetData_USCOREPython **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetData_USCOREPython(struct soap*, struct _turb1__GetData_USCOREPython *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetData_USCOREPython ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetData_USCOREPython(struct soap*, struct _turb1__GetData_USCOREPython **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetAnyCutoutWebResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetAnyCutoutWebResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetAnyCutoutWebResponse(struct soap*, const char *, int, struct _turb1__GetAnyCutoutWebResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWebResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetAnyCutoutWebResponse(struct soap*, const char*, struct _turb1__GetAnyCutoutWebResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWebResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetAnyCutoutWebResponse(struct soap*, struct _turb1__GetAnyCutoutWebResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetAnyCutoutWeb_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetAnyCutoutWeb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetAnyCutoutWeb(struct soap*, const char *, int, struct _turb1__GetAnyCutoutWeb *const*, const char *);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWeb ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetAnyCutoutWeb(struct soap*, const char*, struct _turb1__GetAnyCutoutWeb **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetAnyCutoutWeb ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetAnyCutoutWeb(struct soap*, struct _turb1__GetAnyCutoutWeb **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawTemperatureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawTemperatureResponse(struct soap*, const char *, int, struct _turb1__GetRawTemperatureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawTemperatureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawTemperatureResponse(struct soap*, const char*, struct _turb1__GetRawTemperatureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawTemperatureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawTemperatureResponse(struct soap*, struct _turb1__GetRawTemperatureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawTemperature_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawTemperature(struct soap*, const char *, int, struct _turb1__GetRawTemperature *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawTemperature ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawTemperature(struct soap*, const char*, struct _turb1__GetRawTemperature **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawTemperature ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawTemperature(struct soap*, struct _turb1__GetRawTemperature **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawDensityResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawDensityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawDensityResponse(struct soap*, const char *, int, struct _turb1__GetRawDensityResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawDensityResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawDensityResponse(struct soap*, const char*, struct _turb1__GetRawDensityResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawDensityResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawDensity_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawDensity(struct soap*, const char *, int, struct _turb1__GetRawDensity *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawDensity ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawDensity(struct soap*, const char*, struct _turb1__GetRawDensity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawDensity ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawPressureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawPressureResponse(struct soap*, const char *, int, struct _turb1__GetRawPressureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawPressureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawPressureResponse(struct soap*, const char*, struct _turb1__GetRawPressureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawPressureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawPressure_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawPressure(struct soap*, const char *, int, struct _turb1__GetRawPressure *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawPressure ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawPressure(struct soap*, const char*, struct _turb1__GetRawPressure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawPressure ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawVectorPotentialResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawVectorPotentialResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawVectorPotentialResponse(struct soap*, const char *, int, struct _turb1__GetRawVectorPotentialResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawVectorPotentialResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawVectorPotentialResponse(struct soap*, const char*, struct _turb1__GetRawVectorPotentialResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawVectorPotentialResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawVectorPotential_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawVectorPotential(struct soap*, const char *, int, struct _turb1__GetRawVectorPotential *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawVectorPotential ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawVectorPotential(struct soap*, const char*, struct _turb1__GetRawVectorPotential **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawVectorPotential ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawMagneticFieldResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawMagneticFieldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawMagneticFieldResponse(struct soap*, const char *, int, struct _turb1__GetRawMagneticFieldResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawMagneticFieldResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawMagneticFieldResponse(struct soap*, const char*, struct _turb1__GetRawMagneticFieldResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawMagneticFieldResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawMagneticField_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawMagneticField(struct soap*, const char *, int, struct _turb1__GetRawMagneticField *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawMagneticField ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawMagneticField(struct soap*, const char*, struct _turb1__GetRawMagneticField **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawMagneticField ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawVelocityResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawVelocityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawVelocityResponse(struct soap*, const char *, int, struct _turb1__GetRawVelocityResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawVelocityResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawVelocityResponse(struct soap*, const char*, struct _turb1__GetRawVelocityResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawVelocityResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetRawVelocity_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetRawVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetRawVelocity(struct soap*, const char *, int, struct _turb1__GetRawVelocity *const*, const char *);
SOAP_FMAC3 struct _turb1__GetRawVelocity ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetRawVelocity(struct soap*, const char*, struct _turb1__GetRawVelocity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetRawVelocity ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityBatchResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityBatchResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityBatchResponse(struct soap*, const char *, int, struct _turb1__GetVelocityBatchResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityBatchResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityBatchResponse(struct soap*, const char*, struct _turb1__GetVelocityBatchResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityBatchResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityBatch_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityBatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityBatch(struct soap*, const char *, int, struct _turb1__GetVelocityBatch *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityBatch ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityBatch(struct soap*, const char*, struct _turb1__GetVelocityBatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityBatch ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetLaplacianOfGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetLaplacianOfGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetLaplacianOfGradientResponse(struct soap*, const char *, int, struct _turb1__GetLaplacianOfGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetLaplacianOfGradientResponse(struct soap*, const char*, struct _turb1__GetLaplacianOfGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetLaplacianOfGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetLaplacianOfGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetLaplacianOfGradient(struct soap*, const char *, int, struct _turb1__GetLaplacianOfGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetLaplacianOfGradient(struct soap*, const char*, struct _turb1__GetLaplacianOfGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetLaplacianOfGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterGradientResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterGradientResponse(struct soap*, const char*, struct _turb1__GetBoxFilterGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterGradient(struct soap*, const char *, int, struct _turb1__GetBoxFilterGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterGradient(struct soap*, const char*, struct _turb1__GetBoxFilterGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSscalarResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSscalarResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSscalarResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSscalarResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalarResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSscalarResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSscalarResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalarResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSscalarResponse(struct soap*, struct _turb1__GetBoxFilterSGSscalarResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSscalar_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSscalar_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSscalar(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSscalar *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalar ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSscalar(struct soap*, const char*, struct _turb1__GetBoxFilterSGSscalar **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSscalar ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSscalar(struct soap*, struct _turb1__GetBoxFilterSGSscalar **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSvectorResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSvectorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSvectorResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSvectorResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvectorResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSvectorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSvectorResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvectorResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSvectorResponse(struct soap*, struct _turb1__GetBoxFilterSGSvectorResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSvector_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSvector_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSvector(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSvector *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvector ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSvector(struct soap*, const char*, struct _turb1__GetBoxFilterSGSvector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSvector ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSvector(struct soap*, struct _turb1__GetBoxFilterSGSvector **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGStensorResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGStensorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGStensorResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGStensorResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensorResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGStensorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGStensorResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensorResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGStensorResponse(struct soap*, struct _turb1__GetBoxFilterSGStensorResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGStensor_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGStensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGStensor(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGStensor *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensor ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGStensor(struct soap*, const char*, struct _turb1__GetBoxFilterSGStensor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGStensor ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGStensor(struct soap*, struct _turb1__GetBoxFilterSGStensor **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSsymtensorResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensorResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSsymtensorResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensorResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSsymtensorResponse(struct soap*, struct _turb1__GetBoxFilterSGSsymtensorResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSsymtensor_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSsymtensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSsymtensor(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSsymtensor *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensor ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSsymtensor(struct soap*, const char*, struct _turb1__GetBoxFilterSGSsymtensor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSsymtensor ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSsymtensor(struct soap*, struct _turb1__GetBoxFilterSGSsymtensor **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGSResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGSResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGSResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGSResponse(struct soap*, const char*, struct _turb1__GetBoxFilterSGSResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGSResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGS_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterSGS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterSGS(struct soap*, const char *, int, struct _turb1__GetBoxFilterSGS *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGS ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterSGS(struct soap*, const char*, struct _turb1__GetBoxFilterSGS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterSGS ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilterResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilterResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilterResponse(struct soap*, const char *, int, struct _turb1__GetBoxFilterResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilterResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilterResponse(struct soap*, const char*, struct _turb1__GetBoxFilterResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilterResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetBoxFilter_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetBoxFilter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetBoxFilter(struct soap*, const char *, int, struct _turb1__GetBoxFilter *const*, const char *);
SOAP_FMAC3 struct _turb1__GetBoxFilter ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetBoxFilter(struct soap*, const char*, struct _turb1__GetBoxFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetBoxFilter ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetInvariantResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetInvariantResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetInvariantResponse(struct soap*, const char *, int, struct _turb1__GetInvariantResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetInvariantResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetInvariantResponse(struct soap*, const char*, struct _turb1__GetInvariantResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetInvariantResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetInvariantResponse(struct soap*, struct _turb1__GetInvariantResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetInvariant_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetInvariant_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetInvariant(struct soap*, const char *, int, struct _turb1__GetInvariant *const*, const char *);
SOAP_FMAC3 struct _turb1__GetInvariant ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetInvariant(struct soap*, const char*, struct _turb1__GetInvariant **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetInvariant ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetInvariant(struct soap*, struct _turb1__GetInvariant **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetForceResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetForceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetForceResponse(struct soap*, const char *, int, struct _turb1__GetForceResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetForceResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetForceResponse(struct soap*, const char*, struct _turb1__GetForceResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetForceResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetForce_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetForce_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetForce(struct soap*, struct _turb1__GetForce *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetForce(struct soap*, const char *, int, struct _turb1__GetForce *const*, const char *);
SOAP_FMAC3 struct _turb1__GetForce ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetForce(struct soap*, const char*, struct _turb1__GetForce **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetForce(struct soap*, struct _turb1__GetForce *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetForce ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetForce(struct soap*, struct _turb1__GetForce **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetThresholdResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetThresholdResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetThresholdResponse(struct soap*, const char *, int, struct _turb1__GetThresholdResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetThresholdResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetThresholdResponse(struct soap*, const char*, struct _turb1__GetThresholdResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetThresholdResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetThreshold_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetThreshold_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetThreshold(struct soap*, const char *, int, struct _turb1__GetThreshold *const*, const char *);
SOAP_FMAC3 struct _turb1__GetThreshold ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetThreshold(struct soap*, const char*, struct _turb1__GetThreshold **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetThreshold ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPositionResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPositionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPositionResponse(struct soap*, const char *, int, struct _turb1__GetPositionResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPositionResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPositionResponse(struct soap*, const char*, struct _turb1__GetPositionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPositionResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPosition_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPosition(struct soap*, struct _turb1__GetPosition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPosition(struct soap*, const char *, int, struct _turb1__GetPosition *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPosition ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPosition(struct soap*, const char*, struct _turb1__GetPosition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPosition(struct soap*, struct _turb1__GetPosition *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPosition ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPosition(struct soap*, struct _turb1__GetPosition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialLaplacianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialLaplacianResponse(struct soap*, const char *, int, struct _turb1__GetVectorPotentialLaplacianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialLaplacianResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialLaplacianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialLaplacian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialLaplacian(struct soap*, const char *, int, struct _turb1__GetVectorPotentialLaplacian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialLaplacian(struct soap*, const char*, struct _turb1__GetVectorPotentialLaplacian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialLaplacian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticFieldLaplacianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticFieldLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticFieldLaplacianResponse(struct soap*, const char *, int, struct _turb1__GetMagneticFieldLaplacianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticFieldLaplacianResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldLaplacianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticFieldLaplacian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticFieldLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticFieldLaplacian(struct soap*, const char *, int, struct _turb1__GetMagneticFieldLaplacian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticFieldLaplacian(struct soap*, const char*, struct _turb1__GetMagneticFieldLaplacian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldLaplacian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityLaplacianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityLaplacianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityLaplacianResponse(struct soap*, const char *, int, struct _turb1__GetVelocityLaplacianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityLaplacianResponse(struct soap*, const char*, struct _turb1__GetVelocityLaplacianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityLaplacian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityLaplacian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityLaplacian(struct soap*, const char *, int, struct _turb1__GetVelocityLaplacian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityLaplacian(struct soap*, const char*, struct _turb1__GetVelocityLaplacian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityLaplacian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperatureHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperatureHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperatureHessianResponse(struct soap*, const char *, int, struct _turb1__GetTemperatureHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperatureHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperatureHessianResponse(struct soap*, const char*, struct _turb1__GetTemperatureHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperatureHessianResponse(struct soap*, struct _turb1__GetTemperatureHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperatureHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperatureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperatureHessian(struct soap*, const char *, int, struct _turb1__GetTemperatureHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperatureHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperatureHessian(struct soap*, const char*, struct _turb1__GetTemperatureHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperatureHessian(struct soap*, struct _turb1__GetTemperatureHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensityHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensityHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensityHessianResponse(struct soap*, const char *, int, struct _turb1__GetDensityHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensityHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensityHessianResponse(struct soap*, const char*, struct _turb1__GetDensityHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensityHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensityHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensityHessian(struct soap*, const char *, int, struct _turb1__GetDensityHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensityHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensityHessian(struct soap*, const char*, struct _turb1__GetDensityHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensityHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressureHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressureHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressureHessianResponse(struct soap*, const char *, int, struct _turb1__GetPressureHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressureHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressureHessianResponse(struct soap*, const char*, struct _turb1__GetPressureHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressureHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressureHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressureHessian(struct soap*, const char *, int, struct _turb1__GetPressureHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressureHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressureHessian(struct soap*, const char*, struct _turb1__GetPressureHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressureHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialHessianResponse(struct soap*, const char *, int, struct _turb1__GetVectorPotentialHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialHessianResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialHessian(struct soap*, const char *, int, struct _turb1__GetVectorPotentialHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialHessian(struct soap*, const char*, struct _turb1__GetVectorPotentialHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticHessianResponse(struct soap*, const char *, int, struct _turb1__GetMagneticHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticHessianResponse(struct soap*, const char*, struct _turb1__GetMagneticHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticHessian(struct soap*, const char *, int, struct _turb1__GetMagneticHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticHessian(struct soap*, const char*, struct _turb1__GetMagneticHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityHessianResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityHessianResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityHessianResponse(struct soap*, const char *, int, struct _turb1__GetVelocityHessianResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityHessianResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityHessianResponse(struct soap*, const char*, struct _turb1__GetVelocityHessianResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityHessianResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityHessian_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityHessian(struct soap*, const char *, int, struct _turb1__GetVelocityHessian *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityHessian ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityHessian(struct soap*, const char*, struct _turb1__GetVelocityHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityHessian ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperatureGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperatureGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperatureGradientResponse(struct soap*, const char *, int, struct _turb1__GetTemperatureGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperatureGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperatureGradientResponse(struct soap*, const char*, struct _turb1__GetTemperatureGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperatureGradientResponse(struct soap*, struct _turb1__GetTemperatureGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperatureGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperatureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperatureGradient(struct soap*, const char *, int, struct _turb1__GetTemperatureGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperatureGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperatureGradient(struct soap*, const char*, struct _turb1__GetTemperatureGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperatureGradient(struct soap*, struct _turb1__GetTemperatureGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensityGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensityGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensityGradientResponse(struct soap*, const char *, int, struct _turb1__GetDensityGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensityGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensityGradientResponse(struct soap*, const char*, struct _turb1__GetDensityGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensityGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensityGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensityGradient(struct soap*, const char *, int, struct _turb1__GetDensityGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensityGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensityGradient(struct soap*, const char*, struct _turb1__GetDensityGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensityGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressureGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressureGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressureGradientResponse(struct soap*, const char *, int, struct _turb1__GetPressureGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressureGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressureGradientResponse(struct soap*, const char*, struct _turb1__GetPressureGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressureGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressureGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressureGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressureGradient(struct soap*, const char *, int, struct _turb1__GetPressureGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressureGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressureGradient(struct soap*, const char*, struct _turb1__GetPressureGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressureGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialGradientResponse(struct soap*, const char *, int, struct _turb1__GetVectorPotentialGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialGradientResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialGradient(struct soap*, const char *, int, struct _turb1__GetVectorPotentialGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialGradient(struct soap*, const char*, struct _turb1__GetVectorPotentialGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticFieldGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticFieldGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticFieldGradientResponse(struct soap*, const char *, int, struct _turb1__GetMagneticFieldGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticFieldGradientResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticFieldGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticFieldGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticFieldGradient(struct soap*, const char *, int, struct _turb1__GetMagneticFieldGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticFieldGradient(struct soap*, const char*, struct _turb1__GetMagneticFieldGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityGradientResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityGradientResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityGradientResponse(struct soap*, const char *, int, struct _turb1__GetVelocityGradientResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityGradientResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityGradientResponse(struct soap*, const char*, struct _turb1__GetVelocityGradientResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityGradientResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityGradient_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityGradient(struct soap*, const char *, int, struct _turb1__GetVelocityGradient *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityGradient ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityGradient(struct soap*, const char*, struct _turb1__GetVelocityGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityGradient ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityAndTemperatureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityAndTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityAndTemperatureResponse(struct soap*, const char *, int, struct _turb1__GetVelocityAndTemperatureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperatureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityAndTemperatureResponse(struct soap*, const char*, struct _turb1__GetVelocityAndTemperatureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperatureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityAndTemperatureResponse(struct soap*, struct _turb1__GetVelocityAndTemperatureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityAndTemperature_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityAndTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityAndTemperature(struct soap*, const char *, int, struct _turb1__GetVelocityAndTemperature *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperature ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityAndTemperature(struct soap*, const char*, struct _turb1__GetVelocityAndTemperature **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndTemperature ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityAndTemperature(struct soap*, struct _turb1__GetVelocityAndTemperature **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityAndPressureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityAndPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityAndPressureResponse(struct soap*, const char *, int, struct _turb1__GetVelocityAndPressureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityAndPressureResponse(struct soap*, const char*, struct _turb1__GetVelocityAndPressureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityAndPressure_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityAndPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityAndPressure(struct soap*, const char *, int, struct _turb1__GetVelocityAndPressure *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressure ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityAndPressure(struct soap*, const char*, struct _turb1__GetVelocityAndPressure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityAndPressure ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperatureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperatureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperatureResponse(struct soap*, const char *, int, struct _turb1__GetTemperatureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperatureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperatureResponse(struct soap*, const char*, struct _turb1__GetTemperatureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperatureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperatureResponse(struct soap*, struct _turb1__GetTemperatureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetTemperature_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetTemperature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetTemperature(struct soap*, const char *, int, struct _turb1__GetTemperature *const*, const char *);
SOAP_FMAC3 struct _turb1__GetTemperature ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetTemperature(struct soap*, const char*, struct _turb1__GetTemperature **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetTemperature ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetTemperature(struct soap*, struct _turb1__GetTemperature **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensityResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensityResponse(struct soap*, const char *, int, struct _turb1__GetDensityResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensityResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensityResponse(struct soap*, const char*, struct _turb1__GetDensityResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensityResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetDensity_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetDensity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetDensity(struct soap*, struct _turb1__GetDensity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetDensity(struct soap*, const char *, int, struct _turb1__GetDensity *const*, const char *);
SOAP_FMAC3 struct _turb1__GetDensity ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetDensity(struct soap*, const char*, struct _turb1__GetDensity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetDensity(struct soap*, struct _turb1__GetDensity *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetDensity ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetDensity(struct soap*, struct _turb1__GetDensity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressureResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressureResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressureResponse(struct soap*, const char *, int, struct _turb1__GetPressureResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressureResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressureResponse(struct soap*, const char*, struct _turb1__GetPressureResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressureResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetPressure_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetPressure(struct soap*, struct _turb1__GetPressure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetPressure(struct soap*, const char *, int, struct _turb1__GetPressure *const*, const char *);
SOAP_FMAC3 struct _turb1__GetPressure ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetPressure(struct soap*, const char*, struct _turb1__GetPressure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetPressure(struct soap*, struct _turb1__GetPressure *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetPressure ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetPressure(struct soap*, struct _turb1__GetPressure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotentialResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotentialResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotentialResponse(struct soap*, const char *, int, struct _turb1__GetVectorPotentialResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotentialResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotentialResponse(struct soap*, const char*, struct _turb1__GetVectorPotentialResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotentialResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVectorPotential_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVectorPotential_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVectorPotential(struct soap*, const char *, int, struct _turb1__GetVectorPotential *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVectorPotential ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVectorPotential(struct soap*, const char*, struct _turb1__GetVectorPotential **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVectorPotential ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticFieldResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticFieldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticFieldResponse(struct soap*, const char *, int, struct _turb1__GetMagneticFieldResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticFieldResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticFieldResponse(struct soap*, const char*, struct _turb1__GetMagneticFieldResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticFieldResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetMagneticField_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetMagneticField_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetMagneticField(struct soap*, const char *, int, struct _turb1__GetMagneticField *const*, const char *);
SOAP_FMAC3 struct _turb1__GetMagneticField ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetMagneticField(struct soap*, const char*, struct _turb1__GetMagneticField **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetMagneticField ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocityResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocityResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocityResponse(struct soap*, const char *, int, struct _turb1__GetVelocityResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocityResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocityResponse(struct soap*, const char*, struct _turb1__GetVelocityResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocityResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__GetVelocity_DEFINED
#define SOAP_TYPE_PointerTo_turb1__GetVelocity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__GetVelocity(struct soap*, const char *, int, struct _turb1__GetVelocity *const*, const char *);
SOAP_FMAC3 struct _turb1__GetVelocity ** SOAP_FMAC4 soap_in_PointerTo_turb1__GetVelocity(struct soap*, const char*, struct _turb1__GetVelocity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__GetVelocity ** SOAP_FMAC4 soap_get_PointerTo_turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__NullOpResponse_DEFINED
#define SOAP_TYPE_PointerTo_turb1__NullOpResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__NullOpResponse(struct soap*, const char *, int, struct _turb1__NullOpResponse *const*, const char *);
SOAP_FMAC3 struct _turb1__NullOpResponse ** SOAP_FMAC4 soap_in_PointerTo_turb1__NullOpResponse(struct soap*, const char*, struct _turb1__NullOpResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__NullOpResponse ** SOAP_FMAC4 soap_get_PointerTo_turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_turb1__NullOp_DEFINED
#define SOAP_TYPE_PointerTo_turb1__NullOp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_turb1__NullOp(struct soap*, struct _turb1__NullOp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_turb1__NullOp(struct soap*, const char *, int, struct _turb1__NullOp *const*, const char *);
SOAP_FMAC3 struct _turb1__NullOp ** SOAP_FMAC4 soap_in_PointerTo_turb1__NullOp(struct soap*, const char*, struct _turb1__NullOp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_turb1__NullOp(struct soap*, struct _turb1__NullOp *const*, const char*, const char*);
SOAP_FMAC3 struct _turb1__NullOp ** SOAP_FMAC4 soap_get_PointerTo_turb1__NullOp(struct soap*, struct _turb1__NullOp **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfArrayOfFloat_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfArrayOfFloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfArrayOfFloat(struct soap*, struct turb1__ArrayOfArrayOfFloat *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfArrayOfFloat(struct soap*, const char *, int, struct turb1__ArrayOfArrayOfFloat *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfArrayOfFloat ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfArrayOfFloat(struct soap*, const char*, struct turb1__ArrayOfArrayOfFloat **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfArrayOfFloat(struct soap*, struct turb1__ArrayOfArrayOfFloat *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfArrayOfFloat ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfArrayOfFloat(struct soap*, struct turb1__ArrayOfArrayOfFloat **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfSGSTensor_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfSGSTensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfSGSTensor(struct soap*, struct turb1__ArrayOfSGSTensor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfSGSTensor(struct soap*, const char *, int, struct turb1__ArrayOfSGSTensor *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfSGSTensor ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfSGSTensor(struct soap*, const char*, struct turb1__ArrayOfSGSTensor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfSGSTensor(struct soap*, struct turb1__ArrayOfSGSTensor *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfSGSTensor ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfSGSTensor(struct soap*, struct turb1__ArrayOfSGSTensor **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfThresholdInfo_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfThresholdInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfThresholdInfo(struct soap*, struct turb1__ArrayOfThresholdInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfThresholdInfo(struct soap*, const char *, int, struct turb1__ArrayOfThresholdInfo *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfThresholdInfo ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfThresholdInfo(struct soap*, const char*, struct turb1__ArrayOfThresholdInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfThresholdInfo(struct soap*, struct turb1__ArrayOfThresholdInfo *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfThresholdInfo ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfThresholdInfo(struct soap*, struct turb1__ArrayOfThresholdInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfPressureHessian_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfPressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfPressureHessian(struct soap*, struct turb1__ArrayOfPressureHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfPressureHessian(struct soap*, const char *, int, struct turb1__ArrayOfPressureHessian *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfPressureHessian ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfPressureHessian(struct soap*, const char*, struct turb1__ArrayOfPressureHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfPressureHessian(struct soap*, struct turb1__ArrayOfPressureHessian *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPressureHessian ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfPressureHessian(struct soap*, struct turb1__ArrayOfPressureHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfVelocityHessian_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfVelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfVelocityHessian(struct soap*, struct turb1__ArrayOfVelocityHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfVelocityHessian(struct soap*, const char *, int, struct turb1__ArrayOfVelocityHessian *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfVelocityHessian ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfVelocityHessian(struct soap*, const char*, struct turb1__ArrayOfVelocityHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfVelocityHessian(struct soap*, struct turb1__ArrayOfVelocityHessian *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVelocityHessian ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfVelocityHessian(struct soap*, struct turb1__ArrayOfVelocityHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfVelocityGradient_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfVelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfVelocityGradient(struct soap*, struct turb1__ArrayOfVelocityGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfVelocityGradient(struct soap*, const char *, int, struct turb1__ArrayOfVelocityGradient *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfVelocityGradient ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfVelocityGradient(struct soap*, const char*, struct turb1__ArrayOfVelocityGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfVelocityGradient(struct soap*, struct turb1__ArrayOfVelocityGradient *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVelocityGradient ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfVelocityGradient(struct soap*, struct turb1__ArrayOfVelocityGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfVector3P_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfVector3P_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfVector3P(struct soap*, struct turb1__ArrayOfVector3P *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfVector3P(struct soap*, const char *, int, struct turb1__ArrayOfVector3P *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfVector3P ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfVector3P(struct soap*, const char*, struct turb1__ArrayOfVector3P **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfVector3P(struct soap*, struct turb1__ArrayOfVector3P *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVector3P ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfVector3P(struct soap*, struct turb1__ArrayOfVector3P **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfPressure_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfPressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfPressure(struct soap*, struct turb1__ArrayOfPressure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfPressure(struct soap*, const char *, int, struct turb1__ArrayOfPressure *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfPressure ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfPressure(struct soap*, const char*, struct turb1__ArrayOfPressure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfPressure(struct soap*, struct turb1__ArrayOfPressure *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPressure ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfPressure(struct soap*, struct turb1__ArrayOfPressure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfVector3_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfVector3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfVector3(struct soap*, struct turb1__ArrayOfVector3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfVector3(struct soap*, const char *, int, struct turb1__ArrayOfVector3 *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfVector3 ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfVector3(struct soap*, const char*, struct turb1__ArrayOfVector3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfVector3(struct soap*, struct turb1__ArrayOfVector3 *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfVector3 ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfVector3(struct soap*, struct turb1__ArrayOfVector3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfPoint3_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfPoint3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfPoint3(struct soap*, struct turb1__ArrayOfPoint3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfPoint3(struct soap*, const char *, int, struct turb1__ArrayOfPoint3 *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfPoint3 ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfPoint3(struct soap*, const char*, struct turb1__ArrayOfPoint3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfPoint3(struct soap*, struct turb1__ArrayOfPoint3 *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfPoint3 ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfPoint3(struct soap*, struct turb1__ArrayOfPoint3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ArrayOfFloat_DEFINED
#define SOAP_TYPE_PointerToturb1__ArrayOfFloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ArrayOfFloat(struct soap*, struct turb1__ArrayOfFloat *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ArrayOfFloat(struct soap*, const char *, int, struct turb1__ArrayOfFloat *const*, const char *);
SOAP_FMAC3 struct turb1__ArrayOfFloat ** SOAP_FMAC4 soap_in_PointerToturb1__ArrayOfFloat(struct soap*, const char*, struct turb1__ArrayOfFloat **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ArrayOfFloat(struct soap*, struct turb1__ArrayOfFloat *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ArrayOfFloat ** SOAP_FMAC4 soap_get_PointerToturb1__ArrayOfFloat(struct soap*, struct turb1__ArrayOfFloat **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTofloat_DEFINED
#define SOAP_TYPE_PointerTofloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofloat(struct soap*, float *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofloat(struct soap*, const char *, int, float *const*, const char *);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_in_PointerTofloat(struct soap*, const char*, float **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofloat(struct soap*, float *const*, const char*, const char*);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_get_PointerTofloat(struct soap*, float **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__SGSTensor_DEFINED
#define SOAP_TYPE_PointerToturb1__SGSTensor_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__SGSTensor(struct soap*, struct turb1__SGSTensor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__SGSTensor(struct soap*, const char *, int, struct turb1__SGSTensor *const*, const char *);
SOAP_FMAC3 struct turb1__SGSTensor ** SOAP_FMAC4 soap_in_PointerToturb1__SGSTensor(struct soap*, const char*, struct turb1__SGSTensor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__SGSTensor(struct soap*, struct turb1__SGSTensor *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__SGSTensor ** SOAP_FMAC4 soap_get_PointerToturb1__SGSTensor(struct soap*, struct turb1__SGSTensor **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__ThresholdInfo_DEFINED
#define SOAP_TYPE_PointerToturb1__ThresholdInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__ThresholdInfo(struct soap*, struct turb1__ThresholdInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__ThresholdInfo(struct soap*, const char *, int, struct turb1__ThresholdInfo *const*, const char *);
SOAP_FMAC3 struct turb1__ThresholdInfo ** SOAP_FMAC4 soap_in_PointerToturb1__ThresholdInfo(struct soap*, const char*, struct turb1__ThresholdInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__ThresholdInfo(struct soap*, struct turb1__ThresholdInfo *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__ThresholdInfo ** SOAP_FMAC4 soap_get_PointerToturb1__ThresholdInfo(struct soap*, struct turb1__ThresholdInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__PressureHessian_DEFINED
#define SOAP_TYPE_PointerToturb1__PressureHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__PressureHessian(struct soap*, struct turb1__PressureHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__PressureHessian(struct soap*, const char *, int, struct turb1__PressureHessian *const*, const char *);
SOAP_FMAC3 struct turb1__PressureHessian ** SOAP_FMAC4 soap_in_PointerToturb1__PressureHessian(struct soap*, const char*, struct turb1__PressureHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__PressureHessian(struct soap*, struct turb1__PressureHessian *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__PressureHessian ** SOAP_FMAC4 soap_get_PointerToturb1__PressureHessian(struct soap*, struct turb1__PressureHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__VelocityHessian_DEFINED
#define SOAP_TYPE_PointerToturb1__VelocityHessian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__VelocityHessian(struct soap*, struct turb1__VelocityHessian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__VelocityHessian(struct soap*, const char *, int, struct turb1__VelocityHessian *const*, const char *);
SOAP_FMAC3 struct turb1__VelocityHessian ** SOAP_FMAC4 soap_in_PointerToturb1__VelocityHessian(struct soap*, const char*, struct turb1__VelocityHessian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__VelocityHessian(struct soap*, struct turb1__VelocityHessian *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__VelocityHessian ** SOAP_FMAC4 soap_get_PointerToturb1__VelocityHessian(struct soap*, struct turb1__VelocityHessian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__VelocityGradient_DEFINED
#define SOAP_TYPE_PointerToturb1__VelocityGradient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__VelocityGradient(struct soap*, struct turb1__VelocityGradient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__VelocityGradient(struct soap*, const char *, int, struct turb1__VelocityGradient *const*, const char *);
SOAP_FMAC3 struct turb1__VelocityGradient ** SOAP_FMAC4 soap_in_PointerToturb1__VelocityGradient(struct soap*, const char*, struct turb1__VelocityGradient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__VelocityGradient(struct soap*, struct turb1__VelocityGradient *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__VelocityGradient ** SOAP_FMAC4 soap_get_PointerToturb1__VelocityGradient(struct soap*, struct turb1__VelocityGradient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__Vector3P_DEFINED
#define SOAP_TYPE_PointerToturb1__Vector3P_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__Vector3P(struct soap*, struct turb1__Vector3P *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__Vector3P(struct soap*, const char *, int, struct turb1__Vector3P *const*, const char *);
SOAP_FMAC3 struct turb1__Vector3P ** SOAP_FMAC4 soap_in_PointerToturb1__Vector3P(struct soap*, const char*, struct turb1__Vector3P **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__Vector3P(struct soap*, struct turb1__Vector3P *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__Vector3P ** SOAP_FMAC4 soap_get_PointerToturb1__Vector3P(struct soap*, struct turb1__Vector3P **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__Pressure_DEFINED
#define SOAP_TYPE_PointerToturb1__Pressure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__Pressure(struct soap*, struct turb1__Pressure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__Pressure(struct soap*, const char *, int, struct turb1__Pressure *const*, const char *);
SOAP_FMAC3 struct turb1__Pressure ** SOAP_FMAC4 soap_in_PointerToturb1__Pressure(struct soap*, const char*, struct turb1__Pressure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__Pressure(struct soap*, struct turb1__Pressure *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__Pressure ** SOAP_FMAC4 soap_get_PointerToturb1__Pressure(struct soap*, struct turb1__Pressure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__Vector3_DEFINED
#define SOAP_TYPE_PointerToturb1__Vector3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__Vector3(struct soap*, struct turb1__Vector3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__Vector3(struct soap*, const char *, int, struct turb1__Vector3 *const*, const char *);
SOAP_FMAC3 struct turb1__Vector3 ** SOAP_FMAC4 soap_in_PointerToturb1__Vector3(struct soap*, const char*, struct turb1__Vector3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__Vector3(struct soap*, struct turb1__Vector3 *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__Vector3 ** SOAP_FMAC4 soap_get_PointerToturb1__Vector3(struct soap*, struct turb1__Vector3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToturb1__Point3_DEFINED
#define SOAP_TYPE_PointerToturb1__Point3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToturb1__Point3(struct soap*, struct turb1__Point3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToturb1__Point3(struct soap*, const char *, int, struct turb1__Point3 *const*, const char *);
SOAP_FMAC3 struct turb1__Point3 ** SOAP_FMAC4 soap_in_PointerToturb1__Point3(struct soap*, const char*, struct turb1__Point3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToturb1__Point3(struct soap*, struct turb1__Point3 *const*, const char*, const char*);
SOAP_FMAC3 struct turb1__Point3 ** SOAP_FMAC4 soap_get_PointerToturb1__Point3(struct soap*, struct turb1__Point3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedByte_DEFINED
#define SOAP_TYPE_PointerTounsignedByte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

/* End of soapH.h */
